<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[The PHP Foundation]]></title>
    <link href="https://thephp.foundation/atom.xml" rel="self"/>
    <link href="https://thephp.foundation/"/>
    <updated>2023-08-28T11:54:04+00:00</updated>
    <id>https://thephp.foundation/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[PHP Core Roundup #15]]></title>
            <link href="https://thephp.foundation/blog/2023/08/01/php-core-roundup-15/"/>
            <updated>2023-08-01T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2023/08/01/php-core-roundup-15/</id>
            <content type="html"><![CDATA[<p>Welcome back to <a href="/blog/tag/roundup/">PHP Core Roundup</a> series! This is post #15, where we highlight and celebrate the improvements made to PHP during the month past by the PHP development team, members of the PHP Foundation, and more.</p>

<blockquote>
  <p>The PHP Foundation is a collective of PHP contributors, veterans, and companies that collaborate to ensure the long-term sustainability of the PHP programming language. The foundation currently supports six contributors focused on PHP's maintenance, debt reduction, and feature development. These contributors work closely with others on coding, documentation, and discussions.</p>
  
  <p>Started over a year ago, the PHP Core Roundup series offers a summary of the latest developments, discussions, and news about PHP Core, contributed by both PHP Foundation members and other participants. This post is the thirteenth in the PHP Core Roundup series.</p>
</blockquote>

<p><div class="px-4 pt-3 border-b border-t -mx-4 border-gray-200">
    <div class="bg-white py-8">
        <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 lg:grid-cols-12 lg:gap-8">
            <div class="max-w-xl text-4xl font-medium tracking-tight text-gray-900 lg:col-span-6">
                Subscribe to PHP Core Roundup newsletter
            </div>
            <form method="POST"
                  action="https://php-foundation.mailcoach.app/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056"
                  class="w-full max-w-md lg:col-span-6">
                <div class="flex gap-x-4">
                    <label for="email-address" class="sr-only">Email address</label>
                    <input id="email-address" name="email" type="email" autocomplete="email" required
                           class="min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                           placeholder="Enter your email">
                    <button type="submit"
                            class="inline-block py-2 no-underline px-6 !text-white bg-[#7f52ff] rounded-3xl hover:bg-[rgba(127,82,255,.8)]">
                        Subscribe
                    </button>
                </div>
                <div class="mt-4 text-sm leading-6 text-gray-900">
                    We care about your data.
                    Read our <a href="https://thephp.foundation/privacy-policy"
                                class="font-semibold text-indigo-600 hover:text-indigo-500 no-underline">privacy policy</a>.
                </div>
            </form>
        </div>
    </div>
</div>
</p>

<h2 id="php-8.3-feature-freeze">PHP 8.3 Feature-Freeze</h2>

<p>On July 18, PHP 8.3 branch reached its feature-freeze. As the name suggests, the list of features we plan to ship with PHP 8.3 is now frozen. Contributors who wish to make substantial changes to PHP should now target the next PHP version, PHP 8.4.</p>

<p>In the coming weeks, the PHP Foundation members, the PHP development team, and contributors will be making improvements to get PHP 8.3 ready for production release.</p>

<p>Release managers elected for PHP 8.3, Pierrick Charron, Jakub Zelenka, and Eric Mann will have the final say in case a major change must be made to the PHP 8.3.</p>

<h2 id="php-8.3-beta-release">PHP 8.3 Beta Release</h2>

<p>The second beta release of PHP 8.3 was released this week. Now would be an ideal time to test your PHP applications on PHP 8.3.</p>

<p>Compiled Windows binaries are available at <a href="https://windows.php.net/qa/">windows.php.net/qa</a>, <a href="https://hub.docker.com/_/php/tags?page=1&amp;name=8.3.0">Docker images</a> are available at Docker Hub, and source code at <a href="https://github.com/php/php-src">php/php-src repository on GitHub</a> to compile yourself. On Homebrew, <code>PHP 8.3.0-dev</code> packages are available from <code><a href="https://github.com/shivammathur/homebrew-php">shivammathur/php</a></code> tap.</p>

<p>CI/CD platforms that use Docker images can use the PHP 8.2 docker images available with various base images. GitHub Actions can also make use of <code><a href="https://github.com/shivammathur/setup-php">shivammathur/setup-php</a></code> action, which supports PHP 8.3 builds.</p>

<h2 id="php-bug-fix-releases">PHP Bug Fix Releases</h2>

<p>The PHP development team released two new versions in July 2023:</p>

<p><strong><a href="https://www.php.net/archive/2023.php#2023-07-06-2">PHP 8.2.8</a></strong> and <strong><a href="https://www.php.net/archive/2023.php#2023-07-06-3">PHP 8.1.21</a></strong></p>

<p>These releases include bug fixes across various components such as CLI, Core, Curl, DOM, Opcache, OpenSSL, PGSQL, Phar, SPL, and Standard.</p>

<h2 id="recent-rfcs-and-mailing-list-discussions">Recent RFCs and Mailing List Discussions</h2>

<blockquote>
  <p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net website</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>
</blockquote>

<p><br>
Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, documentation, and the php.net website. Here is a summary of some changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<h2 id="rfc-updates">RFC Updates</h2>

<h3 id="accepted%3A-pdo-driver-specific-sub-classes-by-danack">Accepted: <a href="https://wiki.php.net/rfc/pdo_driver_specific_subclasses">PDO driver specific sub-classes</a> by Danack</h3>

<p>PHP's PDO extension supports connecting to multiple database software by using different database drivers available. Some of these drivers include MySQL, PostgreSQL, and SQLite. Although most of these database support a common set of features, all of these databases have evolved to provide additional features that PDO <em>sometimes</em> can support, but there is no easy way for a library to check for these capabilities without having to inspect the driver and their versions.</p>

<p>This RFC proposes to create driver-specific sub classes of <code>\PDO</code>, so libraries and applications can easily indicate the database driver they expect, and make use of IDE autocompletion and proper error handling.</p>

<p>The vote was unanimously accepted, and is pending implementation.</p>

<h3 id="accepted%3A-deprecate-functions-with-overloaded-signatures-by-m%C3%A1t%C3%A9-kocsis-%F0%9F%92%9C">Accepted: <a href="https://wiki.php.net/rfc/deprecate_functions_with_overloaded_signatures">Deprecate Functions with Overloaded Signatures</a> by Máté Kocsis 💜</h3>

<p>This RFC proposes to deprecate a number of functions that have overloaded signatures, meaning they behave differently based on the number or type of arguments passed to them. The goal is to make PHP's function signatures more consistent and predictable.</p>

<h3 id="implemented%3A-deprecations-for-php-8.3-by-george-peter-banyard-%F0%9F%92%9C%2C-christoph-m.-becker%2C-m%C3%A1t%C3%A9-kocsis-%F0%9F%92%9C%2C-tim-d%C3%BCsterhus%2C-go-kudo%2C-andreas-heigl">Implemented: <a href="https://wiki.php.net/rfc/deprecations_php_8_3">Deprecations for PHP 8.3</a> by George Peter Banyard 💜, Christoph M. Becker, Máté Kocsis 💜, Tim Düsterhus, Go Kudo, Andreas Heigl</h3>

<p>The aim is to clean up some of the older, less consistent parts of PHP to make the language more reliable and predictable. The following list provides a short overview of the functionality targeted for deprecation:</p>

<ul>
<li>Passing negative <code>$widths</code> to <code>mb_strimwidth()</code></li>
<li>The <code>NumberFormatter::TYPE_CURRENCY</code> constant</li>
<li><code>MT_RAND_PHP</code></li>
<li>Calling <code>ldap_connect</code> with 2 parameters</li>
</ul>

<h3 id="implemented%3A-marking-overridden-methods-by-tim-d%C3%BCsterhus">Implemented: <a href="https://wiki.php.net/rfc/marking_overriden_methods">Marking Overridden Methods</a> by Tim Düsterhus</h3>

<p>PHP 8.3 will have a new attribute <code>#[\Override]</code>. If this attribute is added to a method, the engine will validate that a method with the same name exists in a parent class or any of the implemented interfaces. If no such method exists, a compile time error will be emitted.</p>

<p>The similar concepts exist in Java, TypeScript, C++, C#, Swift, Kotlin, and other languages.</p>

<h3 id="implemented%3A-path-to-saner-increment%2Fdecrement-operators-by-george-peter-banyard--%F0%9F%92%9C">Implemented: <a href="https://wiki.php.net/rfc/saner-inc-dec-operators">Path to Saner Increment/Decrement operators</a> by George Peter Banyard  💜</h3>

<p>This RFC proposed several improvements to normalize the behavior of <code>$v++</code> and <code>$v--</code> to be the same as <code>$v += 1</code> and <code>$v -= 1</code>, which PHP is currently inconsistent on.</p>

<p>It deprecates certain patterns, and introduces two new functions named <code>str_increment</code> and <code>str_decrement</code> to provide the deprecated behavior in a conscious way.</p>

<p><br></p>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Following are some changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements.</p>

<hr />

<h3 id="full-list-of-commits--since-php-core-roundup-%2314">Full list of commits  since <a href="/blog/2023/07/01/php-core-roundup-14/">PHP Core Roundup #14</a></h3>

<p>Commits are in the order they were added, grouped by author in alphabetical order.</p>

<details>

<summary>Click here to expand</summary>

<h3 id="adam-saponara">Adam Saponara</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/9669">GH-9669</a>: phpdbg -h options doesn't list the -z option in <a href="https://github.com/php/php-src/pull/9713">GH-9713</a></li>
</ul>

<h3 id="anatol-belski">Anatol Belski</h3>

<ul>
<li>fileinfo: Backport xz detection fix in <a href="https://github.com/php/php-src/commit/86f79b299e">86f79b299e</a></li>
<li>fileinfo: Backport xz detection patch in <a href="https://github.com/php/php-src/commit/97f0d97d2a">97f0d97d2a</a></li>
<li>fileinfo: Add test for xz type in <a href="https://github.com/php/php-src/commit/292e10b14b">292e10b14b</a></li>
<li>NEWS: Add note for #11298 in <a href="https://github.com/php/php-src/commit/928fc68c9e">928fc68c9e</a></li>
<li>NEWS: Add note for #11298 in <a href="https://github.com/php/php-src/commit/4e8b1ddc53">4e8b1ddc53</a></li>
</ul>

<h3 id="andreas-heigl">Andreas Heigl</h3>

<ul>
<li>Deprecate <code>ldap_connect</code> with two parameters in <a href="https://github.com/php/php-src/pull/5177">GH-5177</a></li>
</ul>

<h3 id="arnaud-le-blanc-%F0%9F%92%9C">Arnaud Le Blanc 💜</h3>

<ul>
<li>Add stack limit check in <code>zend_eval_const_expr()</code> in <a href="https://github.com/php/php-src/pull/11424">GH-11424</a></li>
<li>Expose time spent collecting cycles in <code>gc_status()</code> in <a href="https://github.com/php/php-src/pull/11523">GH-11523</a></li>
<li>Remove WeakMap entries whose key is only reachable through the entry value in <a href="https://github.com/php/php-src/pull/10932">GH-10932</a></li>
<li>Add AMPHP, ReactPHP, Revolt PHP to community job in <a href="https://github.com/php/php-src/pull/10933">GH-10933</a></li>
</ul>

<h3 id="athos-ribeiro">Athos Ribeiro</h3>

<ul>
<li>Fix <a href="https://bugs.php.net/bug.php?id=79026">#79026</a>: Allow <code>PHP_EXTRA_VERSION</code> overrides in <a href="https://github.com/php/php-src/pull/11706">GH-11706</a></li>
</ul>

<h3 id="bob-weinand">Bob Weinand</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11548">GH-11548</a> (Argument corruption when calling <code>XMLReader::open</code> or <code>XMLReader::XML</code> non-statically with observer active) in <a href="https://github.com/php/php-src/commit/cad47be8b6">cad47be8b6</a></li>
</ul>

<h3 id="bohwaz">BohwaZ</h3>

<ul>
<li>[RFC] Transition SQLite3 to exceptions in <a href="https://github.com/php/php-src/pull/11058">GH-11058</a></li>
</ul>

<h3 id="cristian-rodr%C3%ADguez">Cristian Rodríguez</h3>

<ul>
<li>proc_open: Use posix_spawn(3) interface on systems where it is profitable in <a href="https://github.com/php/php-src/pull/7933">GH-7933</a></li>
</ul>

<h3 id="david-carlier">David CARLIER</h3>

<ul>
<li><code>ext/intl</code>: intl_CharFromString using <code>zend_string_truncate</code> to adjust th… in <a href="https://github.com/php/php-src/pull/11575">GH-11575</a></li>
<li>zend stack: prepare <code>zend_call_stack_get</code> implementation for OpenBSD. in <a href="https://github.com/php/php-src/pull/11578">GH-11578</a></li>
<li>zend call stack fix freebsd code path. in <a href="https://github.com/php/php-src/pull/11766">GH-11766</a></li>
<li>zend vm savee registers support for riscv 64. in <a href="https://github.com/php/php-src/pull/11773">GH-11773</a></li>
</ul>

<h3 id="david-carlier">David Carlier</h3>

<ul>
<li>zend call stack, follow-up on 75e9980 in <a href="https://github.com/php/php-src/commit/343b599747">343b599747</a></li>
<li><code>zend_gdb</code> disable gdb detection for FreeBSD &lt; 11 in <a href="https://github.com/php/php-src/commit/69b4360e88">69b4360e88</a></li>
</ul>

<h3 id="derick-rethans-%F0%9F%92%9C">Derick Rethans 💜</h3>

<ul>
<li>Import timelib 2022.08 in <a href="https://github.com/php/php-src/commit/c02ac26685">c02ac26685</a></li>
<li>Fix bug <a href="https://github.com/php/php-src/issues/11600">GH-11600</a>: Can't parse time strings which include (narrow) non-breaking space characters in <a href="https://github.com/php/php-src/commit/a4bdaeabf6">a4bdaeabf6</a></li>
<li>CS in <a href="https://github.com/php/php-src/commit/b669cb4c1b">b669cb4c1b</a></li>
<li>Make the new <code>DatePeriod::createFromISO8601String</code> method emit DateTimeImmutable objects in <a href="https://github.com/php/php-src/commit/82ff4c5e84">82ff4c5e84</a></li>
</ul>

<h3 id="dmitry-stogov">Dmitry Stogov</h3>

<ul>
<li>Fixed incorrect QM_ASSIGN elimination in <a href="https://github.com/php/php-src/commit/9fc0eab4b4">9fc0eab4b4</a></li>
<li>Fixed incorrect QM_ASSIGN elimination in <a href="https://github.com/php/php-src/commit/b5f8a7270a">b5f8a7270a</a></li>
</ul>

<h3 id="eno">Eno</h3>

<ul>
<li>Improve openssl ext to generate EC keys with custom EC parameters in <a href="https://github.com/php/php-src/pull/9991">GH-9991</a></li>
</ul>

<h3 id="filip-zr%C5%AFst">Filip Zrůst</h3>

<ul>
<li>Improve DTrace probe generation /w non-default compiler in <a href="https://github.com/php/php-src/pull/11643">GH-11643</a></li>
</ul>

<h3 id="gabriel-fontes">Gabriel Fontes</h3>

<ul>
<li>Add fallback value syntax for ini variables in <a href="https://github.com/php/php-src/commit/bc8b9aedf6">bc8b9aedf6</a></li>
<li>small fixes in <a href="https://github.com/php/php-src/commit/cd9dba81c7">cd9dba81c7</a></li>
</ul>

<h3 id="george-peter-banyard-%F0%9F%92%9C">George Peter Banyard 💜</h3>

<ul>
<li>Use binary safe case compare in new <code>zend_string</code> API in <a href="https://github.com/php/php-src/commit/eb5cc1372c">eb5cc1372c</a></li>
<li>Revert "Use binary safe case compare in new <code>zend_string</code> API" in <a href="https://github.com/php/php-src/commit/a342138e17">a342138e17</a></li>
<li>Add tests for uncastable streams and dataloss streams in <a href="https://github.com/php/php-src/pull/10173">GH-10173</a></li>
<li>Remove assert.bail INI setting usage in DOMDocument tests in <a href="https://github.com/php/php-src/commit/d510b5ae3e">d510b5ae3e</a></li>
<li><code>ext/posix</code>: <code>posix_isatty()</code> fix use-of-uninitialized-value in <a href="https://github.com/php/php-src/pull/11676">GH-11676</a></li>
<li><code>ext/intl</code>: Fix memory leak in <code>MessageFormatter::format()</code> in <a href="https://github.com/php/php-src/pull/11658">GH-11658</a></li>
<li>RFC: Deprecate remains of string evaluated code assertions in <a href="https://github.com/php/php-src/pull/11671">GH-11671</a></li>
<li>Deprecate passing a negative width to <code>mb_strimwidth()</code> in <a href="https://github.com/php/php-src/commit/af3c220abb">af3c220abb</a></li>
<li>Add support for deprecating class constants in <a href="https://github.com/php/php-src/commit/3e2dbbf9c2">3e2dbbf9c2</a></li>
<li>Deprecate <code>NumberFormater::TYPE_CURRENCY</code> constant in <a href="https://github.com/php/php-src/commit/d65251e6e8">d65251e6e8</a></li>
<li>[RFC] Path to Saner Increment/Decrement operators in <a href="https://github.com/php/php-src/pull/10358">GH-10358</a></li>
<li><code>libxml_get_external_entity_loader()</code>: test for incompatible resource being loaded in <a href="https://github.com/php/php-src/pull/11728">GH-11728</a></li>
<li>Refactor BCMath bundledlib and extension in <a href="https://github.com/php/php-src/pull/10774">GH-10774</a></li>
<li><code>ext/mysqli</code>: Remove custom <code>sys_get_temp_dir()</code> function in <a href="https://github.com/php/php-src/commit/17a80eb08b">17a80eb08b</a></li>
<li><code>ext/mysqli</code>: Remove conditional function declaration in <a href="https://github.com/php/php-src/commit/0c21715935">0c21715935</a></li>
<li><code>ext/mysqli</code>: Stop using global variable in connection test helper in <a href="https://github.com/php/php-src/commit/8582d97b8c">8582d97b8c</a></li>
<li><code>ext/mysqli</code>: Remove catchable fatal error handler in <a href="https://github.com/php/php-src/commit/b389846d05">b389846d05</a></li>
</ul>

<h3 id="ilija-tovilo-%F0%9F%92%9C">Ilija Tovilo 💜</h3>

<ul>
<li>Fix <code>ext/zip</code> <code>arginfo.h</code> in <a href="https://github.com/php/php-src/commit/73cf12d6ac">73cf12d6ac</a></li>
<li>Fix mis-compilation of by-reference nullsafe operator in <a href="https://github.com/php/php-src/pull/11540">GH-11540</a></li>
<li>Fix missing "Optional parameter before required" deprecation on union null type in <a href="https://github.com/php/php-src/pull/11497">GH-11497</a></li>
<li>Fix serialization of RC1 objects appearing in object graph twice in <a href="https://github.com/php/php-src/pull/11349">GH-11349</a></li>
<li>xfail socket zerocopy test on Cirrus + arm in <a href="https://github.com/php/php-src/pull/11553">GH-11553</a></li>
<li>Attempt to fix <code>gh11498.phpt</code> on MSAN in <a href="https://github.com/php/php-src/commit/07dd0c80a8">07dd0c80a8</a></li>
<li>Revert "Fix <a href="https://github.com/php/php-src/issues/9967">GH-9967</a> Add support for generating custom function, class const, and property attributes in stubs" in <a href="https://github.com/php/php-src/commit/ef4f08832c">ef4f08832c</a></li>
<li>Revert "Merge branch 'PHP-8.2'" in <a href="https://github.com/php/php-src/commit/7b355e8d34">7b355e8d34</a></li>
<li>Use waitpid(-1) over WAIT_ANY in <a href="https://github.com/php/php-src/pull/11588">GH-11588</a></li>
<li>Revert "Revert "Remove name field from the <code>zend_constant</code> struct (#10954)"" in <a href="https://github.com/php/php-src/commit/ad1b70d67e">ad1b70d67e</a></li>
<li>Revert "Fix test after reverted commit" in <a href="https://github.com/php/php-src/commit/188072a58f">188072a58f</a></li>
<li>Attempt to improve setup-slapd.sh stability in <a href="https://github.com/php/php-src/pull/11590">GH-11590</a></li>
<li>Retire AppVeyor in <a href="https://github.com/php/php-src/pull/11566">GH-11566</a></li>
<li>Fix trailing if element JMP lineno in <a href="https://github.com/php/php-src/pull/11598">GH-11598</a></li>
<li>Fix use-of-uninitialized-value with ??= on assert in <a href="https://github.com/php/php-src/pull/11581">GH-11581</a></li>
<li>Implement flaky test section in <a href="https://github.com/php/php-src/pull/11325">GH-11325</a></li>
<li>Fix incorrect handling of unwind and graceful exit exceptions in <a href="https://github.com/php/php-src/pull/11608">GH-11608</a></li>
<li>Skip <code>xleak</code> tests on asan in <a href="https://github.com/php/php-src/pull/11610">GH-11610</a></li>
<li>Refine skipif for cirrus+arm in <a href="https://github.com/php/php-src/pull/11612">GH-11612</a></li>
<li>Fix double-compilation of arrow-function in <a href="https://github.com/php/php-src/pull/11632">GH-11632</a></li>
<li>Fix <code>bug-gh11600.phpt</code> in <a href="https://github.com/php/php-src/commit/57229836d4">57229836d4</a></li>
<li>Always memoize assert in <a href="https://github.com/php/php-src/pull/11686">GH-11686</a></li>
<li>Fix missing iface class const inheritance type check in <a href="https://github.com/php/php-src/commit/7343ae5d3c">7343ae5d3c</a></li>
<li>Fix iface const visibility variance check in <a href="https://github.com/php/php-src/commit/d9db446065">d9db446065</a></li>
<li>Fix use-of-uninitialized-value when calling <code>php_posix_stream_get_fd</code> in <a href="https://github.com/php/php-src/pull/11694">GH-11694</a></li>
<li>Fix gc_status type info in <a href="https://github.com/php/php-src/pull/11722">GH-11722</a></li>
<li>Revert "Remove name field from the <code>zend_constant</code> struct (#10954)" in <a href="https://github.com/php/php-src/pull/11604">GH-11604</a></li>
<li>Fix clang warning in <a href="https://github.com/php/php-src/pull/11729">GH-11729</a></li>
<li>Use :- as ini interpolation fallback separator in <a href="https://github.com/php/php-src/commit/a48b977d3f">a48b977d3f</a></li>
<li>Always memoize calls in lhs of coalesce assignment in <a href="https://github.com/php/php-src/pull/11592">GH-11592</a></li>
<li>Resolve <code>open_basedir</code> paths on ini update in <a href="https://github.com/php/php-src/pull/10987">GH-10987</a></li>
<li>Fix <code>hash_pbkdf2</code> options parameter in <a href="https://github.com/php/php-src/pull/11731">GH-11731</a></li>
<li>Fix use-after-free when unregistering user stream wrapper from itself in <a href="https://github.com/php/php-src/pull/11737">GH-11737</a></li>
<li>Fix leaking definitions on <code>FFI::cdef()</code>->new() in <a href="https://github.com/php/php-src/pull/11751">GH-11751</a></li>
<li>Fix merge conflict in <a href="https://github.com/php/php-src/commit/ac99f7306c">ac99f7306c</a></li>
<li>Fix <code>open_basedir</code> leak in <a href="https://github.com/php/php-src/pull/11780">GH-11780</a></li>
<li>Call cast_object handler from get_properties_for in <a href="https://github.com/php/php-src/pull/11583">GH-11583</a></li>
<li>Replace xfail with skipif in <code>calendar_clear_variation1.phpt</code> in <a href="https://github.com/php/php-src/pull/11801">GH-11801</a></li>
<li>Fix uaf of MBSTRG(all_encodings_list) in <a href="https://github.com/php/php-src/pull/11822">GH-11822</a></li>
<li>Fix uouv in <code>array_column</code> in <a href="https://github.com/php/php-src/commit/2053af6628">2053af6628</a></li>
<li>Fix uouv in <code>password_needs_rehash()</code> and <code>password_hash()</code> in <a href="https://github.com/php/php-src/commit/a145b40fa6">a145b40fa6</a></li>
<li>Fix various uouv in intl in <a href="https://github.com/php/php-src/commit/322da7bcc3">322da7bcc3</a></li>
<li>Fix some uouv in <code>ext/pgsql</code> in <a href="https://github.com/php/php-src/commit/82aa4253f1">82aa4253f1</a></li>
</ul>

<h3 id="jakub-zelenka-%F0%9F%92%9C">Jakub Zelenka 💜</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11242">GH-11242</a>: Use dynamic buffer for large length in stream mem copy in <a href="https://github.com/php/php-src/commit/4a5d13e205">4a5d13e205</a></li>
</ul>

<h3 id="jorg-adam-sowa">Jorg Adam Sowa</h3>

<ul>
<li>Extend tests of bcmath extension in <a href="https://github.com/php/php-src/pull/11563">GH-11563</a></li>
<li>Reorder list construction in the function php_intpow10 in <a href="https://github.com/php/php-src/pull/11683">GH-11683</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11761">GH-11761</a>: Bcmath numbers with trailing zeros  in <a href="https://github.com/php/php-src/pull/11798">GH-11798</a></li>
</ul>

<h3 id="joshua-behrens">Joshua Behrens</h3>

<ul>
<li>Warn when fpm socket was not registered on the expected path in <a href="https://github.com/php/php-src/pull/11066">GH-11066</a></li>
</ul>

<h3 id="juliette">Juliette</h3>

<ul>
<li>GH Actions: auto-skip CI on PRs containing only docs changes in <a href="https://github.com/php/php-src/pull/11839">GH-11839</a></li>
</ul>

<h3 id="k%C3%A9vin-dunglas">Kévin Dunglas</h3>

<ul>
<li>tests(ext-curl): fix HTTP/2 Server Push tests in <a href="https://github.com/php/php-src/pull/10669">GH-10669</a></li>
</ul>

<h3 id="marc-bennewitz">Marc Bennewitz</h3>

<ul>
<li><code>number_format()</code> Support rounding negative places in <a href="https://github.com/php/php-src/pull/11487">GH-11487</a></li>
<li>Prevent decimal int precision loss in <code>number_format()</code> in <a href="https://github.com/php/php-src/pull/11584">GH-11584</a></li>
<li>Prevent int overflow on $decimals in number_format in <a href="https://github.com/php/php-src/pull/11714">GH-11714</a></li>
</ul>

<h3 id="michael-orlitzky">Michael Orlitzky</h3>

<ul>
<li>Fix most external GD 2.3.3 compatibility in <a href="https://github.com/php/php-src/pull/11257">GH-11257</a></li>
<li>ext/session/tests: more lenient expected output checks. in <a href="https://github.com/php/php-src/pull/11631">GH-11631</a></li>
<li>ext/imap/tests/<em>mutf7</em>.phpt: update for missing utf8_to_mutf7() in <a href="https://github.com/php/php-src/pull/11654">GH-11654</a></li>
<li>ext/sockets/tests/mcast_ipv6_*.phpt: suppress no-ipv6 warning in <a href="https://github.com/php/php-src/pull/11651">GH-11651</a></li>
<li>Skip oci8 tests when no database is available in <a href="https://github.com/php/php-src/pull/11820">GH-11820</a></li>
</ul>

<h3 id="mikhail-galanin">Mikhail Galanin</h3>

<ul>
<li>Check if restart is pending before trying to lock SHM in <a href="https://github.com/php/php-src/pull/11805">GH-11805</a></li>
</ul>

<h3 id="m%C3%A1t%C3%A9-kocsis-%F0%9F%92%9C">Máté Kocsis 💜</h3>

<ul>
<li>Add support for typed class constants in stubs in <a href="https://github.com/php/php-src/commit/3906bccc00">3906bccc00</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/9967">GH-9967</a> Add support for generating custom function, class const, and property attributes in stubs in <a href="https://github.com/php/php-src/commit/d7ab0ff0c8">d7ab0ff0c8</a></li>
<li>Revert "Remove name field from the <code>zend_constant</code> struct (#10954)" in <a href="https://github.com/php/php-src/commit/9f4bd3040d">9f4bd3040d</a></li>
<li>Add support for extending multiple interfaces in the manual in <a href="https://github.com/php/php-src/commit/3c6590a391">3c6590a391</a></li>
<li>Display the readonly modifier for readonly classes in <a href="https://github.com/php/php-src/commit/4db4f0ba00">4db4f0ba00</a></li>
<li>Fix test after reverted commit in <a href="https://github.com/php/php-src/commit/0ce4f91d73">0ce4f91d73</a></li>
<li>Declare type for <code>ext/ffi</code> internal class constants in <a href="https://github.com/php/php-src/commit/6988973bc6">6988973bc6</a></li>
<li>Implement <code>DatePeriod::createFromISO8601String</code>() in <a href="https://github.com/php/php-src/commit/9c7c0a0b93">9c7c0a0b93</a></li>
<li>Deprecate calling <code>dba_fetch()</code> with $dba at the 3rd parameter in <a href="https://github.com/php/php-src/commit/134441efa9">134441efa9</a></li>
<li>Deprecate calling <code>FFI::cast()</code>, <code>FFI::new()</code>, and <code>FFI::type()</code> statically in <a href="https://github.com/php/php-src/commit/4acf0084dc">4acf0084dc</a></li>
<li>Deprecate calling <code>get_class()</code> and <code>get_parent_class()</code> without arguments in <a href="https://github.com/php/php-src/commit/1126232053">1126232053</a></li>
<li>Add <code>IntlCalendar::setDate()</code> and <code>IntlCalendar::setDateTime()</code> in <a href="https://github.com/php/php-src/commit/f236eb83b4">f236eb83b4</a></li>
<li>Implement <code>IntlGregorianCalendar::createFromDate()</code> and <code>IntlGregorianCalendar::createFromDateTime()</code> in <a href="https://github.com/php/php-src/commit/1486f52a12">1486f52a12</a></li>
<li>Implement <code>ldap_connect_wallet()</code> in <a href="https://github.com/php/php-src/commit/72aada3c7c">72aada3c7c</a></li>
<li>Implement <code>ldap_exop_sync</code> in <a href="https://github.com/php/php-src/commit/b3bd55f244">b3bd55f244</a></li>
<li>Make the $row param of <code>pg_fetch_result()</code>, <code>pg_field_prtlen()</code> and <code>pg_field_is_null()</code> nullable in <a href="https://github.com/php/php-src/commit/7ae0273ba3">7ae0273ba3</a></li>
<li>Deprecate <code>Phar::setStub</code>(resource $stub, int $length) in <a href="https://github.com/php/php-src/commit/840d665583">840d665583</a></li>
<li>Implement <code>ReflectionMethod::createFromMethodName()</code> in <a href="https://github.com/php/php-src/commit/f41220fe5d">f41220fe5d</a></li>
<li>Deprecate <code>ReflectionProperty::setValue()</code> with an incorrect 1st arg type in <a href="https://github.com/php/php-src/commit/d9a7f6741e">d9a7f6741e</a></li>
<li>Implement <code>stream_context_set_options()</code> in <a href="https://github.com/php/php-src/commit/a5ad7e09d5">a5ad7e09d5</a></li>
<li>Declare type for <code>ext/snmp</code> internal class constants in <a href="https://github.com/php/php-src/commit/1dcac9619c">1dcac9619c</a></li>
<li>Add UPGRADING note about SNMP class constant type declarations in <a href="https://github.com/php/php-src/commit/0f64b01aee">0f64b01aee</a></li>
<li>Fix misleading pass by reference error message in <a href="https://github.com/php/php-src/pull/10639">GH-10639</a></li>
<li>Use new class synopsis generating markup in <a href="https://github.com/php/php-src/pull/11809">GH-11809</a></li>
</ul>

<h3 id="niels-dossche">Niels Dossche</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11567">GH-11567</a>: <code>mb_str_pad</code> causes access violation in <a href="https://github.com/php/php-src/commit/78d98e50c4">78d98e50c4</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11300">GH-11300</a>: license issue: restricted unicode license headers in <a href="https://github.com/php/php-src/pull/11572">GH-11572</a></li>
<li>Remove always-false check in <a href="https://github.com/php/php-src/commit/45c93c173c">45c93c173c</a></li>
<li>Add negative test for isElementContentWhitespace() in <a href="https://github.com/php/php-src/commit/2aebca899c">2aebca899c</a></li>
<li>Add edge-case testcase for offset in DOMNamedNodeMap in <a href="https://github.com/php/php-src/commit/bccd924e3f">bccd924e3f</a></li>
<li>Add tests for DOMProcessingInstruction class in <a href="https://github.com/php/php-src/commit/f62757e74a">f62757e74a</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/9628">GH-9628</a>: Implicitly removing nodes from \DOMDocument breaks existing references in <a href="https://github.com/php/php-src/pull/11576">GH-11576</a></li>
<li>Cleanup macro usage in <code>ext/dom</code> and <code>ext/libxml</code> in <a href="https://github.com/php/php-src/commit/87e7b61d8f">87e7b61d8f</a></li>
<li>Implement <a href="https://github.com/php/php-src/issues/10024">GH-10024</a>: support linting multiple files at once using php -l in <a href="https://github.com/php/php-src/pull/10024">GH-10024</a></li>
<li>Fix replaced error handling in SQLite3Stmt::__construct in <a href="https://github.com/php/php-src/pull/11607">GH-11607</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/10562">GH-10562</a>: Memory leak and invalid state with consecutive <code>ftp_nb_fget</code> in <a href="https://github.com/php/php-src/pull/11606">GH-11606</a></li>
<li>Remove unused is_recursive entry in <a href="https://github.com/php/php-src/commit/1fbbd2b250">1fbbd2b250</a></li>
<li>Reserve less file space if possible in a directory entry in <a href="https://github.com/php/php-src/commit/00c1e7bf0f">00c1e7bf0f</a></li>
<li>Cache d_type in directory entry in <a href="https://github.com/php/php-src/commit/0b2e6bc2b0">0b2e6bc2b0</a></li>
<li>Fix crash when an invalid callback function is passed to CURLMOPT_PUSHFUNCTION in <a href="https://github.com/php/php-src/pull/11639">GH-11639</a></li>
<li>Fix return value of _php_server_push_callback in case of failure in <a href="https://github.com/php/php-src/commit/dc9adda653">dc9adda653</a></li>
<li>Add missing check on EVP_VerifyUpdate() in phar util in <a href="https://github.com/php/php-src/pull/11640">GH-11640</a></li>
<li>Avoid copying the stat buffer on a cache hit in <a href="https://github.com/php/php-src/pull/11628">GH-11628</a></li>
<li>Update type inference for <code>ZEND_GET_CLASS</code> and <code>ZEND_GET_CALLED_CLASS</code> in <a href="https://github.com/php/php-src/commit/838d80e7ee">838d80e7ee</a></li>
<li>Update type inference for <code>ZEND_STRLEN</code> in <a href="https://github.com/php/php-src/commit/3d944a367e">3d944a367e</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11625">GH-11625</a>: <code>DOMElement::replaceWith()</code> doesn't replace node with DOMDocumentFragment but just deletes node or causes wrapping &lt;>&lt;/> depending on libxml2 version in <a href="https://github.com/php/php-src/pull/11627">GH-11627</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11629">GH-11629</a>: <code>bug77020.phpt</code> tries to send mail in <a href="https://github.com/php/php-src/pull/11636">GH-11636</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11630">GH-11630</a>: <code>proc_nice_basic.phpt</code> only works at certain nice levels in <a href="https://github.com/php/php-src/pull/11635">GH-11635</a></li>
<li>Remove always-true condition from <code>php_dom_iterator_move_forward()</code> in <a href="https://github.com/php/php-src/commit/a2fde39169">a2fde39169</a></li>
<li>Remove always-true condition from xml_utf8_decode() in <a href="https://github.com/php/php-src/commit/6d3433e60f">6d3433e60f</a></li>
<li>Cleanup <code>php_libxml_node_decrement_resource()</code> in <a href="https://github.com/php/php-src/commit/75229cb127">75229cb127</a></li>
<li>Fix tests for stat rdev in <a href="https://github.com/php/php-src/commit/6b87e08b82">6b87e08b82</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/10914">GH-10914</a>: OPCache with Enum and Callback functions results in segmentation fault in <a href="https://github.com/php/php-src/pull/11675">GH-11675</a></li>
<li>Add regression test for <a href="https://github.com/php/php-src/issues/11682">GH-11682</a> in <a href="https://github.com/php/php-src/commit/48b246e038">48b246e038</a></li>
<li>Fix <code>bug-gh11600.phpt</code> to work with different ICU versions in <a href="https://github.com/php/php-src/commit/9c47f33a5f">9c47f33a5f</a></li>
<li>Implement <code>DOMNode::contains()</code> in <a href="https://github.com/php/php-src/commit/ea794e9cde">ea794e9cde</a></li>
<li>Avoid string allocation in dom_get_dom1_attribute() for as long as possible in <a href="https://github.com/php/php-src/commit/9880c336be">9880c336be</a></li>
<li>Avoid allocations in <code>DOMElement::getAttribute()</code> in <a href="https://github.com/php/php-src/commit/f04e5059bb">f04e5059bb</a></li>
<li>Handle fragments consisting out of multiple children without a single root correctly in <a href="https://github.com/php/php-src/pull/11698">GH-11698</a></li>
<li>Refactor <code>dom_node_node_name_read()</code> to avoid double allocation in <a href="https://github.com/php/php-src/commit/b3899eb569">b3899eb569</a></li>
<li>Implement <code>DOMElement::getAttributeNames()</code> in <a href="https://github.com/php/php-src/commit/10d7e8dc3a">10d7e8dc3a</a></li>
<li>Implement <code>DOMNode::getRootNode()</code> in <a href="https://github.com/php/php-src/pull/11693">GH-11693</a></li>
<li>Implement <code>DOMElement::className</code> in <a href="https://github.com/php/php-src/pull/11691">GH-11691</a></li>
<li>Implement <code>DOMParentNode::replaceChildren()</code> in <a href="https://github.com/php/php-src/commit/6560c9bf8e">6560c9bf8e</a></li>
<li>Fix ? in <a href="https://github.com/php/php-src/commit/e8f0bdc7f1">e8f0bdc7f1</a></li>
<li>Implement <code>DOMElement::id</code> in <a href="https://github.com/php/php-src/pull/11701">GH-11701</a></li>
<li>Prevent potential deadlock if accelerated globals cannot be allocated in <a href="https://github.com/php/php-src/pull/11718">GH-11718</a></li>
<li>Implement <code>DOMNode::isConnected</code> and <code>DOMNameSpaceNode::isConnected</code> in <a href="https://github.com/php/php-src/pull/11677">GH-11677</a></li>
<li>Implement <code>DOMNode::parentElement</code> and <code>DOMNameSpaceNode::parentElement</code> in <a href="https://github.com/php/php-src/pull/11679">GH-11679</a></li>
<li>Fix build on Windows in <a href="https://github.com/php/php-src/commit/c97507b5c1">c97507b5c1</a></li>
<li>Implement <code>DOMNode::isEqualNode()</code> in <a href="https://github.com/php/php-src/pull/11690">GH-11690</a></li>
<li>Implement <code>DOMElement::insertAdjacent</code>{Element,Text} in <a href="https://github.com/php/php-src/pull/11700">GH-11700</a></li>
<li>Split off some methods so they can be reused in different places in <a href="https://github.com/php/php-src/commit/5b5a3d79da">5b5a3d79da</a></li>
<li>Implement <code>DOMElement::toggleAttribute()</code> in <a href="https://github.com/php/php-src/pull/11696">GH-11696</a></li>
<li>Add new curl constants from curl until (including) 7.87 in <a href="https://github.com/php/php-src/pull/10459">GH-10459</a></li>
<li>Get rid of some unnecessary string conversion in <a href="https://github.com/php/php-src/pull/11733">GH-11733</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11715">GH-11715</a>: opcache.interned_strings_buffer either has no effect or <code>opcache_get_status()</code> / phpinfo() is wrong in <a href="https://github.com/php/php-src/pull/11717">GH-11717</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11716">GH-11716</a>: cli server crashes on SIGINT when compiled with <code>ZEND_RC_DEBUG</code>=1 in <a href="https://github.com/php/php-src/pull/11757">GH-11757</a></li>
<li>Use xmlSetNsProp when possible to prevent parsing the name in <a href="https://github.com/php/php-src/commit/c8964b9a08">c8964b9a08</a></li>
<li>Remove useless readonly checks in <a href="https://github.com/php/php-src/commit/dbe897b73e">dbe897b73e</a></li>
<li>Simplify configuration getters in <a href="https://github.com/php/php-src/pull/11778">GH-11778</a></li>
<li>Fix DOMEntity field getter bugs in <a href="https://github.com/php/php-src/pull/11779">GH-11779</a></li>
<li>Fix incorrect attribute existence check in <code>DOMElement::setAttributeNodeNS()</code> in <a href="https://github.com/php/php-src/pull/11776">GH-11776</a></li>
<li>Fix <code>DOMCharacterData::replaceWith()</code> with itself in <a href="https://github.com/php/php-src/pull/11770">GH-11770</a></li>
<li>Fix empty argument cases for DOMParentNode methods in <a href="https://github.com/php/php-src/pull/11768">GH-11768</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11791">GH-11791</a>: Wrong default value of <code>DOMDocument::xmlStandalone</code> in <a href="https://github.com/php/php-src/pull/11793">GH-11793</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11792">GH-11792</a>: LIBXML_NOXMLDECL is not implemented or broken in <a href="https://github.com/php/php-src/pull/11794">GH-11794</a></li>
<li>Fix DOM test in <a href="https://github.com/php/php-src/commit/bed0e54104">bed0e54104</a></li>
<li>Corrections to return type of loading DOM documents in <a href="https://github.com/php/php-src/commit/ae66a0d142">ae66a0d142</a></li>
<li><code>XLEAK</code> XML_SAVE_NO_DECL test for old libxml2 versions in <a href="https://github.com/php/php-src/commit/655f116be5">655f116be5</a></li>
</ul>

<h3 id="peter-kokot">Peter Kokot</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11603">GH-11603</a>: Set LDFLAGS in <a href="https://github.com/php/php-src/pull/11605">GH-11605</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/9483">GH-9483</a>: Autoconf warnings for newer Autoconf versions in <a href="https://github.com/php/php-src/commit/41a3573fcc">41a3573fcc</a></li>
<li>Update config.guess to 2023-06-23 and config.sub to 2023-06-26 in <a href="https://github.com/php/php-src/pull/11711">GH-11711</a></li>
<li>Fix Autoconf check for development versions in <a href="https://github.com/php/php-src/pull/11532">GH-11532</a></li>
<li>Remove unused <code>PHP_HASH</code> variable in <a href="https://github.com/php/php-src/pull/11653">GH-11653</a></li>
<li>Remove check for <code>time.h</code> and HAVE_TIME_H in <a href="https://github.com/php/php-src/pull/11726">GH-11726</a></li>
<li>Remove unused <code>ZEND_STACK_GROWS_DOWNWARDS</code> constant in <a href="https://github.com/php/php-src/pull/11762">GH-11762</a></li>
<li>Move --enable/--disable-fiber-asm help output in <a href="https://github.com/php/php-src/pull/11827">GH-11827</a></li>
</ul>

<h3 id="remi-collet">Remi Collet</h3>

<ul>
<li>The <code>ZipArchive::FL_RECOMPRESS</code> constant is deprecated in <a href="https://github.com/php/php-src/commit/d8dd72fc31">d8dd72fc31</a></li>
<li>zip extension version 1.22.1 in <a href="https://github.com/php/php-src/commit/b406f7c67a">b406f7c67a</a></li>
<li>cast _private to avoid [-fpermissive] error in <a href="https://github.com/php/php-src/commit/fde4386648">fde4386648</a></li>
<li>add <code>ZipArchive::LENGTH_TO_END</code> and <code>ZipArchive::LENGTH_UNCHECKED</code> constants in <a href="https://github.com/php/php-src/commit/0893b4bed5">0893b4bed5</a></li>
<li>use typed constants in 8.3 in <a href="https://github.com/php/php-src/commit/ae3646db48">ae3646db48</a></li>
</ul>

<h3 id="sakitakamachi">SakiTakamachi</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11587">GH-11587</a> <code>PDO::ATTR_STRINGIFY_FETCHES</code> should return strings even in if <code>PDO::ATTR_EMULATE_PREPARES</code> is enabled in <a href="https://github.com/php/php-src/pull/11622">GH-11622</a></li>
</ul>

<h3 id="tim-d%C3%BCsterhus">Tim Düsterhus</h3>

<ul>
<li>RFC: Add #[Override] attribute in <a href="https://github.com/php/php-src/pull/9836">GH-9836</a></li>
<li>Deprecate MT_RAND_PHP in <a href="https://github.com/php/php-src/pull/11560">GH-11560</a></li>
</ul>

<h3 id="yurun">Yurun</h3>

<ul>
<li>Fix incorrect function/method names in DBG_ENTER() in <a href="https://github.com/php/php-src/pull/11554">GH-11554</a></li>
</ul>

<h3 id="eater">eater</h3>

<ul>
<li><code>ext/gettext</code>: resolve underqouting that breaks with autoconf 2.72 in <a href="https://github.com/php/php-src/pull/11427">GH-11427</a></li>
</ul>

<h3 id="tekimen">tekimen</h3>

<ul>
<li>Fix warning <code>crc32.c</code> on function declaration without a prototype. in <a href="https://github.com/php/php-src/pull/11742">GH-11742</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11785">GH-11785</a>: '++nothing+crc' is not a recognized feature for M1 / M2 macOS compile target in <a href="https://github.com/php/php-src/pull/11796">GH-11796</a></li>
</ul>

</details>

<p><br>
We are incredibly grateful for the commitment and dedication of all contributors. Stay tuned for next month's roundup as we continue to make PHP better together.</p>

<p><br></p>

<hr />

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a> or via <a href="https://github.com/sponsors/ThePHPF">GitHub Sponsors</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP Core Roundup #14]]></title>
            <link href="https://thephp.foundation/blog/2023/07/01/php-core-roundup-14/"/>
            <updated>2023-07-01T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2023/07/01/php-core-roundup-14/</id>
            <content type="html"><![CDATA[<p>There have been numerous updates and enhancements to the PHP core over the past month, from thought-provoking RFCs to minor yet profound adjustments. Let's dive in and keep up with the most recent PHP developments.</p>

<blockquote>
  <p>The PHP Foundation is a collective of PHP contributors, veterans, and companies that collaborate to ensure the long-term sustainability of the PHP programming language. The foundation currently supports six contributors focused on PHP's maintenance, debt reduction, and feature development. These contributors work closely with others on coding, documentation, and discussions.</p>
</blockquote>

<p><br></p>

<blockquote>
  <p>Started over a year ago, the PHP Core Roundup series offers a summary of the latest developments, discussions, and news about PHP Core, contributed by both PHP Foundation members and other participants. This post is the thirteenth in the PHP Core Roundup series.</p>
</blockquote>

<p><div class="px-4 pt-3 border-b border-t -mx-4 border-gray-200">
    <div class="bg-white py-8">
        <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 lg:grid-cols-12 lg:gap-8">
            <div class="max-w-xl text-4xl font-medium tracking-tight text-gray-900 lg:col-span-6">
                Subscribe to PHP Core Roundup newsletter
            </div>
            <form method="POST"
                  action="https://php-foundation.mailcoach.app/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056"
                  class="w-full max-w-md lg:col-span-6">
                <div class="flex gap-x-4">
                    <label for="email-address" class="sr-only">Email address</label>
                    <input id="email-address" name="email" type="email" autocomplete="email" required
                           class="min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                           placeholder="Enter your email">
                    <button type="submit"
                            class="inline-block py-2 no-underline px-6 !text-white bg-[#7f52ff] rounded-3xl hover:bg-[rgba(127,82,255,.8)]">
                        Subscribe
                    </button>
                </div>
                <div class="mt-4 text-sm leading-6 text-gray-900">
                    We care about your data.
                    Read our <a href="https://thephp.foundation/privacy-policy"
                                class="font-semibold text-indigo-600 hover:text-indigo-500 no-underline">privacy policy</a>.
                </div>
            </form>
        </div>
    </div>
</div>
</p>

<h2 id="happy-28th-birthday%2C-php%21">Happy 28th birthday, PHP!</h2>

<p>On June 8, PHP turned 28 years old! For a throwback, see Rasmus Lerdorf’s <a href="https://groups.google.com/g/comp.infosystems.www.authoring.cgi/c/PyJ25gZ6z7A/m/M9FkTUVDfcwJ">initial public announcement of PHP</a>.</p>

<p>Here’s to many more years of empowering developers and pushing the boundaries of web technology. Happy Birthday, PHP! 🎉🥳🎂</p>

<h2 id="php-8.3.0-qa-releases-and-feature-freeze">PHP 8.3.0 QA Releases and Feature-freeze</h2>

<p>The upcoming PHP 8.3 version is scheduled to be released on November 23. The newly elected PHP 8.3 release managers made the first QA releases of PHP 8.3 — <a href="https://www.php.net/archive/2023.php#2023-06-08-3">PHP&nbsp;8.3.0&nbsp;Alpha&nbsp;1</a> — on June 08, and the <a href="https://www.php.net/archive/2023.php#2023-06-22-1">second alpha release</a> on June 22.</p>

<p>These alpha versions aren't intended for production environments but are provided for testing and local development.</p>

<p>Compiled Windows binaries are available at <a href="https://windows.php.net/qa/">windows.php.net/qa</a>, <a href="https://hub.docker.com/_/php/tags?page=1&amp;name=8.3.0">Docker images</a> are available at Docker Hub. For macOS, PHP 8.3.0-dev packages are available via Homebrew from <a href="https://github.com/shivammathur/homebrew-php"><code>shivammathur/php</code></a> tap.</p>

<p>If you want to compile the source code yourself, you can find it on <a href="https://github.com/php/php-src">php/php-src repository on GitHub</a>.</p>

<p><strong>July 18</strong> marks the feature-freeze for PHP 8.3. It means that all major changes to the language must be discussed and voted on prior to this date in order to make it to PHP 8.3.</p>

<h2 id="releases">Releases</h2>

<p>The PHP development team released three new versions in June 2023:</p>

<p><strong><a href="https://www.php.net/archive/2023.php#2023-06-08-2">PHP 8.2.7</a></strong>, <strong><a href="https://www.php.net/archive/2023.php#2023-06-08-4">PHP 8.1.20</a></strong>, <strong><a href="https://www.php.net/archive/2023.php#2023-06-08-1">PHP 8.0.29</a></strong></p>

<p>All three include a security fix: <a href="https://github.com/php/php-src/security/advisories/GHSA-76gg-c692-v2mw">GHSA-76gg-c692-v2mw</a>. The random byte generation function used in the SOAP HTTP Digest authentication code was not checked for failure. This could result in a stack information leak.</p>

<p>PHP 8.2.7 and PHP 8.1.20 additionally include several bug fixes and improvements, notably in areas such as Core, Date, Exif, FPM, Hash, LibXML, MBString, Opcache, PCNTL, PGSQL, Phar, Soap, SPL, Standard, and Streams.</p>

<h2 id="recent-rfcs-and-mailing-list-discussions">Recent RFCs and Mailing List Discussions</h2>

<blockquote>
  <p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net website</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>
</blockquote>

<p><br>
Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, documentation, and the php.net website. Here is a summary of some changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<h2 id="rfc-updates">RFC Updates</h2>

<p>Following are the RFCs and major pull-requests discussed, voted on, and implemented since our last update.</p>

<h3 id="accepted%3A-marking-overridden-methods-by-tim-d%C3%BCsterhus">Accepted: <a href="https://wiki.php.net/rfc/marking_overriden_methods">Marking Overridden Methods</a> by Tim Düsterhus</h3>

<p>PHP 8.3 will have a new attribute <code>#[\Override]</code>. If this attribute is added to a method, the engine will validate that a method with the same name exists in a parent class or any of the implemented interfaces. If no such method exists, a compile time error will be emitted.</p>

<p>The similar concepts exist in Java, TypeScript, C++, C#, Swift, Kotlin, and other languages.</p>

<h3 id="implemented%3A-define-proper-semantics-for-range-function-by-george-peter-banyard-%F0%9F%92%9C">Implemented: <a href="https://wiki.php.net/rfc/proper-range-semantics">Define proper semantics for range() function</a> by George Peter Banyard 💜</h3>

<p>In the forthcoming PHP 8.3 release, the <code>range()</code> function will have improved behavior. It will now issue warnings or throw exceptions if it receives incompatible or unusable arguments.</p>

<h3 id="implemented%3A-mb_str_pad-by-niels-dossche">Implemented: <a href="https://wiki.php.net/rfc/mb_str_pad">mb_str_pad()</a> by Niels Dossche</h3>

<p>PHP 8.3 will include a new function that works similarly to the existing <code>str_pad()</code> function, but with support for multibyte strings. This is a welcome addition for developers working with multibyte strings, as it will make it easier to manipulate and format these strings in PHP.</p>

<h3 id="in-voting%3A-deprecations-for-php-8.3-by-george-peter-banyard-%F0%9F%92%9C%2C-christoph-m.-becker%2C-m%C3%A1t%C3%A9-kocsis-%F0%9F%92%9C%2C-tim-d%C3%BCsterhus%2C-go-kudo%2C-andreas-heigl">In Voting: <a href="https://wiki.php.net/rfc/deprecations_php_8_3">Deprecations for PHP 8.3</a> by George Peter Banyard 💜, Christoph M. Becker, Máté Kocsis 💜, Tim Düsterhus, Go Kudo, Andreas Heigl</h3>

<p>The aim is to clean up some of the older, less consistent parts of PHP to make the language more reliable and predictable. The following list provides a short overview of the functionality targeted for deprecation:</p>

<ul>
<li>Passing negative <code>$widths</code> to <code>mb_strimwidth()</code></li>
<li>The <code>NumberFormatter::TYPE_CURRENCY</code> constant</li>
<li>Unnecessary <code>crypt()</code> related constants</li>
<li><code>MT_RAND_PHP</code></li>
<li>Global Mersenne Twister</li>
</ul>

<h3 id="in-voting%3A-deprecate-functions-with-overloaded-signatures-by-m%C3%A1t%C3%A9-kocsis-%F0%9F%92%9C">In Voting: <a href="https://wiki.php.net/rfc/deprecate_functions_with_overloaded_signatures">Deprecate Functions with Overloaded Signatures</a> by Máté Kocsis 💜</h3>

<p>This RFC proposes to deprecate a number of functions that have overloaded signatures, meaning they behave differently based on the number or type of arguments passed to them. The goal is to make PHP's function signatures more consistent and predictable.</p>

<h3 id="under-discussion%3A-closure-self-reference-by-danack%2C-kapitanoczywisty">Under Discussion: <a href="https://wiki.php.net/rfc/closure_self_reference">Closure self-reference</a> by Danack, KapitanOczywisty</h3>

<p>This RFC proposes to allow closures to be aliased to a variable that can be used within the closure:</p>

<pre><code class="php">&lt;?php

$fibonacci = function (int $n) as $fn {
    if ($n === 0) return 0;
    if ($n === 1) return 1;
    return $fn($n-1) + $fn($n-2);
};

echo $fibonacci(5);
</code></pre>

<p><br></p>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Following are some changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements.</p>

<hr />

<h3 id="full-list-of-commits--since-php-core-roundup-%2313">Full list of commits  since <a href="/blog/2023/06/06/php-core-roundup-13/">PHP Core Roundup #13</a></h3>

<p>Commits are grouped by author in random order.</p>

<details>

<summary>Click here to expand</summary>

<h3 id="james-lucas">James Lucas</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11246">GH-11246</a> cli/get_set_process_title in <a href="https://github.com/php/php-src/pull/11247">GH-11247</a></li>
<li>Fix bug <a href="https://github.com/php/php-src/issues/9356">GH-9356</a>: Incomplete SAN validation of IPv6 address in <a href="https://github.com/php/php-src/pull/11145">GH-11145</a></li>
</ul>

<h3 id="george-peter-banyard-%F0%9F%92%9C">George Peter Banyard 💜</h3>

<ul>
<li>Fix [<code>-Wenum-int-mismatch</code>] compiler warnings in <a href="https://github.com/php/php-src/pull/11352">GH-11352</a></li>
<li><code>ext/standard/array.c</code>: Optimize min/max functions for int/float in <a href="https://github.com/php/php-src/pull/11194">GH-11194</a></li>
<li><code>http_fopen_wrapper</code>: fix [<code>-Wanalyzer-deref-before-check</code>] in <a href="https://github.com/php/php-src/commit/810507ab1b">810507ab1b</a></li>
<li>memory stream: fix [<code>-Wanalyzer-deref-before-check</code>] in <a href="https://github.com/php/php-src/commit/13ad8ef40b">13ad8ef40b</a></li>
<li>Fix file descriptor check in <a href="https://github.com/php/php-src/commit/c5d7264149">c5d7264149</a></li>
<li>Assert <code>zend_constant</code> exist in <a href="https://github.com/php/php-src/commit/ce724d186d">ce724d186d</a></li>
<li>Use known <code>zend_string</code> pointer to check for equality instead of C strings in <a href="https://github.com/php/php-src/pull/11370">GH-11370</a></li>
<li>Use common function for <code>TypeError</code> on illegal offset access in <a href="https://github.com/php/php-src/pull/10544">GH-10544</a></li>
<li>Use more appropriate types for <code>php_array_walk()</code> function in <a href="https://github.com/php/php-src/commit/a02f7f24c6">a02f7f24c6</a></li>
<li>More usage of known <code>zend_str</code> instead of C string in <a href="https://github.com/php/php-src/pull/11381">GH-11381</a></li>
<li><code>ext/imap</code>: Refactor + Update to modern property write API in <a href="https://github.com/php/php-src/pull/11415">GH-11415</a></li>
<li>Remove <code>php_imap_list_add_object()</code> function in <a href="https://github.com/php/php-src/commit/5d0304876f">ext/imap</a></li>
<li>Use propery API instead of <code>php_imap_hash_add_object()</code> in <a href="https://github.com/php/php-src/commit/9798dc20e2">ext/imap</a></li>
<li>Cleanup custom implementation of <code>rfc822_write_address()</code> in <a href="https://github.com/php/php-src/commit/0b99bc21e5">ext/imap</a></li>
<li>Do not condition on number of arguments but on pointer being set or not in <a href="https://github.com/php/php-src/commit/b1dd9b8a39">ext/imap</a></li>
<li>Add const qualifier for <code>header_injection()</code> in <a href="https://github.com/php/php-src/commit/b1f24e3bea">ext/imap</a></li>
<li>Refactor <code>imap_fetch_overview()</code> in <a href="https://github.com/php/php-src/commit/d714ae8964">ext/imap</a></li>
<li>Narrow return type to <code>true</code> in <a href="https://github.com/php/php-src/commit/cc9ab53308">ext/imap</a></li>
<li>Refactor common conditional property assignment in <a href="https://github.com/php/php-src/commit/6c25257db0">ext/imap</a></li>
<li>Move range() tests to a dedicated folder in <a href="https://github.com/php/php-src/commit/53829b7daf">PHP Source</a></li>
<li>Add number or str ZPP macros in <a href="https://github.com/php/php-src/commit/80e90ad7ba">PHP Source</a></li>
<li>Expose <code>zendi_try_get_long()</code> function via a public API in <a href="https://github.com/php/php-src/pull/10175">Zend</a></li>
<li>Define proper semantics for <code>range()</code> function in <a href="https://github.com/php/php-src/pull/10826">RFC</a></li>
</ul>

<h3 id="niels-dossche">Niels Dossche</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11347">GH-11347</a>: Memory leak when calling a static method inside an xpath query in <a href="https://github.com/php/php-src/pull/11350">GH-11350</a></li>
<li>Use <code>zval_ptr_dtor_nogc()</code> for callable in <code>ext/xslt</code> in <a href="https://github.com/php/php-src/pull/11356">GH-11356</a></li>
<li>Implement iteration cache, item cache and length cache for node list iteration in <a href="https://github.com/php/php-src/pull/11330">GH-11330</a></li>
<li>Struct-pack <code>spl_dllist_object</code> in <a href="https://github.com/php/php-src/commit/5fae4b5031">5fae4b5031</a></li>
<li>Remove dead code from <code>sxe_get_element_by_name()</code> in <a href="https://github.com/php/php-src/commit/c6bffff96b">c6bffff96b</a></li>
<li>Remove double class entry variable in <a href="https://github.com/php/php-src/commit/795127942b">795127942b</a></li>
<li>Use <code>xmlStrEqual()</code> instead of <code>!xmlStrCmp()</code> in <a href="https://github.com/php/php-src/commit/47c277bde5">47c277bde5</a></li>
<li>No need for the double name pointer in <a href="https://github.com/php/php-src/commit/ed097e30f0">ed097e30f0</a></li>
<li>Switch <code>DOMNodeList::item()</code> and <code>DOMNamedNodeMap::item()</code> to fast ZPP in <a href="https://github.com/php/php-src/pull/11361">GH-11361</a></li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=67440">#67440</a>: append_node of a <code>DOMDocumentFragment</code> does not reconcile namespaces in <a href="https://github.com/php/php-src/pull/11362">GH-11362</a></li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=81642">#81642</a>: <code>DOMChildNode::replaceWith()</code> bug when replacing a node with itself in <a href="https://github.com/php/php-src/pull/11363">GH-11363</a></li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=77686">#77686</a>: Removed elements are still returned by <code>getElementById</code> in <a href="https://github.com/php/php-src/pull/11369">GH-11369</a></li>
<li>Use <code>uint32_t</code> for the number of nodes in <a href="https://github.com/php/php-src/pull/11371">GH-11371</a></li>
<li>Let closure created from magic method accept named parameters in <a href="https://github.com/php/php-src/pull/11364">GH-11364</a></li>
<li>Disable old <code>libxml2</code> hack if the version does not suffer from the bug in <a href="https://github.com/php/php-src/pull/11379">GH-11379</a></li>
<li>Fix missing randomness check and insufficient random bytes for SOAP HTTP Digest in <a href="https://github.com/php/php-src/commit/ac4254ad76">ac4254ad76</a></li>
<li>Fix test failure for <code>init_fcall_003.phpt</code> without opcache in <a href="https://github.com/php/php-src/pull/11378">GH-11378</a></li>
<li>Remove redundant assignment on nodep->ns in <a href="https://github.com/php/php-src/commit/6e04050474">6e04050474</a></li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=79700">#79700</a>: Bad performance with namespaced nodes due to wrong libxml assumption in <a href="https://github.com/php/php-src/pull/11376">GH-11376</a></li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=70359">#70359</a> and <a href="https://bugs.php.net/bug.php?id=78577">#78577</a>: segfaults with DOMNameSpaceNode in <a href="https://github.com/php/php-src/pull/11402">GH-11402</a></li>
<li>Allow final modifier when using a method from a trait in <a href="https://github.com/php/php-src/pull/11394">GH-11394</a></li>
<li>Get rid of return value for <code>php_libxml_unregister_node()</code> in <a href="https://github.com/php/php-src/pull/11398">GH-11398</a></li>
<li>Implement <a href="https://github.com/php/php-src/issues/8641">GH-8641</a>: STREAM_NOTIFY_COMPLETED over HTTP never emitted in <a href="https://github.com/php/php-src/pull/10505">GH-10505</a></li>
<li>Fix lifetime issue with getAttributeNodeNS() in <a href="https://github.com/php/php-src/pull/11422">GH-11422</a></li>
<li>Fix "invalid state error" with cloned namespace declarations in <a href="https://github.com/php/php-src/pull/11429">GH-11429</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11406">GH-11406</a>: segfault with unpacking and magic method closure in <a href="https://github.com/php/php-src/pull/11417">GH-11417</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11433">GH-11433</a>: Unable to set CURLOPT_ACCEPT_ENCODING to NULL in <a href="https://github.com/php/php-src/pull/11446">GH-11446</a></li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=55294">#55294</a> and <a href="https://bugs.php.net/bug.php?id=47530">#47530</a> and <a href="https://bugs.php.net/bug.php?id=47847">#47847</a>: namespace reconciliation issues in <a href="https://github.com/php/php-src/pull/11454">GH-11454</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11451">GH-11451</a>: Invalid associative array containing duplicate keys in <a href="https://github.com/php/php-src/pull/11453">GH-11453</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11404">GH-11404</a>: <code>DOMDocument::savexml</code> and friends ommit <code>xmlns=""</code> declaration for null namespace, creating incorrect xml representation of the DOM in <a href="https://github.com/php/php-src/pull/11428">GH-11428</a></li>
<li>[RFC] Implement <code>mb_str_pad()</code> in <a href="https://github.com/php/php-src/pull/11284">GH-11284</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11507">GH-11507</a>: String concatenation performance regression in 8.3 in <a href="https://github.com/php/php-src/pull/11508">GH-11508</a></li>
<li>Fix interrupted CLI output causing the process to exit in <a href="https://github.com/php/php-src/pull/11510">GH-11510</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11514">GH-11514</a>: PHP 8.3 build fails with <code>--enable-mbstring</code> enabled in <a href="https://github.com/php/php-src/pull/11516">GH-11516</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11498">GH-11498</a>: SIGCHLD is not always returned from <code>proc_open</code> in <a href="https://github.com/php/php-src/pull/11509">GH-11509</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11529">GH-11529</a>: Crash after dealing with an Apache request in <a href="https://github.com/php/php-src/pull/11530">GH-11530</a></li>
<li>Add missing cache invalidation in <code>dom_child_replace_with()</code> in <a href="https://github.com/php/php-src/commit/8904ac7fef">PHP Source</a></li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=80332">#80332</a>: Completely broken array access functionality with DOMNamedNodeMap in <a href="https://github.com/php/php-src/pull/11468">PHP Source</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11455">GH-11455</a>: Segmentation fault with custom object date properties in <a href="https://github.com/php/php-src/pull/11473">PHP Source</a></li>
<li>Revert changes to <code>DOMAttr::$value</code> and <code>DOMAttr::$nodeValue</code> expansion in <a href="https://github.com/php/php-src/pull/11469">PHP Source</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11408">GH-11408</a>: Unable to build PHP 8.3.0 alpha 1 / fileinfo extension in <a href="https://github.com/php/php-src/pull/11505">GH-11505</a></li>
<li>Add missing <code>WUNTRACED</code> in <a href="https://github.com/php/php-src/pull/11526">GH-11526</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11500">GH-11500</a>: Namespace reuse in createElementNS() generates wrong output in <a href="https://github.com/php/php-src/pull/11528">GH-11528</a></li>
</ul>

<h3 id="david-carlier">David CARLIER</h3>

<ul>
<li><code>ext/pgsql</code>: <code>php_pgsql_convert</code> converts <code>E_NOTICE</code> to <code>TypeError</code>/<code>ValueError</code> exceptions in <a href="https://github.com/php/php-src/commit/16a63d7b07">16a63d7b07</a></li>
<li><code>ext/pgsql</code>: adding pg_set_error_context_visibility in <a href="https://github.com/php/php-src/commit/dd8514a0bd">dd8514a0bd</a></li>
<li><code>ext/pdo_pgsql</code>: connection status update to distinguish from truly bad quality connections in <a href="https://github.com/php/php-src/commit/ec3daea1d6">ec3daea1d6</a></li>
<li>Fix PGtrace invalid free issue in <a href="https://github.com/php/php-src/commit/f194cdf852"><code>ext/pgsql</code></a></li>
<li><code>imagerotate</code> removes <code>ignore_transparent</code> argument in <a href="https://github.com/php/php-src/commit/b0d8c10fd9"><code>ext/gd</code></a></li>
</ul>

<h3 id="tim-starling">Tim Starling</h3>

<ul>
<li>Set <code>DOMAttr::$value</code> without expanding entities in <a href="https://github.com/php/php-src/commit/50fdad8325">50fdad8325</a></li>
<li>Factor out <code>dom_remove_all_children()</code> in <a href="https://github.com/php/php-src/commit/74910b1403">74910b1403</a></li>
<li>Don't add 1 when calling <code>xmlNodeSetContent()</code> in <a href="https://github.com/php/php-src/commit/ee68c22128">ee68c22128</a></li>
<li>Also avoid entity expansion in <code>DOMAttr::$nodeValue</code> in <a href="https://github.com/php/php-src/commit/076ddf2b05">076ddf2b05</a></li>
<li>Changelog notes for <code>DOMAttr</code> value and nodeValue properties in <a href="https://github.com/php/php-src/commit/0cc028c374">0cc028c374</a></li>
<li>Improve test <code>DOMAttr_entity_expansion.phpt</code> in <a href="https://github.com/php/php-src/commit/ab77485890">ab77485890</a></li>
<li>When running FPM tests, pass <code>-n</code> option to <code>php-fpm</code> in <a href="https://github.com/php/php-src/pull/11373">GH-11373</a></li>
</ul>

<h2 id="dmitry-stogov">Dmitry Stogov</h2>

<ul>
<li>Fixed deoptimization info for interrupt handler in <a href="https://github.com/php/php-src/commit/8f06febedf">8f06febedf</a></li>
<li>Keep consistent <code>EG(current_execute_data)</code> after return from generator in <a href="https://github.com/php/php-src/pull/11380">GH-11380</a></li>
<li>Fixed incorrect VM stack overflow checks elimination in <a href="https://github.com/php/php-src/commit/1a96d64828">1a96d64828</a></li>
</ul>

<h2 id="jakub-zelenka-%F0%9F%92%9C">Jakub Zelenka 💜</h2>

<ul>
<li>Update NEWS for PHP 8.3.0alpha1 in <a href="https://github.com/php/php-src/commit/5b430a25fa">5b430a25fa</a></li>
<li>Fix CS and checking for IPv6 SAN verify in <a href="https://github.com/php/php-src/commit/3fc013b2e2">3fc013b2e2</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/10406">GH-10406</a>: fgets on a redis socket connection fails on PHP 8.3 in <a href="https://github.com/php/php-src/pull/11421">GH-11421</a></li>
<li>FPM: Add "pcntl" when running another test depending on pcntl in <a href="https://github.com/php/php-src/commit/9b18466396">9b18466396</a></li>
</ul>

<h2 id="remi-collet">Remi Collet</h2>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11382">GH-11382</a> add missing hash header for bin2hex in <a href="https://github.com/php/php-src/commit/0572448263">0572448263</a></li>
<li>Ensure <code>session.sid_length</code> have proper value for test in <a href="https://github.com/php/php-src/commit/0561783903">0561783903</a></li>
<li>Check <code>PQsetErrorContextVisibility</code> availability <code>(libpq &gt;= 9.6)</code> in <a href="https://github.com/php/php-src/commit/21aaf3321f">21aaf3321f</a></li>
<li>adapt test expectation with libzip 1.10 in <a href="https://github.com/php/php-src/commit/b972af9589">b972af9589</a></li>
<li>zip extension version 1.22.0 for libzip 1.10.0 in <a href="https://github.com/php/php-src/commit/b5638a1202">b5638a1202</a></li>
<li>NEWS and UPGRADING for zip 1.22.0 in <a href="https://github.com/php/php-src/commit/ddb6cadb4c">ddb6cadb4c</a></li>
</ul>

<h3 id="pierrick-charron">Pierrick Charron</h3>

<ul>
<li>Update NEWS in <a href="https://github.com/php/php-src/commit/b720ab99f8">b720ab99f8</a></li>
</ul>

<h3 id="ben-ramsey">Ben Ramsey</h3>

<ul>
<li>Add example commit message to release process doc in <a href="https://github.com/php/php-src/commit/938ebb3b61">938ebb3b61</a></li>
<li>Add PHP 8.3 to release process doc; remove 7.4 in <a href="https://github.com/php/php-src/commit/ca1905116b">ca1905116b</a></li>
</ul>

<h3 id="florian-engelhardt">Florian Engelhardt</h3>

<ul>
<li>Fix initial array size in <code>gc_status()</code> in <a href="https://github.com/php/php-src/pull/11393">GH-11393</a></li>
</ul>

<h3 id="mikhail-galanin">Mikhail Galanin</h3>

<ul>
<li>Suppress warning when the test run under non-root in <a href="https://github.com/php/php-src/pull/11400">GH-11400</a></li>
<li>sapi/fpm: add "pcntl" when running test depending pcntl_sigprocmask() in <a href="https://github.com/php/php-src/commit/7ade242e28">7ade242e28</a></li>
</ul>

<h3 id="bob-weinand">Bob Weinand</h3>

<ul>
<li>Fix add/remove observer API with multiple observers installed in <a href="https://github.com/php/php-src/commit/709540ccdc">709540ccdc</a></li>
</ul>

<h3 id="peter-chun-sheng%2C-li">Peter Chun-Sheng, Li</h3>

<ul>
<li>Fix cross-compilation check in phar generation for FreeBSD in <a href="https://github.com/php/php-src/pull/11441">GH-11441</a></li>
</ul>

<h3 id="m%C3%A1t%C3%A9-kocsis-%F0%9F%92%9C">Máté Kocsis 💜</h3>

<ul>
<li>Add test for <a href="https://github.com/php/php-src/issues/11423">GH-11423</a> in <a href="https://github.com/php/php-src/commit/96ea06a1d9">96ea06a1d9</a></li>
<li>Upgrade to PHP-Parser 5.0 in <a href="https://github.com/php/php-src/commit/6dd62fb3d6">6dd62fb3d6</a></li>
</ul>

<h3 id="ilija-tovilo-%F0%9F%92%9C">Ilija Tovilo 💜</h3>

<ul>
<li>Forward shutdown exceptions to user error handlers in <a href="https://github.com/php/php-src/pull/110905">GH-110905</a></li>
<li><code>mbstring count_demerits</code> in reverse order in <a href="https://github.com/php/php-src/pull/11493">GH-11493</a></li>
<li>Fix assertion violation for invalid class const objects in const expressions in <a href="https://github.com/php/php-src/pull/11458">GH-11458</a></li>
<li>Fix arm build in <a href="https://github.com/php/php-src/pull/11501">GH-11501</a></li>
<li>Remove session ID set through <code>REQUEST_URI</code> in <a href="https://github.com/php/php-src/commit/f160eff441">f160eff441</a></li>
<li>Revert "Mangle PCRE regex cache key with JIT option" in <a href="https://github.com/php/php-src/commit/4d91665f78">4d91665f78</a></li>
</ul>

<h3 id="divinity76">divinity76</h3>

<ul>
<li>Implement <code>SKIP_(SLOW|ONLINE)_TESTS</code> in <a href="https://github.com/php/php-src/pull/11479">GH-11479</a></li>
<li>Support running testsuite with negative niceness in <a href="https://github.com/php/php-src/pull/11481">GH-11481</a></li>
</ul>

<h3 id="alex-dowad">Alex Dowad</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11476">GH-11476</a>: crash with count_demerits negative-size-param in <a href="https://github.com/php/php-src/commit/443927e3e8">443927e3e8</a></li>
</ul>

<h3 id="eric-mann">Eric Mann</h3>

<ul>
<li>Update NEWS for PHP 8.3.0alpha2 in <a href="https://github.com/php/php-src/commit/d9e2da342a">d9e2da342a</a></li>
</ul>

<h3 id="michael-vo%C5%99%C3%AD%C5%A1ek">Michael Voříšek</h3>

<ul>
<li>Mangle PCRE regex cache key with JIT option in <a href="https://github.com/php/php-src/pull/11396">GH-11396</a></li>
</ul>

<h3 id="eater">eater</h3>

<ul>
<li>Add build scripts to "Category: Build System" label in <a href="https://github.com/php/php-src/pull/11474">GH-11474</a></li>
</ul>

<h3 id="patrick-allaert">Patrick Allaert</h3>

<ul>
<li>Fixes "GC_BENCH" is not defined in extensions including <code>zend_gc.h</code> in <a href="https://github.com/php/php-src/commit/973e9b2eec">973e9b2eec</a></li>
</ul>

<h3 id="derick-rethans-%F0%9F%92%9C">Derick Rethans 💜</h3>

<ul>
<li>Fixed <a href="https://github.com/php/php-src/issues/11368">GH-11368</a>: Date modify returns invalid datetime in <a href="https://github.com/php/php-src/commit/0747616f84">0747616f84</a></li>
</ul>

<h3 id="vinicius-dias">Vinicius Dias</h3>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11492">GH-11492</a>: Make test failure: <code>ext/pdo_sqlite/tests/bug_42589.phpt</code> in <a href="https://github.com/php/php-src/pull/11494">GH-11494</a></li>
</ul>

<h3 id="hanshenrik">hanshenrik</h3>

<ul>
<li>fix <code>file()</code> flags error-check in <a href="https://github.com/php/php-src/pull/11483">GH-11483</a></li>
</ul>

</details>

<p><br>
We are incredibly grateful for the commitment and dedication of all contributors. Stay tuned for next month's roundup as we continue to make PHP better together.</p>

<p><br></p>

<hr />

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a> or via <a href="https://github.com/sponsors/ThePHPF">GitHub Sponsors</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP Core Roundup #13]]></title>
            <link href="https://thephp.foundation/blog/2023/06/06/php-core-roundup-13/"/>
            <updated>2023-06-06T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2023/06/06/php-core-roundup-13/</id>
            <content type="html"><![CDATA[<p>The PHP Core team has been as productive as ever this past month, bringing forth a robust collection of updates that promise to shape the future of PHP. From RFCs that are sure to stir up lively debate, to ones that bring small, yet impactful changes, it has been a month filled with interesting developments. Here's what you need to know.</p>

<blockquote>
  <p>The PHP Foundation is a collective of PHP contributors, veterans, and companies that collaborate to ensure the long-term sustainability of the PHP programming language. The foundation currently supports six contributors focused on PHP's maintenance, debt reduction, and feature development. These contributors work closely with others on coding, documentation, and discussions.</p>
</blockquote>

<p><br></p>

<blockquote>
  <p>Started over a year ago, the PHP Core Roundup series offers a summary of the latest developments, discussions, and news about PHP Core, contributed by both PHP Foundation members and other participants. This post is the thirteenth in the PHP Core Roundup series.</p>
</blockquote>

<p><div class="px-4 pt-3 border-b border-t -mx-4 border-gray-200">
    <div class="bg-white py-8">
        <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 lg:grid-cols-12 lg:gap-8">
            <div class="max-w-xl text-4xl font-medium tracking-tight text-gray-900 lg:col-span-6">
                Subscribe to PHP Core Roundup newsletter
            </div>
            <form method="POST"
                  action="https://php-foundation.mailcoach.app/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056"
                  class="w-full max-w-md lg:col-span-6">
                <div class="flex gap-x-4">
                    <label for="email-address" class="sr-only">Email address</label>
                    <input id="email-address" name="email" type="email" autocomplete="email" required
                           class="min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                           placeholder="Enter your email">
                    <button type="submit"
                            class="inline-block py-2 no-underline px-6 !text-white bg-[#7f52ff] rounded-3xl hover:bg-[rgba(127,82,255,.8)]">
                        Subscribe
                    </button>
                </div>
                <div class="mt-4 text-sm leading-6 text-gray-900">
                    We care about your data.
                    Read our <a href="https://thephp.foundation/privacy-policy"
                                class="font-semibold text-indigo-600 hover:text-indigo-500 no-underline">privacy policy</a>.
                </div>
            </form>
        </div>
    </div>
</div>
</p>

<h2 id="releases">Releases</h2>

<p>The PHP development team released two new versions in May 2023: .</p>

<p><strong><a href="https://www.php.net/archive/2023.php#2023-05-11-1">PHP 8.2.6</a></strong></p>

<p>This release includes several bug fixes and improvements, notably in areas such as Core, Date, DOM, Exif, Intl, PCRE, Reflection, SPL, Standard, and Streams.</p>

<p><strong><a href="https://www.php.net/archive/2023.php#2023-05-11-2">PHP 8.1.19</a></strong></p>

<p>This release includes bug fixes across various components such as Core, DOM, Exif, Intl, PCRE, and Standard.</p>

<h2 id="recent-rfcs-and-mailing-list-discussions">Recent RFCs and Mailing List Discussions</h2>

<blockquote>
  <p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net website</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>
</blockquote>

<p><br>
Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, documentation, and the php.net website. Here is a summary of some changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<h2 id="rfc-updates">RFC Updates</h2>

<p>Following are the RFCs and major pull-requests discussed, voted on, and implemented since our last update.</p>

<h3 id="in-voting%3A-define-proper-semantics-for-range-function-by-george-peter-banyard-%F0%9F%92%9C">In Voting: <a href="https://wiki.php.net/rfc/proper-range-semantics">Define proper semantics for range() function</a> by George Peter Banyard 💜</h3>

<p>This RFC proposes to adjust the semantics of the <code>range()</code> function in PHP to throw exceptions or at least warn when passing unusable arguments to <code>range()</code>.</p>

<p>The <code>range()</code> function in PHP generates an array of values going from a start value to an end value. However, the current behavior of the function is complex and can lead to unexpected results. For example, if one of the boundary inputs is a string digit (e.g. "1"), both inputs will be interpreted as numbers. This RFC aims to address these issues and make the behavior of the <code>range()</code> function more predictable and consistent.</p>

<h3 id="in-voting%3A-mb_str_pad-by-niels-dossche">In Voting: <a href="https://wiki.php.net/rfc/mb_str_pad">mb_str_pad()</a> by Niels Dossche</h3>

<p>This RFC proposes the addition of a multibyte string pad function to the mbstring extension. This function would work similarly to the existing <code>str_pad()</code> function, but with support for multibyte strings. This is a welcome addition for developers working with multibyte strings, as it will make it easier to manipulate and format these strings in PHP.</p>

<h3 id="under-discussion%3A-nameof-operator-by-robert-landers">Under Discussion: <a href="https://wiki.php.net/rfc/nameof">Nameof Operator</a> by Robert Landers</h3>

<p>This RFC proposes to add a global <code>nameof()</code> function, which would return the name of a variable, class, function, or method as a string. This could be useful in a variety of scenarios, such as debugging, logging, or creating more informative error messages.</p>

<h3 id="under-discussion%3A-marking-overridden-methods-by-tim-d%C3%BCsterhus">Under Discussion: <a href="https://wiki.php.net/rfc/marking_overriden_methods">Marking Overridden Methods</a> by Tim Düsterhus</h3>

<p>This RFC proposes a way to explicitly mark methods that are intended to override methods from a parent class with a new <code>#[\Override]</code> attribute. If this attribute is added to a method, the engine shall validate that a method with the same name exists in a parent class or any of the implemented interfaces. If no such method exists a compile time error shall be emitted.</p>

<p>The similar concepts exist in Java, TypeScript, C++, C#, Swift, Kotlin, and other languages.</p>

<h3 id="under-discussion%3A-deprecate-functions-with-overloaded-signatures-by-m%C3%A1t%C3%A9-kocsis-%F0%9F%92%9C">Under Discussion: <a href="https://wiki.php.net/rfc/deprecate_functions_with_overloaded_signatures">Deprecate Functions with Overloaded Signatures</a> by Máté Kocsis 💜</h3>

<p>This RFC proposes to deprecate a number of functions that have overloaded signatures, meaning they behave differently based on the number or type of arguments passed to them. The goal is to make PHP's function signatures more consistent and predictable.</p>

<h3 id="under-discussion%3A-deprecations-for-php-8.3-by-george-peter-banyard-%F0%9F%92%9C%2C-christoph-m.-becker%2C-m%C3%A1t%C3%A9-kocsis-%F0%9F%92%9C%2C-tim-d%C3%BCsterhus%2C-go-kudo%2C-andreas-heigl">Under Discussion: <a href="https://wiki.php.net/rfc/deprecations_php_8_3">Deprecations for PHP 8.3</a> by George Peter Banyard 💜, Christoph M. Becker, Máté Kocsis 💜, Tim Düsterhus, Go Kudo, Andreas Heigl</h3>

<p>The aim is to clean up some of the older, less consistent parts of PHP to make the language more reliable and predictable. The following list provides a short overview of the functionality targeted for deprecation:</p>

<ul>
<li>Passing negative <code>$widths</code> to <code>mb_strimwidth()</code></li>
<li>The <code>NumberFormatter::TYPE_CURRENCY</code> constant</li>
<li>Unnecessary <code>crypt()</code> related constants</li>
<li><code>MT_RAND_PHP</code></li>
<li>Global Mersenne Twister</li>
</ul>

<h3 id="declined%3A-php-technical-committee-by-jakub-zelenka-%F0%9F%92%9C-and-larry-garfield">Declined: <a href="https://wiki.php.net/rfc/php_technical_committee">PHP Technical Committee</a> by Jakub Zelenka 💜 and Larry Garfield</h3>

<p>This RFC proposed the creation of a PHP Technical Committee (TC) that would make decisions about technical aspects of the PHP language and its reference implementation. The TC would have been responsible for resolving technical conflicts between core developers. Despite the potential benefits, the community decided not to move forward with this proposal.</p>

<h2 id="notable-mailing-list-discussions">Notable Mailing List Discussions</h2>

<h3 id="callable-types-via-interfaces"><a href="https://externals.io/message/120083">Callable types via Interfaces</a></h3>

<p>The proposal suggests that callable types should be allowed to be represented as interfaces, which would allow for more precise type hinting and better static analysis. The sentiment in the thread is generally positive, with many participants expressing support for the idea. However, some concerns were raised about potential complexity and the need for careful implementation to avoid breaking existing code.</p>

<h3 id="interface-properties"><a href="https://externals.io/message/120403">Interface Properties</a></h3>

<p>The discussion starter suggests making it possible to define properties in interfaces and argues that this feature would align well with the deprecation of dynamic properties and could replace the current practice of specifying these properties in doc blocks.</p>

<p>Larry Garfield pointed out that interface properties are already included in the <a href="https://wiki.php.net/rfc/property-hooks">Property Hooks RFC</a>, which is expected to go to a vote soon.</p>

<p>David Gebler expressed his disagreement with the proposal, stating that interfaces in most languages don't support defining properties because they are generally seen as an implementation detail rather than a promise about supported behavior. He also mentioned that interfaces are essentially an alternative to multiple inheritance, and mandating fields as well as method signatures brings them very close to abstract classes. He also expressed concerns about multiple interfaces defining the same property, which could lead to conceptual confusion.</p>

<p>Some participants expressed support, noting that it could improve code clarity and reduce the need for doc blocks.</p>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>This month, the PHP core team has been hard at work improving the PHP language. Here's a list of the commits made by the team, grouped by author:</p>

<details>

<summary>Click here to expand</summary>

<ul>
<li><strong>Tim Düsterhus</strong>

<ul>
<li>RFC: Make unserialize() emit a warning for trailing bytes in <a href="https://github.com/php/php-src/pull/9630">GH-9630</a></li>
</ul></li>
<li><strong>Dmitry Stogov</strong>

<ul>
<li>JIT: Fixed inaccurate range inference usage for UNDEF/NULL/FALSE in <a href="https://github.com/php/php-src/commit/25ad171f63">25ad171f63</a></li>
<li>Fixed <a href="https://github.com/php/php-src/issues/11127">GH-11127</a> (JIT fault) in <a href="https://github.com/php/php-src/commit/ed0b593c11">ed0b593c11</a></li>
</ul></li>
<li><strong>yang yuhan</strong>

<ul>
<li>JIT: Align JIT stubs in <a href="https://github.com/php/php-src/pull/11149">GH-11149</a></li>
</ul></li>
<li><strong>ColinHDev</strong>

<ul>
<li>Fix negative indices on empty array not affecting next chosen index in <a href="https://github.com/php/php-src/pull/11157">GH-11157</a></li>
</ul></li>
<li><strong>Sara</strong>

<ul>
<li>Add configuration opcache.jit_max_trace_length in <a href="https://github.com/php/php-src/pull/11173">GH-11173</a></li>
<li>Cacheline demote to improve performance in <a href="https://github.com/php/php-src/pull/11101">GH-11101</a></li>
</ul></li>
<li><strong>Niels Dossche</strong>

<ul>
<li>Fix too wide OR and AND range inference in <a href="https://github.com/php/php-src/pull/11170">GH-11170</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/9068">GH-9068</a>: Conditional jump or move depends on uninitialised value(s) in <a href="https://github.com/php/php-src/pull/10221">GH-10221</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11175">GH-11175</a> and <a href="https://github.com/php/php-src/issues/11177">GH-11177</a>: Stream socket timeout undefined behaviour in <a href="https://github.com/php/php-src/pull/11183">GH-11183</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11178">GH-11178</a>: Segmentation fault in spl_array_it_get_current_data (PHP 8.1.18) in <a href="https://github.com/php/php-src/pull/11182">GH-11182</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11104">GH-11104</a>: STDIN/STDOUT/STDERR is not available for CLI without a script in <a href="https://github.com/php/php-src/commit/f6c0c60ef6">f6c0c60ef6</a></li>
<li>Implement NEON-accelerated version of BLOCKCONV for lowercasing and uppercasing strings in <a href="https://github.com/php/php-src/pull/11161">GH-11161</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/10031">GH-10031</a>: [Stream] STREAM_NOTIFY_PROGRESS over HTTP emitted irregularly for last chunk of data in <a href="https://github.com/php/php-src/pull/10492">GH-10492</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11141">GH-11141</a>: Could not open input file: should be sent to stderr in <a href="https://github.com/php/php-src/pull/11163">GH-11163</a></li>
<li>Fix maximum argument count of pcntl_forkx() in <a href="https://github.com/php/php-src/pull/11199">GH-11199</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11160">GH-11160</a>: Few tests failed building with new libxml 2.11.0 in <a href="https://github.com/php/php-src/pull/11162">GH-11162</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11180">GH-11180</a>: hash_file() appears to be restricted to 3 arguments in <a href="https://github.com/php/php-src/pull/11198">GH-11198</a></li>
<li>Remove unnecessary NULL assignments after ecalloc in streams in <a href="https://github.com/php/php-src/pull/11209">GH-11209</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/8426">GH-8426</a>: make test fail while soap extension build in <a href="https://github.com/php/php-src/pull/11211">GH-11211</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/10834">GH-10834</a>: exif_read_data() cannot read smaller stream wrapper chunk sizes in <a href="https://github.com/php/php-src/pull/10924">GH-10924</a></li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=97836">#97836</a> and <a href="https://bugs.php.net/bug.php?id=81705">#81705</a>: Segfault / type confusion in concat_function in <a href="https://github.com/php/php-src/pull/10049">GH-10049</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11274">GH-11274</a>: POST/PATCH request via file_get_contents + stream_context_create switches to GET after a HTTP 308 redirect in <a href="https://github.com/php/php-src/pull/11275">GH-11275</a></li>
<li>Fix -Wstrict-prototypes warnings in fuzzer SAPI in <a href="https://github.com/php/php-src/pull/11277">GH-11277</a></li>
<li>Remove unused variable err in mb_send_mail() in <a href="https://github.com/php/php-src/pull/11285">GH-11285</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11245">GH-11245</a> (In some specific cases SWITCH with one default statement will cause segfault) in <a href="https://github.com/php/php-src/pull/11251">GH-11251</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11281">GH-11281</a>: DateTimeZone::getName() does not include seconds in offset in <a href="https://github.com/php/php-src/pull/11282">GH-11282</a></li>
<li>Fix allocation loop in <code>zend_shared_alloc_startup()</code> in <a href="https://github.com/php/php-src/pull/11306">GH-11306</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11288">GH-11288</a> and <a href="https://github.com/php/php-src/issues/11289">GH-11289</a> and <a href="https://github.com/php/php-src/issues/11290">GH-11290</a> and <a href="https://github.com/php/php-src/issues/9142">GH-9142</a>: DOMExceptions and segfaults with replaceWith in <a href="https://github.com/php/php-src/pull/11299">GH-11299</a></li>
<li>Shrink libxml_doc_props struct in <a href="https://github.com/php/php-src/pull/11326">GH-11326</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/10234">GH-10234</a>: Setting DOMAttr::textContent results in an empty attribute value in <a href="https://github.com/php/php-src/pull/10245">GH-10245</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11338">GH-11338</a>: SplFileInfo empty getBasename with more than one slash in <a href="https://github.com/php/php-src/pull/11340">GH-11340</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11336">GH-11336</a>: php still tries to unlock the shared memory ZendSem with opcache.file_cache_only=1 but it was never locked in <a href="https://github.com/php/php-src/pull/11341">GH-11341</a></li>
<li>Fix spec compliance error for DOMDocument::getElementsByTagNameNS in <a href="https://github.com/php/php-src/pull/11343">GH-11343</a></li>
<li>Fix DOMElement::append() and DOMElement::prepend() hierarchy checks in <a href="https://github.com/php/php-src/pull/11344">GH-11344</a></li>
<li>Remove unnecessary tree setting in dom_zvals_to_fragment() in <a href="https://github.com/php/php-src/pull/11345">GH-11345</a></li>
<li>Implement dom_get_doc_props_read_only() in <a href="https://github.com/php/php-src/pull/11345">GH-11345</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11347">GH-11347</a>: Memory leak when calling a static method inside an xpath query in <a href="https://github.com/php/php-src/pull/11350">GH-11350</a></li>
</ul></li>
<li><strong>Ilija Tovilo 💜</strong>

<ul>
<li>Add retry mechanism in <code>run-tests.php</code> in <a href="https://github.com/php/php-src/pull/10892">GH-10892</a></li>
<li>Downgrade to Ubuntu 20.04 for ASAN nightly for now in <a href="https://github.com/php/php-src/commit/ef6bbaa1ec">ef6bbaa1ec</a></li>
<li>Correctly copy lineno for zval asts in <a href="https://github.com/php/php-src/pull/11203">GH-11203</a></li>
<li>Fix use-of-uninitialized value in <code>phar_object.c</code> in <a href="https://github.com/php/php-src/pull/11202">GH-11202</a></li>
<li>Fix use-of-undefined in zend_fiber_object_gc of ex->call in <a href="https://github.com/php/php-src/pull/11208">GH-11208</a></li>
<li>Fix compilation for PHP 8.1 in <a href="https://github.com/php/php-src/commit/8f66b67ccf">8f66b67ccf</a></li>
<li>Fix potential NULL pointer access in zend_fiber_object_gc in <a href="https://github.com/php/php-src/commit/0a04c008d0">0a04c008d0</a></li>
<li>Fix delayed early binding class redeclaration error in <a href="https://github.com/php/php-src/pull/11226">GH-11226</a></li>
<li>Fix -Wenum-int-mismatch warning in ext/json/php_json_encoder.h in <a href="https://github.com/php/php-src/commit/ac41608797">ac41608797</a></li>
<li>Implement delayed early binding for classes without parents in <a href="https://github.com/php/php-src/commit/0600f513b3">0600f513b3</a></li>
<li>Fix segfault in mb_strrpos/mb_strripos with ASCII encoding and negative offset in <a href="https://github.com/php/php-src/pull/11220">GH-11220</a></li>
<li>Fix string coercion for $a .= $a in <a href="https://github.com/php/php-src/pull/11296">GH-11296</a></li>
<li>Fix concat_function use-after-free on out-of-memory error in <a href="https://github.com/php/php-src/pull/11297">GH-11297</a></li>
<li>Fix access on NULL pointer in array_merge_recursive() in <a href="https://github.com/php/php-src/pull/11303">GH-11303</a></li>
<li>Fix preg_replace_callback_array() pattern validation in <a href="https://github.com/php/php-src/pull/11301">GH-11301</a></li>
<li>Fix exception handling in array_multisort() in <a href="https://github.com/php/php-src/pull/11302">GH-11302</a></li>
<li>Use zend_ast_apply in zend_eval_const_expr in <a href="https://github.com/php/php-src/pull/11261">GH-11261</a></li>
<li>Allow arbitrary expressions in static variable initializer in <a href="https://github.com/php/php-src/pull/9301">GH-9301</a></li>
<li>Use single allocation for indirect values in array_multisort in <a href="https://github.com/php/php-src/pull/11309">GH-11309</a></li>
<li>Fix <code>zend_jit_stop_counter_handlers()</code> performance issues with protect_memory=1 in <a href="https://github.com/php/php-src/pull/11323">GH-11323</a></li>
<li>Add tests for list() in assignment in array literals in <a href="https://github.com/php/php-src/commit/8ed66b4347">8ed66b4347</a></li>
<li>Revert "Use zend_ast_apply in zend_eval_const_expr (#11261)" in <a href="https://github.com/php/php-src/commit/fbe6696d49">fbe6696d49</a></li>
</ul></li>
<li><strong>Nils</strong>

<ul>
<li>Remove unused macro PHP_FNV1_32A_INIT and PHP_FNV1A_64_INIT in <a href="https://github.com/php/php-src/pull/11114">GH-11114</a></li>
</ul></li>
<li><strong>David CARLIER</strong>

<ul>
<li><code>ext/pgsql</code>: pg_cancel_query internal update in <a href="https://github.com/php/php-src/commit/84c185c8ba">84c185c8ba</a></li>
<li><code>ext/pgsql</code>: pg_trace allow to refine its trace mode via 2 new constants in <a href="https://github.com/php/php-src/commit/7ec8ae12c4">7ec8ae12c4</a></li>
<li><code>ext/pgsql</code>: pg_lo_read addressing the todo. in <a href="https://github.com/php/php-src/pull/11159">GH-11159</a></li>
<li><code>ext/pgsql</code> adding PGSQL_ERRORS_SQLSTATE constant support in <a href="https://github.com/php/php-src/commit/f31d253849">f31d253849</a></li>
<li><code>ext/pgsql</code>: fix pg_trace test when trace mode is supported. in <a href="https://github.com/php/php-src/pull/11191">GH-11191</a></li>
</ul></li>
<li><strong>Bob Weinand</strong>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11189">GH-11189</a>: Exceeding memory limit in zend_hash_do_resize leaves the array in an invalid state in <a href="https://github.com/php/php-src/commit/05bd1423ee">05bd1423ee</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/11222">GH-11222</a>: foreach by-ref may jump over keys during a rehash in <a href="https://github.com/php/php-src/commit/975d28e278">975d28e278</a></li>
</ul></li>
<li><strong>Julien Quiaios</strong>

<ul>
<li>Add new test for array_fill() to cover the case when the parameter count is too large in <a href="https://github.com/php/php-src/pull/11184">GH-11184</a></li>
</ul></li>
<li><strong>Cédric Anne</strong>

<ul>
<li>Make SERVER_SOFTWARE compliant with RFC3875 in <a href="https://github.com/php/php-src/pull/11093">GH-11093</a></li>
</ul></li>
<li><strong>Calvin Buckley</strong>

<ul>
<li><code>http_response_code</code> should warn if headers were already sent in <a href="https://github.com/php/php-src/pull/10744">GH-10744</a></li>
</ul></li>
<li><strong>Daniel Kesselberg</strong>

<ul>
<li>Add PKCS7_NOOLDMIMETYPE and OPENSSL_CMS_OLDMIMETYPE in <a href="https://github.com/php/php-src/commit/fa10dfcc81">fa10dfcc81</a></li>
</ul></li>
<li><strong>Jakub Zelenka 💜</strong>

<ul>
<li>Add myself as a standard CODEOWNER to not miss some changes in <a href="https://github.com/php/php-src/commit/5690e8baea">5690e8baea</a></li>
<li>Fix <a href="https://github.com/php/php-src/issues/10461">GH-10461</a>: Postpone FPM child freeing in event loop in <a href="https://github.com/php/php-src/commit/102953735c">102953735c</a></li>
<li>Expose JSON internal function to escape string in <a href="https://github.com/php/php-src/commit/e8a836eb39">e8a836eb39</a></li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=64539">#64539</a>: FPM status - query_string not properly JSON encoded in <a href="https://github.com/php/php-src/pull/11050">GH-11050</a></li>
<li>FPM: Fix memory leak for invalid primary script file handle in <a href="https://github.com/php/php-src/pull/11088">GH-11088</a></li>
<li>Fix FPM status json encoded value test in <a href="https://github.com/php/php-src/pull/11276">GH-11276</a></li>
</ul></li>
<li><strong>Florian Moser</strong>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11054">GH-11054</a>: Reset OpenSSL errors when using a PEM public key in <a href="https://github.com/php/php-src/pull/11055">GH-11055</a></li>
</ul></li>
<li><strong>George Peter Banyard 💜</strong>

<ul>
<li>Prevent unnecessary string duplication in assert() in <a href="https://github.com/php/php-src/pull/11031">GH-11031</a></li>
<li>ext/standard/array.c: use uint32_t instead of incorrect int type in <a href="https://github.com/php/php-src/commit/646f54b594">646f54b594</a></li>
<li>Fix assertion warning message when no description is provided in <a href="https://github.com/php/php-src/commit/e35cd34bcd">e35cd34bcd</a></li>
<li>Use uint32_t for variable storing <code>ZEND_NUM_ARGS()</code> in <a href="https://github.com/php/php-src/commit/80c8ca9c8f">80c8ca9c8f</a></li>
<li>FPM: refactor fpm_php_get_string_from_table() to better match usage in <a href="https://github.com/php/php-src/pull/11051">GH-11051</a></li>
</ul></li>
<li><strong>Máté Kocsis 💜</strong>

<ul>
<li>Narrow bool return types to true when possible in <a href="https://github.com/php/php-src/commit/85338569de">85338569de</a></li>
<li>Add support for true standalone type when generating methodsynopsis in <a href="https://github.com/php/php-src/commit/281669aeb4">281669aeb4</a></li>
<li>Narrow some more return types to true in <a href="https://github.com/php/php-src/commit/09dd3e3daf">09dd3e3daf</a></li>
</ul></li>
<li><strong>Michael Voříšek</strong>

<ul>
<li>Fix gmp_long/gmp_ulong typedef warning on Windows x86 in <a href="https://github.com/php/php-src/pull/11112">GH-11112</a></li>
<li>Allow CTE on more CTE safe functions in <a href="https://github.com/php/php-src/pull/10771">GH-10771</a></li>
</ul></li>
<li><strong>Amedeo Baragiola</strong>

<ul>
<li>Fix compilation error on old GCC versions in <a href="https://github.com/php/php-src/pull/11212">GH-11212</a></li>
</ul></li>
<li><strong>Luc Vieillescazes</strong>

<ul>
<li>Keep the orig_path for xport stream in <a href="https://github.com/php/php-src/pull/11113">GH-11113</a></li>
</ul></li>
<li><strong>Randy Geraads</strong>

<ul>
<li>Added negative offset test for mb_strrpos in <a href="https://github.com/php/php-src/commit/c5a623ba5e">c5a623ba5e</a></li>
</ul></li>
<li><strong>Peter Kokot</strong>

<ul>
<li>Fix #9483: Fix autoconf warnings due to old libtool in <a href="https://github.com/php/php-src/pull/11207">GH-11207</a></li>
</ul></li>
<li><strong>Alex Dowad</strong>

<ul>
<li>Use shared, immutable array for return value of mb_list_encodings in <a href="https://github.com/php/php-src/commit/97e29bed9e">97e29bed9e</a></li>
<li>Take order of candidate encodings into account when guessing text encoding in <a href="https://github.com/php/php-src/commit/3ab10da758">3ab10da758</a></li>
<li>Use pakutoma's encoding check functions for mb_detect_encoding even in non-strict mode in <a href="https://github.com/php/php-src/commit/7914b8cefd">7914b8cefd</a></li>
<li>Combine CJK encoding conversion code in a single source file in <a href="https://github.com/php/php-src/commit/c717c79a09">c717c79a09</a></li>
<li>Optimize conversion of SJIS-2004 text to Unicode in <a href="https://github.com/php/php-src/commit/73633bf1c3">73633bf1c3</a></li>
<li>Optimize conversion of CP932 text to Unicode in <a href="https://github.com/php/php-src/commit/175154dbcc">175154dbcc</a></li>
<li>Move kana translation tables to <code>mbfilter_cjk.c</code> in <a href="https://github.com/php/php-src/commit/245daedb41">245daedb41</a></li>
<li>Test mb_strlen for all text encodings supported by mbstring in <a href="https://github.com/php/php-src/commit/f337c92050">f337c92050</a></li>
<li>Fix problem with CP949 conversion when 0xC9 precedes byte lower than 0xA1 in <a href="https://github.com/php/php-src/commit/8e6be14372">8e6be14372</a></li>
<li>Convert mbfilter_conv{,_r}_map_tbl to return bool in <a href="https://github.com/php/php-src/commit/18ca489347">18ca489347</a></li>
</ul></li>
<li><strong>Peter Chun-Sheng, Li</strong>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/11099">GH-11099</a>: Generating <code>phar.php</code> during cross-compile can't be done in <a href="https://github.com/php/php-src/pull/11243">GH-11243</a></li>
</ul></li>
<li><strong>Nikita Popov</strong>

<ul>
<li>Correctly handle multiple constants in typed declaration in <a href="https://github.com/php/php-src/commit/c230aa9be3">c230aa9be3</a></li>
</ul></li>
<li><strong>LoongT4o</strong>

<ul>
<li>Fix the JIT buffer relocation failure at the corner case in <a href="https://github.com/php/php-src/pull/11266">GH-11266</a></li>
</ul></li>
<li><strong>Pierrick Charron</strong>

<ul>
<li>PHP-8.2 is now for PHP 8.2.8-dev in <a href="https://github.com/php/php-src/commit/d5f68b50fc">d5f68b50fc</a></li>
</ul></li>
<li><strong>Ben Ramsey</strong>

<ul>
<li>PHP-8.1 is now for PHP 8.1.21-dev in <a href="https://github.com/php/php-src/commit/2f2fd06be0">2f2fd06be0</a></li>
</ul></li>
<li><strong>Mikhail Galanin</strong>

<ul>
<li><code>ext/session</code>: pass ini options to extra processes in tests in <a href="https://github.com/php/php-src/pull/11294">GH-11294</a></li>
</ul></li>
<li><strong>KoudelkaB</strong>

<ul>
<li>Access violation when ALLOC_FALLBACK fixed in <a href="https://github.com/php/php-src/commit/8946b7b141">8946b7b141</a></li>
</ul></li>
<li><strong>Daniil Gentili</strong>

<ul>
<li>Fix GCC 12 compilation on riscv64 in <a href="https://github.com/php/php-src/commit/1dfa277a96">1dfa277a96</a></li>
</ul></li>
<li><strong>Kirill Nesmeyanov</strong>

<ul>
<li>Add string output escaping into zend dump (phpdbg + opcache debug) in <a href="https://github.com/php/php-src/pull/11337">GH-11337</a></li>
</ul></li>
<li><strong>divinity76</strong>

<ul>
<li>Fix return value in stub file for DOMNodeList::item in <a href="https://github.com/php/php-src/pull/11342">GH-11342</a></li>
</ul></li>
<li><strong>Yuya Hamada</strong>

<ul>
<li>Fix mb_strlen is wrong length for CP932 when 0x80 in <a href="https://github.com/php/php-src/commit/c50172e812">c50172e812</a></li>
</ul></li>
<li><strong>James Lucas</strong>

<ul>
<li>Fix bug <a href="https://github.com/php/php-src/issues/11246">GH-11246</a> cli/get_set_process_title in <a href="https://github.com/php/php-src/pull/11247">GH-11247</a></li>
</ul></li>
</ul>

</details>

<p><br>
This concludes the list of commits made by the PHP core team in the past month. We're grateful for their hard work and dedication to improving PHP.</p>

<p><br></p>

<hr />

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a> or via <a href="https://github.com/sponsors/ThePHPF">GitHub Sponsors</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is (except for this particular one) prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP Core Roundup #12]]></title>
            <link href="https://thephp.foundation/blog/2023/05/02/php-core-roundup-12/"/>
            <updated>2023-05-02T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2023/05/02/php-core-roundup-12/</id>
            <content type="html"><![CDATA[<p>The PHP Foundation is a collective of PHP contributors, veterans, and companies that collaborate to ensure the long-term sustainability of the PHP programming language. Started over a year ago, the PHP Core Roundup series deliver a summary of the latest developments, discussions, and news about PHP Core made by both PHP Foundation members and other contributors. This post is the twelfth in the PHP Core Roundup series.</p>

<blockquote>
  <p>The PHP Foundation currently supports six part-time PHP contributors who work on maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>
</blockquote>

<p><br>
We publish the posts on our website, and you can subscribe to a newsletter; You don’t necessarily have to be a PHP Foundation backer to follow <em>PHP Core Roundup</em>.</p>

<p><div class="px-4 pt-3 border-b border-t -mx-4 border-gray-200">
    <div class="bg-white py-8">
        <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 lg:grid-cols-12 lg:gap-8">
            <div class="max-w-xl text-4xl font-medium tracking-tight text-gray-900 lg:col-span-6">
                Subscribe to PHP Core Roundup newsletter
            </div>
            <form method="POST"
                  action="https://php-foundation.mailcoach.app/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056"
                  class="w-full max-w-md lg:col-span-6">
                <div class="flex gap-x-4">
                    <label for="email-address" class="sr-only">Email address</label>
                    <input id="email-address" name="email" type="email" autocomplete="email" required
                           class="min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                           placeholder="Enter your email">
                    <button type="submit"
                            class="inline-block py-2 no-underline px-6 !text-white bg-[#7f52ff] rounded-3xl hover:bg-[rgba(127,82,255,.8)]">
                        Subscribe
                    </button>
                </div>
                <div class="mt-4 text-sm leading-6 text-gray-900">
                    We care about your data.
                    Read our <a href="https://thephp.foundation/privacy-policy"
                                class="font-semibold text-indigo-600 hover:text-indigo-500 no-underline">privacy policy</a>.
                </div>
            </form>
        </div>
    </div>
</div>
</p>

<h2 id="php-8.3-release-managers-elected">PHP 8.3 Release Managers Elected</h2>

<p>Release managers for PHP 8.3 were elected from a vote that ended on April 16.</p>

<p><strong>Pierrick Charron</strong>, one of the PHP 8.2 release managers stepped in to be the veteran release manager, and <strong>Jakub Zelenka 💜</strong> and <strong>Calvin Buckley</strong> were elected as the "rookie" release managers. Jakub Zelenka is one of the PHP Foundation members.</p>

<p>Release managers are responsible for triaging bugs and security vulnerabilities, signing and releasing tagged PHP releases, communication, and other management tasks until the PHP version reaches its End-Of-Life.</p>

<h2 id="discussions-on-php-governance-and-communication">Discussions on PHP Governance and Communication</h2>

<p>During the last month, there were several mailing list discussions about PHP governance and communication. These lengthy discussions lead to an RFC (currently in vote) to form a "PHP Technical Committee", and a discussion on moving PHP Internals mailing list to GitHub issues and discussions.</p>

<p>While the PHP Foundation seeks the long-term sustainability of the PHP project by funding full-time and part-time PHP contributors and acting as a collective for other PHP initiatives, the RFC for the technical committee and the discussion on moving the PHP Internals mailing list to GitHub remained the discussion of all PHP contributors.</p>

<p>The <a href="https://wiki.php.net/rfc/php_technical_committee">Technical Committee RFC</a> intends to form an elected group of PHP contributors who will focus on PHP internal changes. User-facing changes such as PHP APIs would still go through the current RFC voting process. <a href="https://externals.io/message/119829">RFC discussion</a> and an <a href="https://externals.io/message/120151">in-vote discussion</a> provide more context. Jakub also emailed the PHP Internals with <a href="https://externals.io/message/120167">Current RFC process and project decisions</a> to provide more information.</p>

<p><a href="https://externals.io/message/119955">Moving PHP internals to GitHub</a> is also a lengthy discussion on highlighting some of the flaws of the current mailing list approach to discussions, and proposing to use GitHub Discussions and issues for the communication amongst PHP contributors and users.</p>

<h2 id="recent-rfcs-and-mailing-list-discussions">Recent RFCs and Mailing List Discussions</h2>

<blockquote>
  <p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net website</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>
</blockquote>

<p><br>
Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, documentation, and the php.net website. Here is a summary of some changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<h3 id="rfc-updates">RFC Updates</h3>

<p>Following are the RFCs and major pull-requests discussed, voted on, and implemented since our last update.</p>

<ul>
<li><p><strong>RFC In Vote: <a href="https://wiki.php.net/rfc/php_technical_committee">PHP Technical Committee</a> by Jakub Zelenka 💜 and Larry Garfield</strong></p>

<p>As mentioned above, proposes to establish a technical committee to take decisions on PHP internal API changes and other technical aspects.</p></li>
<li><p><strong>RFC Under <a href="https://externals.io/message/120146">Discussion</a>: <a href="https://wiki.php.net/rfc/deprecate_functions_with_overloaded_signatures">Deprecate functions with overloaded signatures</a> by Máté Kocsis 💜</strong></p>

<p>PHP does not support method overloading similar to Swift or Java. However, there are some internal PHP functions and methods that accept multiple function/method signatures that behave differently. For example, the <code>session_set_save_handler</code> function accepts several <code>callable</code> parameters <strong><em>or</em></strong> a single <code>SessionHandlerInterface</code> implementation.</p>

<p>While there are historical reasons for those internal functions to provide multiple signatures, part of of the long-term language streamlining goals of PHP is to get rid of these inconsistencies. This RFC proposes to deprecate several overloaded functions and methods. For each of the deprecated signatures, the RFC proposes a new function or a method, or to eventually remove the deprecated signature in the next major PHP version (PHP 9.0 as for now).</p></li>
<li><p><strong>RFC Under <a href="https://externals.io/message/120048">Discussion</a>: <a href="https://wiki.php.net/rfc/clone_with">Clone with</a> by Máté Kocsis 💜</strong></p>

<p>Proposes a new "clone with" construct to PHP to address to too strict nature of <code>readonly</code> properties. As of PHP 8.2, <code>readonly</code> properties can be too strict and do not provide the means to create immutable objects that remain immutable at an object level, because cloned objects remain read-only too.</p>

<pre><code class="php">class Response implements ResponseInterface {
   public readonly int $statusCode;
   public readonly string $reasonPhrase;
   // ...
   public function withStatus($code, $reasonPhrase = ''): Response
   {
       return clone $this with {
           statusCode: $code,
           reasonPhrase: $reasonPhrase
       };
   }
   // ...
}

$response = new Response(200);
$response-&gt;withStatus(201)-&gt;withStatus(202);
</code></pre></li>
</ul>

<p><br /></p>

<ul>
<li><p><strong>RFC Under <a href="https://externals.io/message/119851">Discussion</a>: <a href="https://wiki.php.net/rfc/core-autoloading">New core autoloading mechanism with support for function autoloading</a> by George Peter Banyard 💜 and Dan Ackroyd</strong></p>

<p>PHP has had support for class autoloading since PHP 5 and it is an extremely useful feature that is relied on to only load classes that are being used within the current request. However, the current autoloading mechanism does not support autoloading functions.</p>

<p>The need for such a feature seems very clear as users will create “helper” classes with static methods to take advantage of autoloading via the class autoloading mechanism.</p>

<p>The proposal consists of adding a better designed class autoloading mechanism and a new function autoloading mechanism, and aliasing the existing autoload functions to the new versions. The proposal does <em>not</em> include a default implementation for either the class or the function autoloading mechanism.</p>

<p>Eight newly proposed <code>autoload_(register|unregister|call|list)_(class|function)</code> functions will be used to register, unregister, call, and list autoloaders for both classes and functions. Existing <code>spl_*</code> functions are proposed to be aliased to the new functions.</p>

<p>Further, <code>function_exists</code> will get a new parameter <code>$autoload</code> similar to <code>class_exists()</code> to trigger the autoloader if necessary.</p></li>
<li><p><strong>RFC Accepted : <a href="https://wiki.php.net/rfc/arbitrary_static_variable_initializers">Arbitrary static variable initializers</a> by Ilija Tovilo 💜</strong></p>

<p>PHP does not allow using arbitrary expressions in static variable initializers because the values are initialized at the compile time. This also lead to some unexpected behaviors when the same variable is initialized in more than once within the same scope.</p>

<p>This RFC proposes to remove the current limitation of not allowing expressions in static variable initializers. It also forbids redeclaring static variables altogether.</p>

<pre><code class="php">function foo() {
 static $i = getValue();
}
</code></pre>

<p>This RFC was accepted by the vote, and will be implemented in PHP 8.3.</p></li>
<li><p><strong>RFC Implemented: <a href="https://wiki.php.net/rfc/unserialize_warn_on_trailing_data">Make unserialize() emit a warning for trailing bytes</a> by Tim Düsterhus</strong></p>

<p>This RFC proposes that <a href="http://www.php.net/unserialize"><code>unserialize()</code></a> shall emit a new <code>E_WARNING</code> whenever the input string contains additional bytes once the unserialization parser terminates after successfully parsing a value. In other words: A warning shall be emitted if bytes can be removed from the end of the input string without changing the return value of <a href="http://www.php.net/unserialize"><code>unserialize()</code></a>.</p>

<p>The RFC vote unanimously accepted this change, and it is already implemented for PHP 8.3.</p></li>
</ul>

<h3 id="notable-mailing-list-discussions">Notable Mailing List Discussions</h3>

<ul>
<li><a href="https://externals.io/message/120118">Final anonymous classes</a></li>
<li><a href="https://externals.io/message/120083">[Discussion] Callable types via Interfaces</a></li>
<li><a href="https://externals.io/message/120094">Expansion of PHP Symbols?</a></li>
<li><a href="https://externals.io/message/119834">Future stability of PHP?</a></li>
<li><a href="https://externals.io/message/119955">Moving PHP internals to GitHub</a></li>
<li><a href="https://externals.io/message/119696">Brainstorming idea: inline syntax for lexical (captured) variables</a></li>
<li><a href="https://externals.io/message/119948">Possible RFC: <code>$_SERVER['REQUEST_TIME_FLOAT']</code> </a></li>
<li><a href="https://externals.io/message/119829">[RFC] PHP Technical Committee</a></li>
<li><a href="https://externals.io/message/119818">Array spread append </a></li>
<li><a href="https://externals.io/message/119893">PHP Modules </a></li>
<li><a href="https://externals.io/message/119807">Property Hooks Discussion </a></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Following are some changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements. There are automated unit and integration tests for each of these changes, the PHP core developers review all pull requests.</p>

<hr />

<h3 id="full-list-of-commits-since-php-core-roundup-%2311">Full list of commits since <a href="/blog/2023/04/01/php-core-roundup-11/">PHP Core Roundup #11</a></h3>

<details>

<summary>Click here to expand</summary>

<ul>
<li>Fix <a href="https://github.com/php/php-src/issues/8841">GH-8841</a>: php-cli core dump calling a badly formed function in <a href="https://github.com/php/php-src/pull/10989">GH-10989</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10990">GH-10990</a>: <code>mail()</code> throws <code>TypeError</code> after iterating over <code>$additional_headers</code> array by reference in <a href="https://github.com/php/php-src/pull/10991">GH-10991</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10983">GH-10983</a>: State-dependant segfault in <code>ReflectionObject::getProperties</code> in <a href="https://github.com/php/php-src/pull/10984">GH-10984</a> by Niels Dossche</li>
<li>Remove <code>XFAIL</code> from test cases for <code>mb_strcut</code> when used with JIS or ISO-2022-JP encoding in <a href="https://github.com/php/php-src/commit/c211e67b4e">c211e67b4e</a> by Alex Dowad</li>
<li>Add ASAN <code>XLEAK</code> support in <a href="https://github.com/php/php-src/pull/10996">GH-10996</a> by Ilija Tovilo 💜</li>
<li>Fix <code>add_function_array()</code> assertion when op2 contains op1 in <a href="https://github.com/php/php-src/pull/10975">GH-10975</a> by Ilija Tovilo 💜</li>
<li>Add <code>zend_alloc</code> <code>XLEAK</code> support in <a href="https://github.com/php/php-src/pull/10999">GH-10999</a> by Ilija Tovilo 💜</li>
<li>Tracing JIT: Fixed incorrect code generation for SEND-ing of result of ASSIGN to typed reference in <a href="https://github.com/php/php-src/commit/8a749c79d0">8a749c79d0</a> by Dmitry Stogov</li>
<li>Fix incorrect error handling in <code>dom_zvals_to_fragment()</code> in <a href="https://github.com/php/php-src/pull/10981">GH-10981</a> by Niels Dossche</li>
<li>Add forgotten upgrading note for the Readonly amendments RFC in <a href="https://github.com/php/php-src/commit/0a169cbd5b">0a169cbd5b</a> by Máté Kocsis 💜</li>
<li>Remove name field from the <code>zend_constant</code> struct in <a href="https://github.com/php/php-src/pull/10954">GH-10954</a> by Máté Kocsis 💜</li>
<li>Cleanup pubkey checks in <code>ext/phar</code> in <a href="https://github.com/php/php-src/pull/11009">GH-11009</a> by Niels Dossche</li>
<li>[Zend]: Fix unnecessary alignment in <code>ZEND_CALL_FRAME_SLOT</code> macro in <a href="https://github.com/php/php-src/pull/10988">GH-10988</a> by Tony Su</li>
<li>Add ngx-php to opcache supported sapis in <a href="https://github.com/php/php-src/pull/11013">GH-11013</a> by Joan Miquel</li>
<li>Delay freeing of overwritten values in assignments in <a href="https://github.com/php/php-src/commit/915b2837f7">915b2837f7</a> by Dmitry Stogov</li>
<li>Add various tests for <a href="https://github.com/php/php-src/issues/10168">GH-10168</a> in <a href="https://github.com/php/php-src/commit/f43fa59171">f43fa59171</a> by Ilija Tovilo 💜</li>
<li>Delay destructor for <code>zend_assign_to_typed_ref</code> in <a href="https://github.com/php/php-src/commit/b39107c774">b39107c774</a> by Ilija Tovilo 💜</li>
<li>Delay destructor for <code>zend_std_write_property</code> in <a href="https://github.com/php/php-src/commit/24acb4f134">24acb4f134</a> by Dmitry Stogov</li>
<li>Add <code>GC_DTOR</code>/<code>GC_DTOR_NO_REF</code> macros in <a href="https://github.com/php/php-src/commit/fdbea4f39e">fdbea4f39e</a> by Ilija Tovilo 💜</li>
<li>JIT support for delayed destructor for <code>zend_assign_to_typed_ref</code>/<code>prop</code> in <a href="https://github.com/php/php-src/commit/e1c6fb76c0">e1c6fb76c0</a> by Dmitry Stogov</li>
<li>Add note for <a href="https://github.com/php/php-src/issues/10168">GH-10168</a> to <code>UPGRADING.INTERNALS</code> in <a href="https://github.com/php/php-src/commit/3528ca8930">3528ca8930</a> by Ilija Tovilo 💜</li>
<li>Remove includes in <a href="https://github.com/php/php-src/commit/d5484bf115">d5484bf115</a> by Dmitry Stogov</li>
<li>Re-add <code>GC_DTOR</code> and <code>GC_DTOR_NO_REF</code> in <a href="https://github.com/php/php-src/commit/c796ce5713">c796ce5713</a> by Dmitry Stogov</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9397">GH-9397</a>: exif read : warnings and errors : Potentially invalid endianess, Illegal IFD size and Undefined index in <a href="https://github.com/php/php-src/pull/10470">GH-10470</a> by Niels Dossche</li>
<li>Add separate static property through trait if parent already declares it in <a href="https://github.com/php/php-src/pull/10937">GH-10937</a> by Ilija Tovilo 💜</li>
<li>Use <code>zend_call_known_instance_method()</code> instead of building FCI/FCC in serializer subroutine in <a href="https://github.com/php/php-src/pull/9955">GH-9955</a> by George Peter Banyard 💜</li>
<li>Extract common code for phar IO intercept functions in <a href="https://github.com/php/php-src/commit/3fb63f7fa2">3fb63f7fa2</a> by George Peter Banyard 💜</li>
<li>size variable is only used once, move closer to usage in <a href="https://github.com/php/php-src/commit/96ffdd492c">96ffdd492c</a> by George Peter Banyard 💜</li>
<li>Improve locality of stream variable in <a href="https://github.com/php/php-src/commit/06896d1c45">06896d1c45</a> by George Peter Banyard 💜</li>
<li>Use <code>zend_string_concat</code> helper instead of <code>strpprintf</code> in <a href="https://github.com/php/php-src/commit/8e51cfe0ae">8e51cfe0ae</a> by George Peter Banyard 💜</li>
<li>Convert <code>char*</code> + <code>size_t</code> parameters to <code>zend_string*</code> in <code>phar_find_in_include_path()</code> in <a href="https://github.com/php/php-src/commit/7d93ef067f">7d93ef067f</a> by George Peter Banyard 💜</li>
<li>Add FPM FastCGI env var test for Apache without path info fix in <a href="https://github.com/php/php-src/commit/15802dfc62">15802dfc62</a> by Jakub Zelenka 💜</li>
<li>Fix number of elements after packed hash filling in <a href="https://github.com/php/php-src/pull/11022">GH-11022</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/11016">GH-11016</a>: Heap buffer overflow in <code>ZEND_ADD_ARRAY_UNPACK_SPEC_HANDLER</code> in <a href="https://github.com/php/php-src/pull/11021">GH-11021</a> by Niels Dossche</li>
<li>Add FPM FCGI env Apache handler UDS test in <a href="https://github.com/php/php-src/commit/ebb3213f79">ebb3213f79</a> by Jakub Zelenka 💜</li>
<li>Fixed tests and remove the <code>XFAIL</code> 'Various bugs exist'. They did, but they were in the tests in <a href="https://github.com/php/php-src/commit/e67bb14ab4">e67bb14ab4</a> by Derick Rethans 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10737">GH-10737</a>: PHP 8.1.16 segfaults on line 597 of <code>sapi/apache2handler/sapi_apache2.c</code> in <a href="https://github.com/php/php-src/pull/10863">GH-10863</a> by Niels Dossche</li>
<li>Use <code>zend_string</code> for DBA path in <a href="https://github.com/php/php-src/pull/10698">GH-10698</a> by George Peter Banyard 💜</li>
<li><code>ext/sockets</code> adding FreeBSD's <code>SO_REUSEPORT_LB</code> constant in <a href="https://github.com/php/php-src/commit/6c532df705">6c532df705</a> by David CARLIER</li>
<li>Add case insensitive versions of the <code>zend_string_starts_with_*</code> APIs in <a href="https://github.com/php/php-src/pull/11032">GH-11032</a> by George Peter Banyard 💜</li>
<li><code>ext/phar</code>: Prevent unnecessary known string length computation in <a href="https://github.com/php/php-src/pull/11033">GH-11033</a> by George Peter Banyard 💜</li>
<li><code>ext/phar</code>: Remove duplicate cleaning-up code in <a href="https://github.com/php/php-src/commit/4082d425a9">4082d425a9</a> by George Peter Banyard 💜</li>
<li>Fix unevaluated rhs of class constant fetch in constant expression in <a href="https://github.com/php/php-src/pull/11047">GH-11047</a> by Ilija Tovilo 💜</li>
<li>Remove unneeded occurrences of my name in <code>UPGRADING</code> in <a href="https://github.com/php/php-src/commit/d64c7184d4">d64c7184d4</a> by Alex Dowad</li>
<li>Add more details to <code>NEWS</code> on <code>mb_detect_encoding</code>; also include in UPGRADING in <a href="https://github.com/php/php-src/commit/aa51871adc">aa51871adc</a> by Alex Dowad</li>
<li>Add additional note on <code>mb_encode_mimeheader</code> in <code>UPGRADING</code> in <a href="https://github.com/php/php-src/commit/a62d192ede">a62d192ede</a> by Alex Dowad</li>
<li>Add more details in <code>UPGRADING</code> on <code>mb_check_encoding</code> changes in <a href="https://github.com/php/php-src/commit/7cef7cb0ee">7cef7cb0ee</a> by Alex Dowad</li>
<li>Allow <code>FETCH_OBJ_W</code> and <code>FETCH_STATIC_PROP_W</code> to return <code>INDIRECT</code>/<code>UNDEF</code> zval for uninitialized typed properties in <a href="https://github.com/php/php-src/pull/11048">GH-11048</a> by Dmitry Stogov</li>
<li><code>ext/curl</code>: Protocol should be a case insensitive check in <a href="https://github.com/php/php-src/pull/11052">GH-11052</a> by George Peter Banyard 💜</li>
<li>Use curl from brew on MacOS CI in <a href="https://github.com/php/php-src/pull/11056">GH-11056</a> by Jakub Zelenka 💜</li>
<li>Improve ini number handling with <code>INI_SCANNER_TYPED</code> in <a href="https://github.com/php/php-src/pull/11014">GH-11014</a> by Ilija Tovilo 💜</li>
<li><code>ext/phar</code>: Fix recently introduced potential <code>NULL</code> dereferencement segfaults in <a href="https://github.com/php/php-src/pull/11065">GH-11065</a> by George Peter Banyard 💜</li>
<li>Optimize <code>HT_HASH_RESET</code> in <a href="https://github.com/php/php-src/pull/11059">GH-11059</a> by Niels Dossche</li>
<li><code>mb_parse_str</code>, <code>mb_http_input</code>, and <code>mb_convert_variables</code> use fast text conversion code for automatic encoding detection in <a href="https://github.com/php/php-src/commit/6df7557e43">6df7557e43</a> by Alex Dowad</li>
<li>Remove unnecessary memory clearing in virtual_file_ex() in <a href="https://github.com/php/php-src/pull/10963">GH-10963</a> by Niels Dossche</li>
<li>Fix test <code>bug60120.phpt</code> in <a href="https://github.com/php/php-src/pull/11064">GH-11064</a> by Ilija Tovilo 💜</li>
<li><code>xxhash.h</code>: Fix GCC 12 -Og in <a href="https://github.com/php/php-src/pull/11062">GH-11062</a> by Mingli Yu</li>
<li>Add benchmarking to CI in <a href="https://github.com/php/php-src/pull/11068">GH-11068</a> by Ilija Tovilo 💜</li>
<li>Restrict benchmarking push to php org in <a href="https://github.com/php/php-src/commit/d126031728">d126031728</a> by Ilija Tovilo 💜</li>
<li>Fix commit sha in commit name in <a href="https://github.com/php/php-src/commit/8d5e06dc94">8d5e06dc94</a> by Ilija Tovilo 💜</li>
<li>Micro-optimize double comparison in <a href="https://github.com/php/php-src/pull/11061">GH-11061</a> by Niels Dossche</li>
<li>Fix commit hash really this time in <a href="https://github.com/php/php-src/commit/f4ede230cd">f4ede230cd</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/11028">GH-11028</a>: Heap Buffer Overflow in <code>zval_undefined_cv</code> in <a href="https://github.com/php/php-src/pull/11083">GH-11083</a> by Niels Dossche</li>
<li>Add <code>zend_test_crash</code> funtion to segfault PHP process in <a href="https://github.com/php/php-src/pull/11082">GH-11082</a> by Jakub Zelenka 💜</li>
<li>Benchmarking mean in <a href="https://github.com/php/php-src/pull/11085">GH-11085</a> by Ilija Tovilo 💜</li>
<li>Fix uninitialized variable compile error in <a href="https://github.com/php/php-src/commit/2044e5aea0">2044e5aea0</a> by Ilija Tovilo 💜</li>
<li>Fix CI benchmarking diff in <a href="https://github.com/php/php-src/commit/af809ef028">af809ef028</a> by Ilija Tovilo 💜</li>
<li>Add missing <code>zend_test_crash</code> message initialization in <a href="https://github.com/php/php-src/commit/84be9042f9">84be9042f9</a> by Jakub Zelenka 💜</li>
<li>fpm: remove 2 unneeded newlines from zlog call in <a href="https://github.com/php/php-src/commit/581e729e8d">581e729e8d</a> by Sjon Hortensius</li>
<li>Support enums in array_unique in <a href="https://github.com/php/php-src/pull/11015">GH-11015</a> by Ilija Tovilo 💜</li>
<li>Typed class constants in <a href="https://github.com/php/php-src/pull/10444">GH-10444</a> by Máté Kocsis 💜</li>
<li><code>ext/openssl</code>: pass ini options to extra processes in tests in <a href="https://github.com/php/php-src/commit/5a4083181b">5a4083181b</a> by Jakub Holubansky</li>
<li>Fix uninitialized memory in <code>parse_ini_string()</code> in <a href="https://github.com/php/php-src/pull/11092">GH-11092</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/11071">GH-11071</a>: Revert "Fix [-Wundef] warning in INTL extension" in <a href="https://github.com/php/php-src/commit/31e21f7dbc">31e21f7dbc</a> by Remi Collet</li>
<li>Import timelib 2022.06 in <a href="https://github.com/php/php-src/commit/44eef677b0">44eef677b0</a> by Derick Rethans 💜</li>
<li>Fixed tests in <a href="https://github.com/php/php-src/commit/cc7b799c44">cc7b799c44</a> by Derick Rethans 💜</li>
<li>Add NEWS entry in <a href="https://github.com/php/php-src/commit/1dcab8a534">1dcab8a534</a> by Derick Rethans 💜</li>
<li>Fix mysql tests with non-standard server port in <a href="https://github.com/php/php-src/pull/9744">GH-9744</a> by Michael Voříšek</li>
<li>Bump OCI8 version to make a PECL release for 8.2 in <a href="https://github.com/php/php-src/commit/91d3aaaa93">91d3aaaa93</a> by Christopher Jones</li>
<li>Fix reference returned from <code>CallbackFilterIterator::accept()</code> in <a href="https://github.com/php/php-src/commit/5855bdcd6c">5855bdcd6c</a> by Ilija Tovilo 💜</li>
<li>Fix <code>-Wenum-int-mismatch</code> warnings on gcc 13 in <a href="https://github.com/php/php-src/pull/11103">GH-11103</a> by Ilija Tovilo 💜</li>
<li>Fix incorrect <code>CG(memoize_mode)</code> state after bailout in <code>??=</code> in <a href="https://github.com/php/php-src/pull/11109">GH-11109</a> by Ilija Tovilo 💜</li>
<li>ci update freebsd image to the 13.2 image in <a href="https://github.com/php/php-src/pull/11110">GH-11110</a> by David CARLIER</li>
<li>Import timelib 2022.07 to address OSS fuzz issue in <a href="https://github.com/php/php-src/commit/629d7740e8">629d7740e8</a> by Derick Rethans 💜</li>
<li><code>ext/intl</code>: deprecate <code>U_MULTIPLE_DECIMAL_SEPERATORS</code> constant in <a href="https://github.com/php/php-src/commit/976d7ed4c6">976d7ed4c6</a> by David CARLIER</li>
<li>Allow CTE on basic type/math functions in <a href="https://github.com/php/php-src/pull/10842">GH-10842</a> by Michael Voříšek</li>
<li>Allow array functions to operate in-place if the <code>refcount</code> is 1 in <a href="https://github.com/php/php-src/pull/11060">GH-11060</a> by Niels Dossche</li>
<li>Set <code>error_log</code> to an empty value if the test relies on that feature in <a href="https://github.com/php/php-src/pull/10772">GH-10772</a> by Niels Dossche</li>
<li>Add test to make sure that readonly properties cannot be reassigned by invoking the <code>__clone()</code> method directly in <a href="https://github.com/php/php-src/commit/04a5f2b11f">04a5f2b11f</a> by Máté Kocsis 💜</li>
<li>Minor conditions simplify in <a href="https://github.com/php/php-src/pull/10397">GH-10397</a> by Michael Voříšek</li>
<li>Fix incorrect match default branch optimization in <a href="https://github.com/php/php-src/pull/11135">GH-11135</a> by Ilija Tovilo 💜</li>
<li><code>ext/sockets</code>: addig Linux's <code>IP_BIND_ADDRESS_NO_PORT</code> in <a href="https://github.com/php/php-src/commit/7b4b40f06f">7b4b40f06f</a> by David Carlier</li>
<li>Fix ZPP of <code>pg_lo_export()</code> in <a href="https://github.com/php/php-src/pull/11132">GH-11132</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9344">GH-9344</a>: pgsql pipeline mode proposal in <a href="https://github.com/php/php-src/commit/6a9061e0af">6a9061e0af</a> by David CARLIER</li>
<li>Propagate <code>STREAM_DISABLE_OPEN_BASEDIR</code> src flag to <code>php_stream_stat_path_ex</code> in <a href="https://github.com/php/php-src/pull/11156">GH-11156</a> by Ilija Tovilo 💜</li>
<li>Allow aliasing namespaces containing reserved class names in <a href="https://github.com/php/php-src/pull/11153">GH-11153</a> by Ilija Tovilo 💜</li>
<li>Fix uninitialised variable warning in <code>mbfilter_sjis.c</code> in <a href="https://github.com/php/php-src/commit/b915a1d8d7">b915a1d8d7</a> by Niels Dossche</li>
<li>Update libenchant in arm build in <a href="https://github.com/php/php-src/commit/5cbc917fee">5cbc917fee</a> by Ilija Tovilo 💜</li>
</ul>

</details>

<p><br></p>

<hr />

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP Core Roundup #11]]></title>
            <link href="https://thephp.foundation/blog/2023/04/01/php-core-roundup-11/"/>
            <updated>2023-04-01T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2023/04/01/php-core-roundup-11/</id>
            <content type="html"><![CDATA[<p>Welcome to the eleventh post in the PHP Core Roundup series. Just like the <a href="/blog/tag/roundup">previous months</a>, March was an eventful month with new RFCs, discussions, and plenty of other developments in PHP.</p>

<blockquote>
  <p>The PHP Foundation currently supports six part-time PHP contributors who work on maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>
</blockquote>

<p><br>
We publish the posts on our website, and you can subscribe to a newsletter; You don’t necessarily have to be a PHP Foundation backer to follow <em>PHP Core Roundup</em>.</p>

<p><div class="px-4 pt-3 border-b border-t -mx-4 border-gray-200">
    <div class="bg-white py-8">
        <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 lg:grid-cols-12 lg:gap-8">
            <div class="max-w-xl text-4xl font-medium tracking-tight text-gray-900 lg:col-span-6">
                Subscribe to PHP Core Roundup newsletter
            </div>
            <form method="POST"
                  action="https://php-foundation.mailcoach.app/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056"
                  class="w-full max-w-md lg:col-span-6">
                <div class="flex gap-x-4">
                    <label for="email-address" class="sr-only">Email address</label>
                    <input id="email-address" name="email" type="email" autocomplete="email" required
                           class="min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                           placeholder="Enter your email">
                    <button type="submit"
                            class="inline-block py-2 no-underline px-6 !text-white bg-[#7f52ff] rounded-3xl hover:bg-[rgba(127,82,255,.8)]">
                        Subscribe
                    </button>
                </div>
                <div class="mt-4 text-sm leading-6 text-gray-900">
                    We care about your data.
                    Read our <a href="https://thephp.foundation/privacy-policy"
                                class="font-semibold text-indigo-600 hover:text-indigo-500 no-underline">privacy policy</a>.
                </div>
            </form>
        </div>
    </div>
</div>
</p>

<h2 id="call-for-php-8.3-release-managers-in-voting">Call for PHP 8.3 Release Managers In Voting</h2>

<p>In February, Sergey Panteleev — one of the PHP 8.2 release managers — called for volunteers to put their names forward to be the release managers for the upcoming PHP 8.3. <a href="https://wiki.php.net/todo/php83">Four volunteers</a> stepped in for the three available positions, and a vote is currently under way.</p>

<p>Pierrick Charron, one of the PHP 8.2 release managers, volunteered to be the veteran release manager. Pierrick will be working with two newcomers to this position throughout the lifecycle of PHP 8.3.</p>

<p>For the rookie candidates, Eric Mann, Calvin Buckley, and Jakub Zelenka 💜 expressed their interest, and the <a href="https://wiki.php.net/todo/php83">vote</a> will elect two release managers from this list of three.</p>

<p>Voting will be open until Apr 16, 2023.</p>

<h2 id="php-8.2.4-and-8.1.17-bug-fix-releases">PHP 8.2.4 and 8.1.17 Bug Fix Releases</h2>

<p>PHP 8.2.4 and 8.1.17 are now released, both of which contain over 45 bug fixes (and no security fixes).</p>

<p>PHP 8.0 only receives security updates, so there is no corresponding release for PHP 8.0.</p>

<h2 id="recent-rfcs-and-mailing-list-discussions">Recent RFCs and Mailing List Discussions</h2>

<blockquote>
  <p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net website</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>
</blockquote>

<p><br>
Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, documentation, and the php.net website. Here is a summary of some changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<h3 id="rfc-updates">RFC Updates</h3>

<p>Following are the RFCs and major pull-requests discussed, voted on, and implemented since our last update.</p>

<ul>
<li><p><strong>RFC Implemented: <a href="https://wiki.php.net/rfc/saner-array-sum-product">Saner array_(sum|product)()</a> by George Peter Banyard 💜</strong></p>

<p>Proposed to change the current behavior of <code>array_sum</code> and <code>array_product</code> to properly handle non-numeric values. This results in additional warnings when these functions encounter unsupported types such as certain objects, arrays, and resources. Further, it can result in different return values on objects that support arithmetic operations.</p>

<p>This RFC was accepted, and the changes are now implemented in PHP 8.3.</p></li>
<li><p><strong>RFC Implemented: <a href="https://wiki.php.net/rfc/typed_class_constants">Typed class constants</a> by Benas Seliuginas and Máté Kocsis 💜</strong></p>

<p>Despite the huge efforts put into improving the type system of PHP year after year, it was still not possible to declare constant types. This is less of a concern for global constants, but can indeed be a source of bugs and confusion for class constants: This RFC proposed to add support for declaring class, interface, trait, as well as enum constant types:</p>

<pre><code class="php">enum E {
  const string TEST = "Test1";
}

trait T {
  const string TEST = E::TEST;
}

interface I {
  const string TEST = E::TEST;
}

class C {
  const string TEST = E::TEST;
}
</code></pre>

<p><br></p>

<p>This RFC was accepted, and the changes are now implemented in PHP 8.3.</p></li>
<li><p><strong>RFC In Voting : <a href="https://wiki.php.net/rfc/arbitrary_static_variable_initializers">Arbitrary static variable initializers</a> by Ilija Tovilo 💜</strong></p>

<p>PHP does not allow using arbitrary expressions in static variable initializers because the values are initialized at the compile time. This also lead to some unexpected behaviors when the same variable is initialized in more than once within the same scope.</p>

<p>This RFC proposes to remove the current limitation of not allowing expressions in static variable initializers. It also forbids redeclaring static variables altogether.</p>

<pre><code class="php">function foo() {
 static $i = getValue();
}
</code></pre>

<p>The code snippet will be allowed and functional in PHP 8.3 if the RFC is accepted. The RFC is currently under vote, and the current tally us an unanimous Yes.</p></li>
<li><p><strong>RFC Under <a href="https://externals.io/message/119745">Discussion</a>: <a href="https://wiki.php.net/rfc/unserialize_warn_on_trailing_data">Make unserialize() emit a warning for trailing bytes</a> by Tim Düsterhus</strong></p>

<p>This RFC proposes that <a href="http://www.php.net/unserialize"><code>unserialize()</code></a> shall emit a new <code>E_WARNING</code> whenever the input string contains additional bytes once the unserialization parser terminates after successfully parsing a value. In other words: A warning shall be emitted if bytes can be removed from the end of the input string without changing the return value of <a href="http://www.php.net/unserialize"><code>unserialize()</code></a>.</p></li>
<li><p><strong>RFC Under <a href="https://externals.io/message/119749">Discussion</a>: <a href="https://wiki.php.net/rfc/proper-range-semantics">Define proper semantics for range() function</a> by George Peter Banyard</strong> 💜</p>

<p>This RFC attempts to iron out several undesirable and unexpected behaviors of the <code>range()</code> function. Introduced in PHP 4, <code>range()</code> function attempts to work with various types not only including integers, floats, and strings, but also other types. There are series of behaviors highlighted in the RFC along with several improvements proposed (throwing exceptions, emitting warnings, changing behaviors, etc).</p></li>
</ul>

<h3 id="notable-mailing-list-discussions">Notable Mailing List Discussions</h3>

<ul>
<li><a href="https://externals.io/message/119807">Property Hooks Discussion</a></li>
<li><a href="https://externals.io/message/119678">First-class callable partial application</a></li>
<li><a href="https://externals.io/message/119726">Can we get compile time routines?</a></li>
<li><a href="https://externals.io/message/119633">RFC: code optimizations</a></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Following are some changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements. There are automated unit and integration tests for each of these changes, the PHP core developers review all pull requests.</p>

<hr />

<h3 id="full-list-of-commits-since-php-core-roundup-%2310">Full list of commits since <a href="/blog/2023/03/01/php-core-roundup-10/">PHP Core Roundup #10</a></h3>

<details>

<summary>Click here to expand</summary>

<ul>
<li>Fix unescaped {TMP} variables in tests in <a href="https://github.com/php/php-src/commit/2b5aac9303">2b5aac9303</a> by Ilija Tovilo 💜</li>
<li>Use zend_result in <code>ext/spl</code> where appropriate (<a href="https://bugs.php.net/bug.php?id=10734">#10734</a>) in <a href="https://github.com/php/php-src/commit/2b15061fbb">2b15061fbb</a> by Niels Dossche</li>
<li>Add Windows GitHub actions build in <a href="https://github.com/php/php-src/pull/10664">GH-10664</a> by Michael Voříšek</li>
<li>Fix missing readonly modification error with inc/dec in JIT in <a href="https://github.com/php/php-src/pull/10746">GH-10746</a> by Ilija Tovilo 💜</li>
<li>Make error checks on encoding methods for docomo, kddi, sb consistent in <a href="https://github.com/php/php-src/commit/69543e6a10">69543e6a10</a> by nielsdos</li>
<li>Use <code>CK()</code> macro to check the output function in mbfilter_unicode2sjis_emoji_sb() in <a href="https://github.com/php/php-src/commit/263655a520">263655a520</a> by nielsdos</li>
<li>Propagate error checks for <code>mbfl_filt_conv_illegal_output()</code> in <a href="https://github.com/php/php-src/commit/d66ca5dabb">d66ca5dabb</a> by nielsdos</li>
<li>Fix warning in run-tests when PHP compiled without generating phpdbg support. (<a href="https://bugs.php.net/bug.php?id=10745">#10745</a>) in <a href="https://github.com/php/php-src/commit/3e6d49e042">3e6d49e042</a> by Danack</li>
<li>fix: support for timeouts with ZTS on Linux (<a href="https://bugs.php.net/bug.php?id=10141">#10141</a>) in <a href="https://github.com/php/php-src/commit/ad85e71421">ad85e71421</a> by Kévin Dunglas</li>
<li>Fix operator precedence in the skip section of readonly tests in <a href="https://github.com/php/php-src/commit/dab783f7ae">dab783f7ae</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10728">GH-10728</a>: opcache capstone header's inclusion in <a href="https://github.com/php/php-src/pull/10732">GH-10732</a> by David Carlier</li>
<li>Propagate success status of ftp_close() to userland in <a href="https://github.com/php/php-src/commit/abc6fe8f2e">abc6fe8f2e</a> by nielsdos</li>
<li>Add missing <code>ZEND_ARG_VARIADIC_OBJ_TYPE_MASK</code> macro, and use consistent class_name variable name in <a href="https://github.com/php/php-src/commit/7fcea9d260">7fcea9d260</a> by Derick Rethans 💜</li>
<li>Do not allow side-effects when readonly property modification fails (<a href="https://bugs.php.net/bug.php?id=10757">#10757</a>) in <a href="https://github.com/php/php-src/commit/e053ba0a3a">e053ba0a3a</a> by Máté Kocsis 💜</li>
<li><code>ext/ftp</code> fix ftp_nb_get signature (for failure) in <a href="https://github.com/php/php-src/pull/10760">GH-10760</a> by David Carlier</li>
<li>Revert "Zend/zend_type_code: remove hard-coded integer values and" in <a href="https://github.com/php/php-src/commit/3310463484">3310463484</a> by David CARLIER</li>
<li>random: Convert <code>php_random_(bytes|int)_(silent|throw)</code> into inline functions (<a href="https://bugs.php.net/bug.php?id=10763">#10763</a>) in <a href="https://github.com/php/php-src/commit/8abea1b3c2">8abea1b3c2</a> by Tim Düsterhus</li>
<li>Fix failure of AVX2-accelerated <code>mb_check_encoding</code> on 32-bit MS Windows in <a href="https://github.com/php/php-src/commit/86ec0bc55c">86ec0bc55c</a> by Alex Dowad</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10766">GH-10766</a>: PharData archive created with Phar::Zip format does not keep files metadata (datetime) in <a href="https://github.com/php/php-src/pull/10769">GH-10769</a> by Niels Dossche</li>
<li>Fix <code>strlen</code> error message param name in <a href="https://github.com/php/php-src/commit/1be99faeff">1be99faeff</a> by Kamil Tekiela</li>
<li>Update windows action to <code>checkout@v3</code> in <a href="https://github.com/php/php-src/commit/28ef654648">28ef654648</a> by Ilija Tovilo 💜</li>
<li>Fix metaphone encode compiler warning in <a href="https://github.com/php/php-src/pull/10788">GH-10788</a> by Ilija Tovilo 💜</li>
<li>Ignore <code>-Warray-bounds</code> compiler warning in JIT (<a href="https://bugs.php.net/bug.php?id=10789">#10789</a>) in <a href="https://github.com/php/php-src/commit/ad7b90b674">ad7b90b674</a> by Ilija Tovilo 💜</li>
<li>Fix <code>-Wmaybe-uninitialized</code> warning in JIT in <a href="https://github.com/php/php-src/commit/95fbd2039f">95fbd2039f</a> by Ilija Tovilo 💜</li>
<li>Fix gcc warnings in <code>zend_API.c</code> with <code>--disable-debug</code> (<a href="https://bugs.php.net/bug.php?id=10786">#10786</a>) in <a href="https://github.com/php/php-src/commit/6a7115359e">6a7115359e</a> by Ilija Tovilo 💜</li>
<li>Add missing error checks on <code>EVP_MD_CTX_create()</code> and <code>EVP_VerifyInit()</code> in <a href="https://github.com/php/php-src/pull/10762">GH-10762</a> by Niels Dossche</li>
<li>Add missing error check on <code>i2d_PKCS12_bio()</code> in <a href="https://github.com/php/php-src/pull/10761">GH-10761</a> by nielsdos</li>
<li>Add missing error check on <code>PEM_write_bio_CMS()</code> in <a href="https://github.com/php/php-src/commit/51ea4a680d">51ea4a680d</a> by nielsdos</li>
<li>Add missing error check on <code>PEM_write_bio_PKCS7()</code> in <a href="https://github.com/php/php-src/pull/10752">GH-10752</a> by Niels Dossche</li>
<li>Throw on negative setcookie expiration timestamp in <a href="https://github.com/php/php-src/commit/82dfd93b9d">82dfd93b9d</a> by Ilija Tovilo 💜</li>
<li>Fix missing return <code>FAILURE</code> in <a href="https://github.com/php/php-src/commit/2110398dee">2110398dee</a> by Ilija Tovilo 💜</li>
<li>Re-add missing <code>EXPECTHEADERS</code> sections in <a href="https://github.com/php/php-src/commit/87e3513274">87e3513274</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10709">GH-10709</a>: UAF in recursive AST evaluation in <a href="https://github.com/php/php-src/pull/10718">GH-10718</a> by Ilija Tovilo 💜</li>
<li>Revert "Throw on negative setcookie expiration timestamp" in <a href="https://github.com/php/php-src/commit/9f591c9bf6">9f591c9bf6</a> by Ilija Tovilo 💜</li>
<li>random: Add missing <code>php.h</code> include to <code>php_random.h</code> (<a href="https://bugs.php.net/bug.php?id=10764">#10764</a>) in <a href="https://github.com/php/php-src/commit/5087931963">5087931963</a> by Tim Düsterhus</li>
<li>Fix <code>-Wstrict-prototypes</code> in DBA in <a href="https://github.com/php/php-src/commit/648e896d0e">648e896d0e</a> by George Peter Banyard 💜</li>
<li>Remove unnecessary workaround for the true type in <a href="https://github.com/php/php-src/commit/368febbf89">368febbf89</a> by Máté Kocsis 💜</li>
<li><code>mb_encode_mimeheader</code> does not crash if provided encoding has no MIME name set in <a href="https://github.com/php/php-src/commit/7c1ee5a02a">7c1ee5a02a</a> by Alex Dowad</li>
<li>Enable GitHub actions cancel-in-progress for PRs in <a href="https://github.com/php/php-src/pull/10799">GH-10799</a> by Ilija Tovilo 💜</li>
<li>Fix readonly+clone JIT issues in <a href="https://github.com/php/php-src/pull/10748">GH-10748</a> by Ilija Tovilo 💜</li>
<li><code>*/*.m4</code>: <code>update main()</code> signatures in <a href="https://github.com/php/php-src/commit/fa65873502">fa65873502</a> by Michael Orlitzky</li>
<li><code>ext/iconv/config.m4</code>: add missing <code>stdio.h</code> include in <a href="https://github.com/php/php-src/pull/10751">GH-10751</a> by Michael Orlitzky</li>
<li>RFC: Saner <code>array_(sum|product)()</code> (<a href="https://bugs.php.net/bug.php?id=10161">#10161</a>) in <a href="https://github.com/php/php-src/commit/3b06618813">3b06618813</a> by George Peter Banyard 💜</li>
<li>Imply UTF8 validity in implode function (<a href="https://bugs.php.net/bug.php?id=10780">#10780</a>) in <a href="https://github.com/php/php-src/commit/3821938e81">3821938e81</a> by Michael Voříšek</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8646">GH-8646</a>: Memory leak PHP FPM 8.1 in <a href="https://github.com/php/php-src/pull/10783">GH-10783</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8065">GH-8065</a>: <code>opcache.c</code>onsistency_checks > 0 causes segfaults in PHP >= 8.1.5 in fpm context in <a href="https://github.com/php/php-src/pull/10798">GH-10798</a> by Niels Dossche</li>
<li>Re-add some CTE functions that were removed from being CTE by a mistake in <a href="https://github.com/php/php-src/pull/10768">GH-10768</a> by Michael Voříšek</li>
<li>Update libmysql 5.7 version in <a href="https://github.com/php/php-src/commit/12290b796b">12290b796b</a> by Ilija Tovilo 💜</li>
<li>Suppress <code>-Wstrict-prototypes</code> in GD extension (<a href="https://bugs.php.net/bug.php?id=10803">#10803</a>) in <a href="https://github.com/php/php-src/commit/afd8695a22">afd8695a22</a> by George Peter Banyard 💜</li>
<li>Micro optimization: readonly properties always have a type in <a href="https://github.com/php/php-src/commit/574e531127">574e531127</a> by Máté Kocsis 💜</li>
<li>Fixed macro generation for variadics, which don't have a default value in <a href="https://github.com/php/php-src/commit/717335ec63">717335ec63</a> by Derick Rethans 💜</li>
<li>Add test case in <a href="https://github.com/php/php-src/commit/8a9b80cfe0">8a9b80cfe0</a> by Derick Rethans 💜</li>
<li>Fixed strict zpp arginfo test in <a href="https://github.com/php/php-src/commit/f8891f2861">f8891f2861</a> by Derick Rethans 💜</li>
<li>Fixed strict zpp arginfo test in <a href="https://github.com/php/php-src/commit/aead0c8059">aead0c8059</a> by Derick Rethans 💜</li>
<li>Test Windows with opcache on GitHub actions in <a href="https://github.com/php/php-src/commit/6b884737c4">6b884737c4</a> by Ilija Tovilo 💜</li>
<li><code>ext/intl</code>: dateformatter settimezone changes on success, returning true like setcalendar in <a href="https://github.com/php/php-src/pull/10790">GH-10790</a> by David Carlier</li>
<li>Disable asan instrumentation for phpdbg_watchpoint_userfaultfd_thread in <a href="https://github.com/php/php-src/pull/10818">GH-10818</a> by Ilija Tovilo 💜</li>
<li>Switch to Ubuntu 22.04 for GitHub actions jobs in <a href="https://github.com/php/php-src/pull/10814">GH-10814</a> by Ilija Tovilo 💜</li>
<li>Fix <code>GC_BENCH</code> flag (<a href="https://bugs.php.net/bug.php?id=10823">#10823</a>) in <a href="https://github.com/php/php-src/commit/6f1e5ff8c3">6f1e5ff8c3</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10519">GH-10519</a>: Array Data Address Reference Issue in <a href="https://github.com/php/php-src/pull/10749">GH-10749</a> by NathanFreeman</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10747">GH-10747</a>: Private and protected properties in serialized Date* objects throw in <a href="https://github.com/php/php-src/commit/a225581833">a225581833</a> by Derick Rethans 💜</li>
<li>feat: enable Zend Max Execution Timers by default in 8.3 (<a href="https://bugs.php.net/bug.php?id=10778">#10778</a>) in <a href="https://github.com/php/php-src/commit/f0495855a3">f0495855a3</a> by Kévin Dunglas</li>
<li>Re-enable <code>-Wstrict-aliasing</code> in <a href="https://github.com/php/php-src/pull/10821">GH-10821</a> by Ilija Tovilo 💜</li>
<li>Remove unnecessary type punnign from <code>mysqli_api.c</code> in <a href="https://github.com/php/php-src/commit/47f80ffc77">47f80ffc77</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10801">GH-10801</a>: Named arguments in CTE functions cause a segfault in <a href="https://github.com/php/php-src/pull/10811">GH-10811</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10611">GH-10611</a>: fpm_env_init_main leaks environ in <a href="https://github.com/php/php-src/pull/10618">GH-10618</a> by Niels Dossche</li>
<li>Fix RC1 assumption for typed properties with <code>__get</code> in <a href="https://github.com/php/php-src/pull/10833">GH-10833</a> by Ilija Tovilo 💜</li>
<li>Fixed oss-fuzz <a href="https://bugs.php.net/bug.php?id=56931">#56931</a> in <a href="https://github.com/php/php-src/commit/ce5f75fb6f">ce5f75fb6f</a> by Derick Rethans 💜</li>
<li>Fixed test for <a href="https://github.com/php/php-src/issues/10147">GH-10147</a> in <a href="https://github.com/php/php-src/commit/2d3aa8a5c4">2d3aa8a5c4</a> by Derick Rethans 💜</li>
<li>Fixed new OSS-FUZZ test in <a href="https://github.com/php/php-src/commit/897b13a217">897b13a217</a> by Derick Rethans 💜</li>
<li>Handle <code>zend_execute_internal</code> in JIT in <a href="https://github.com/php/php-src/commit/c53e8d3e30">c53e8d3e30</a> by Bob Weinand</li>
<li>Add test, fix x86 JIT in <a href="https://github.com/php/php-src/commit/1015f1ff61">1015f1ff61</a> by Bob Weinand</li>
<li>Fix module shutdown crash during ZTS JIT shutdown in <a href="https://github.com/php/php-src/pull/10835">GH-10835</a> by Niels Dossche</li>
<li><code>ext/mysqli/pgsql</code>: <code>mysqli_fetch_object</code>/<code>pgsql_fetch_object</code> raises <code>ValueError</code> on constructor args error in <a href="https://github.com/php/php-src/pull/10832">GH-10832</a> by David Carlier</li>
<li>avoid test file being consider binary in <a href="https://github.com/php/php-src/commit/f575027b56">f575027b56</a> by Remi Collet</li>
<li><code>use_tls=0</code> on <code>MSAN</code> in <a href="https://github.com/php/php-src/pull/10851">GH-10851</a> by Ilija Tovilo 💜</li>
<li>Fix test on non-UTC platforms in <a href="https://github.com/php/php-src/commit/a141543594">a141543594</a> by Matteo Beccati</li>
<li>Fix mysql tests on Cirrus ASAN in <a href="https://github.com/php/php-src/pull/10802">GH-10802</a> by Ilija Tovilo 💜</li>
<li>Move ARM64 build to Cirrus in <a href="https://github.com/php/php-src/pull/10795">GH-10795</a> by Ilija Tovilo 💜</li>
<li>remove assert raising strange behavior with GCC 10 in <a href="https://github.com/php/php-src/commit/bdf2f722ca">bdf2f722ca</a> by Remi Collet</li>
<li>Upgrade cirrus arm build to GCC 12 (<a href="https://bugs.php.net/bug.php?id=10855">#10855</a>) in <a href="https://github.com/php/php-src/commit/6ebb506637">6ebb506637</a> by Ilija Tovilo 💜</li>
<li>Implement <code>mb_encode_mimeheader</code> using fast text conversion filters in <a href="https://github.com/php/php-src/commit/0ce755be26">0ce755be26</a> by Alex Dowad</li>
<li><code>php_pgsql_meta_data</code> raises a <code>ValueError</code> when table name is invalid in <a href="https://github.com/php/php-src/commit/394470c052">394470c052</a> by David Carlier</li>
<li><code>ext/mysqi</code>: mysqli_poll raises a ValueError on absent 1st and 2ng arguments in <a href="https://github.com/php/php-src/commit/90a39fd52c">90a39fd52c</a> by David Carlier</li>
<li>Fix missing and inconsistent error check on <code>SQLAllocHandle</code> in <a href="https://github.com/php/php-src/pull/10740">GH-10740</a> by nielsdos</li>
<li>Remove CTE flag from <code>array_diff_ukey()</code>, which was added by mistake in <a href="https://github.com/php/php-src/pull/10859">GH-10859</a> by Michael Voříšek</li>
<li>Another attempt to fix MSAN nightly on <code>master</code> in <a href="https://github.com/php/php-src/commit/471105abd7">471105abd7</a> by Ilija Tovilo 💜</li>
<li><code>pgsql_insert</code> fix unit tests (<a href="https://bugs.php.net/bug.php?id=10860">#10860</a>) in <a href="https://github.com/php/php-src/commit/feb82d91b9">feb82d91b9</a> by David CARLIER</li>
<li>Windows CI log verbosity, CI bat file guard in <a href="https://github.com/php/php-src/pull/10817">GH-10817</a> by Michael Voříšek</li>
<li><code>zend_hash</code>: Use AVX2 instructions for better code efficiency (<a href="https://bugs.php.net/bug.php?id=10858">#10858</a>) in <a href="https://github.com/php/php-src/commit/d835de1993">d835de1993</a> by Tony Su</li>
<li>Add extra option to FPM tester for handling script filename in <a href="https://github.com/php/php-src/commit/3125155b5d">3125155b5d</a> by Jakub Zelenka 💜</li>
<li>Test FPM FCGI envs without path info fix for custom source in <a href="https://github.com/php/php-src/commit/92d2cd5cb8">92d2cd5cb8</a> by Jakub Zelenka 💜</li>
<li>Test FPM FCGI envs with path info fix for Apache proxy balancer in <a href="https://github.com/php/php-src/commit/b53b0ac2ea">b53b0ac2ea</a> by Jakub Zelenka 💜</li>
<li>Test FPM FCGI envs with path info fix for Apache proxy handler in <a href="https://github.com/php/php-src/commit/8cf621e0e4">8cf621e0e4</a> by Jakub Zelenka 💜</li>
<li>Test FPM FCGI envs with path info fix for Apache proxy pass in <a href="https://github.com/php/php-src/commit/38d2e7ea9a">38d2e7ea9a</a> by Jakub Zelenka 💜</li>
<li>Fix FPM tester <code>$scriptName</code> logic in <a href="https://github.com/php/php-src/commit/7d987ebbbf">7d987ebbbf</a> by Jakub Zelenka 💜</li>
<li>Implement <a href="https://github.com/php/php-src/issues/10854">GH-10854</a>: TSRM should set a smarter value for expected_threads (<a href="https://bugs.php.net/bug.php?id=10867">#10867</a>) in <a href="https://github.com/php/php-src/commit/4da0da7f2d">4da0da7f2d</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10634">GH-10634</a>: Lexing memory corruption (<a href="https://bugs.php.net/bug.php?id=10866">#10866</a>) in <a href="https://github.com/php/php-src/commit/ac9964502c">ac9964502c</a> by Niels Dossche</li>
<li>Remove <code>xfail</code> from tests that do not fail anymore (<a href="https://bugs.php.net/bug.php?id=10871">#10871</a>) in <a href="https://github.com/php/php-src/commit/53763e14b7">53763e14b7</a> by Arnaud Le Blanc 💜</li>
<li><code>ext/psql</code>: <code>pg_meta_data</code>, extended mode, fix typo for pseudo typtype in <a href="https://github.com/php/php-src/pull/10865">GH-10865</a> by David CARLIER</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8789">GH-8789</a> and <a href="https://github.com/php/php-src/issues/10015">GH-10015</a>: Fix ZTS zend signal crashes due to NULL globals in <a href="https://github.com/php/php-src/pull/10861">GH-10861</a> by Niels Dossche</li>
<li>Destroy <code>file_handle</code> in <code>fpm_main</code> in <a href="https://github.com/php/php-src/pull/10707">GH-10707</a> by Niels Dossche</li>
<li>Fix <code>NUL</code> byte in exception string terminating <code>Exception::__toString()</code> in <a href="https://github.com/php/php-src/pull/10873">GH-10873</a> by Ilija Tovilo 💜</li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=74129">#74129</a>: Incorrect SCRIPT_NAME with apache ProxyPassMatch in <a href="https://github.com/php/php-src/pull/10869">GH-10869</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10755">GH-10755</a>: Memory leak in phar_rename_archive() in <a href="https://github.com/php/php-src/pull/10856">GH-10856</a> by Su, Tao</li>
<li>Use new ZSTR_INIT_LITERAL macro (<a href="https://bugs.php.net/bug.php?id=10879">#10879</a>) in <a href="https://github.com/php/php-src/commit/9d5f2f1343">9d5f2f1343</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10885">GH-10885</a>: Leaking stream_socket_server context in <a href="https://github.com/php/php-src/pull/10886">GH-10886</a> by Ilija Tovilo 💜</li>
<li>add a basic CODEOWNERS file in <a href="https://github.com/php/php-src/pull/8670">GH-8670</a> by Ben Ramsey</li>
<li>CODEOWNERS: Add myself to <code>ext/random</code> in <a href="https://github.com/php/php-src/commit/e73d8de784">e73d8de784</a> by Tim Düsterhus</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10052">GH-10052</a>: Browscap crashes PHP 8.1.12 on request shutdown (apache2) in <a href="https://github.com/php/php-src/pull/10883">GH-10883</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10521">GH-10521</a>: ftp_get/ftp_nb_get resumepos offset is maximum 10GB in <a href="https://github.com/php/php-src/pull/10525">GH-10525</a> by Niels Dossche</li>
<li>CODEOWNERS: Add myself as an owner of <code>ext/ffi</code>, <code>ext/opcache</code> and the core Zend files in <a href="https://github.com/php/php-src/commit/b698108133">b698108133</a> by Dmitry Stogov</li>
<li>Update assertion about unsupported property types in <a href="https://github.com/php/php-src/commit/3deba4c2e8">3deba4c2e8</a> by Máté Kocsis 💜</li>
<li>Add myself for <code>ext/date</code> in <a href="https://github.com/php/php-src/commit/b5262218d4">b5262218d4</a> by Derick Rethans 💜</li>
<li>[Zend]: Remove unused code in MAKE_NOP macro (<a href="https://bugs.php.net/bug.php?id=10906">#10906</a>) in <a href="https://github.com/php/php-src/commit/7eee0d1bc7">7eee0d1bc7</a> by Tony Su</li>
<li>Shrink some commonly used structs by reordering members (<a href="https://bugs.php.net/bug.php?id=10880">#10880</a>) in <a href="https://github.com/php/php-src/commit/6a6e91f3c7">6a6e91f3c7</a> by Niels Dossche</li>
<li>Implement better diff for <code>run-tests.php</code> in <a href="https://github.com/php/php-src/pull/10875">GH-10875</a> by Ilija Tovilo 💜</li>
<li><code>ext/curl</code>: suppress -Wdeprecated-declarations in <code>curl_arginfo.h</code> in <a href="https://github.com/php/php-src/commit/2646d76abc">2646d76abc</a> by Max Kellermann</li>
<li>Empty merge in <a href="https://github.com/php/php-src/commit/4c114efd1a">4c114efd1a</a> by Derick Rethans 💜</li>
<li>Updated to version 2023.1 (2023a) in <a href="https://github.com/php/php-src/commit/8424b5caaa">8424b5caaa</a> by Derick Rethans 💜</li>
<li>Empty merge in <a href="https://github.com/php/php-src/commit/6c5e07a8b9">6c5e07a8b9</a> by Derick Rethans 💜</li>
<li>Updated to version 2023.1 (2023a) in <a href="https://github.com/php/php-src/commit/d9e89416f8">d9e89416f8</a> by Derick Rethans 💜</li>
<li>Updated to version 2023.1 (2023a) in <a href="https://github.com/php/php-src/commit/9495406c9e">9495406c9e</a> by Derick Rethans 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10583">GH-10583</a>: DateTime modify with tz pattern should not update linked timezone in <a href="https://github.com/php/php-src/commit/cbac68df6b">cbac68df6b</a> by Derick Rethans 💜</li>
<li><code>ext/pdo_sqlite</code>: simplifying sqlite3_exec usage. (<a href="https://bugs.php.net/bug.php?id=10910">#10910</a>) in <a href="https://github.com/php/php-src/commit/54f92fc333">54f92fc333</a> by David CARLIER</li>
<li>Fix direct comparison in <code>run-tests.php</code> differ in <a href="https://github.com/php/php-src/commit/c58c2666a1">c58c2666a1</a> by Ilija Tovilo 💜</li>
<li>Updated to version 2023.2 (2023b) in <a href="https://github.com/php/php-src/commit/90f5b2b4ff">90f5b2b4ff</a> by Derick Rethans 💜</li>
<li>Empty merge in <a href="https://github.com/php/php-src/commit/a337dfb75f">a337dfb75f</a> by Derick Rethans 💜</li>
<li>Updated to version 2023.2 (2023b) in <a href="https://github.com/php/php-src/commit/8a2586228d">8a2586228d</a> by Derick Rethans 💜</li>
<li>Empty merge in <a href="https://github.com/php/php-src/commit/61a595c883">61a595c883</a> by Derick Rethans 💜</li>
<li>Updated to version 2023.2 (2023b) in <a href="https://github.com/php/php-src/commit/2a553322d8">2a553322d8</a> by Derick Rethans 💜</li>
<li>Add me to the CODEOWNERS in <a href="https://github.com/php/php-src/commit/ff183ad923">ff183ad923</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8979">GH-8979</a>: Possible Memory Leak with SSL-enabled MySQL connections in <a href="https://github.com/php/php-src/pull/10909">GH-10909</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10907">GH-10907</a>: Unable to serialize processed SplFixedArrays in PHP 8.2.4 in <a href="https://github.com/php/php-src/pull/10921">GH-10921</a> by Niels Dossche</li>
<li>Fix test for <a href="https://github.com/php/php-src/issues/10907">GH-10907</a> with output in different order for master branch in <a href="https://github.com/php/php-src/commit/01cb6fb65a">01cb6fb65a</a> by Niels Dossche</li>
<li>Fix phpGH-10648: add check function pointer into mbfl_encoding in <a href="https://github.com/php/php-src/commit/6fc8d014df">6fc8d014df</a> by pakutoma</li>
<li>Update NEWS and UPGRADING to reflect changes in 0ce755be26 in <a href="https://github.com/php/php-src/commit/bf64342d30">bf64342d30</a> by Alex Dowad</li>
<li>Fix compile errors caused by missing initializers in 0779950768 in <a href="https://github.com/php/php-src/commit/345abce590">345abce590</a> by Alex Dowad</li>
<li>Fix compile error in Windows CI job caused by 0779950768 in <a href="https://github.com/php/php-src/commit/57e194e02d">57e194e02d</a> by Alex Dowad</li>
<li>Fix phpGH-10648: add check function pointer into mbfl_encoding in <a href="https://github.com/php/php-src/commit/b721d0f71e">b721d0f71e</a> by pakutoma</li>
<li>Use capstone explicitly, drop oprofile (GH 10876) (<a href="https://bugs.php.net/bug.php?id=10918">#10918</a>) in <a href="https://github.com/php/php-src/commit/87922411bf">87922411bf</a> by Michael Orlitzky</li>
<li>By-ref modification of typed and readonly props through ArrayIterator in <a href="https://github.com/php/php-src/pull/10872">GH-10872</a> by Ilija Tovilo 💜</li>
<li>Fix buffer-overflow in <code>php_fgetcsv()</code> with \0 delimiter and enclosure in <a href="https://github.com/php/php-src/pull/10923">GH-10923</a> by Ilija Tovilo 💜</li>
<li>Disallow parent dir components (..) in open_basedir() at runtime in <a href="https://github.com/php/php-src/pull/10913">GH-10913</a> by Ilija Tovilo 💜</li>
<li>Disable <code>--with-valgrind</code> by default (<a href="https://bugs.php.net/bug.php?id=10934">#10934</a>) in <a href="https://github.com/php/php-src/commit/5eb6905405">5eb6905405</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10928">GH-10928</a>: PHP Build Failed - Test curl_version() basic functionality [ext/curl/tests/curl_version_basic_001.phpt] in <a href="https://github.com/php/php-src/pull/10930">GH-10930</a> by Niels Dossche</li>
<li><code>ext/pdo_mysql</code>: mysql_handle_closer nullify some freed data in <a href="https://github.com/php/php-src/commit/f6989df8cc">f6989df8cc</a> by David CARLIER</li>
<li>Fix undefined behaviour in string uppercasing and lowercasing in <a href="https://github.com/php/php-src/pull/10936">GH-10936</a> by Niels Dossche</li>
<li>Fix buffer-overflow in <code>open_basedir()</code> in <a href="https://github.com/php/php-src/commit/a7f91e37de">a7f91e37de</a> by Ilija Tovilo 💜</li>
<li>Propagate UTF-8 flag during Rope operations (<a href="https://bugs.php.net/bug.php?id=10915">#10915</a>) in <a href="https://github.com/php/php-src/commit/d7c351ea54">d7c351ea54</a> by George Peter Banyard 💜</li>
<li>Use <code>php_random_bytes_silent()</code> where possible in gmp_init_random() (<a href="https://bugs.php.net/bug.php?id=10944">#10944</a>) in <a href="https://github.com/php/php-src/commit/8317a147b9">8317a147b9</a> by Niels Dossche</li>
<li>Fix undefined behaviour when writing 32-bit values in phar/tar.c in <a href="https://github.com/php/php-src/pull/10940">GH-10940</a> by Niels Dossche</li>
<li>Fix undefined behaviour in <code>GENERATE_SEED()</code> in <a href="https://github.com/php/php-src/pull/10942">GH-10942</a> by Niels Dossche</li>
<li>Improve the warning message for unpack() in case not enough values were provided (<a href="https://bugs.php.net/bug.php?id=10949">#10949</a>) in <a href="https://github.com/php/php-src/commit/6ec69d727a">6ec69d727a</a> by Niels Dossche</li>
<li>php-fuzz-mbstring also tests text encoding validation functions in <a href="https://github.com/php/php-src/commit/5f2587eb25">5f2587eb25</a> by Alex Dowad</li>
<li>For UTF-7, emit error marker if Base64 section ends abruptly after first half of surrogate pair in <a href="https://github.com/php/php-src/commit/c4fb049bf6">c4fb049bf6</a> by Alex Dowad</li>
<li>Rename <code>--with-opcache-capstone</code> to <code>--with-capstone</code> (<a href="https://bugs.php.net/bug.php?id=10952">#10952</a>) in <a href="https://github.com/php/php-src/commit/b73b70f097">b73b70f097</a> by Ilija Tovilo 💜</li>
<li>Unparallelize IO heavy tests in <a href="https://github.com/php/php-src/pull/10953">GH-10953</a> by Ilija Tovilo 💜</li>
<li>Suppress snmp lib memory leak, xfail ASAN tests in <a href="https://github.com/php/php-src/commit/be4db6b550">be4db6b550</a> by Ilija Tovilo 💜</li>
<li>Fix incorrect optimization in <a href="https://github.com/php/php-src/commit/1f5d9534ae">1f5d9534ae</a> by Dmitry Stogov</li>
<li>Fix one more differ direct comparison (through in_array) in <a href="https://github.com/php/php-src/commit/b9f8b696c4">b9f8b696c4</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10908">GH-10908</a>: Bus error with PDO Firebird on RPI with 64 bit kernel and 32 bit userland in <a href="https://github.com/php/php-src/pull/10920">GH-10920</a> by Niels Dossche</li>
<li>Handle indirect zvals in <code>SplFixedArray::__serialize</code> in <a href="https://github.com/php/php-src/pull/10925">GH-10925</a> by Niels Dossche</li>
<li>Revert "Handle indirect zvals in <code>SplFixedArray::__serialize</code>" in <a href="https://github.com/php/php-src/commit/0d524eda94">0d524eda94</a> by Niels Dossche</li>
<li>Reset EG(trampoline).op_array.last_var that FFI may modify in <a href="https://github.com/php/php-src/pull/10916">GH-10916</a> by Ilija Tovilo 💜</li>
<li><code>ext/posix</code>: proposing posix_eaccess. unlike access, it is not standard but available in enough platforms ; on linux it's euidaccess in reality eaccess being 'just' an alias. key difference is eaccess checks the effective user id instead in <a href="https://github.com/php/php-src/commit/2b354318d9">2b354318d9</a> by David CARLIER</li>
<li>Fix test for <a href="https://github.com/php/php-src/issues/10908">GH-10908</a> in <a href="https://github.com/php/php-src/commit/1357d1eb41">1357d1eb41</a> by Niels Dossche</li>
<li><code>ext/intl</code>: breakiterator::setText returns false on failure in <a href="https://github.com/php/php-src/commit/7623bf0b06">7623bf0b06</a> by David Carlier</li>
<li>Note where a session was already started (<a href="https://bugs.php.net/bug.php?id=10736">#10736</a>) in <a href="https://github.com/php/php-src/commit/180f785404">180f785404</a> by Calvin Buckley</li>
<li><code>ext/imap/config.m4</code>: <code>-Werror=implicit-function-declaration</code> compatibility in <a href="https://github.com/php/php-src/pull/10948">GH-10948</a> by Michael Orlitzky</li>
<li><code>ext/intl</code> IntlChar::enumCharNames changes the signature to void in <a href="https://github.com/php/php-src/commit/2da299703a">2da299703a</a> by David CARLIER</li>
<li>Fix undefined behaviour in unpack() in <a href="https://github.com/php/php-src/pull/10943">GH-10943</a> by Niels Dossche</li>
<li>Updated to version 2023.3 (2023c) in <a href="https://github.com/php/php-src/commit/bb7dd51f7a">bb7dd51f7a</a> by Derick Rethans 💜</li>
<li>Empty merge in <a href="https://github.com/php/php-src/commit/cb4e90dca3">cb4e90dca3</a> by Derick Rethans 💜</li>
<li>Updated to version 2023.3 (2023c) in <a href="https://github.com/php/php-src/commit/3ec02202fd">3ec02202fd</a> by Derick Rethans 💜</li>
<li>Empty merge in <a href="https://github.com/php/php-src/commit/ad28cf6111">ad28cf6111</a> by Derick Rethans 💜</li>
<li>Updated to version 2023.3 (2023c) in <a href="https://github.com/php/php-src/commit/2f309dee8e">2f309dee8e</a> by Derick Rethans 💜</li>
<li>Fix uninitialized variable accesses in sockets/conversions in <a href="https://github.com/php/php-src/pull/10966">GH-10966</a> by Niels Dossche</li>
<li><code>ext/posix</code>: posix_eaccess little update and forgotten UPGRADING entry. (<a href="https://bugs.php.net/bug.php?id=10965">#10965</a>) in <a href="https://github.com/php/php-src/commit/717f460fa4">717f460fa4</a> by David CARLIER</li>
<li>Silence compiler warnings in ext/sockets/conversions.c (<a href="https://bugs.php.net/bug.php?id=10974">#10974</a>) in <a href="https://github.com/php/php-src/pull/10959">GH-10959</a> by Niels Dossche</li>
</ul>

</details>

<p><br></p>

<hr />

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a> or via <a href="https://github.com/sponsors/ThePHPF">GitHub Sponsors</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> or Mastodon <a href="https://phpc.social/@thephpf">phpc.social/@thephpf</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP Foundation Update, March 2023]]></title>
            <link href="https://thephp.foundation/blog/2023/03/31/php-foundation-update-march-2023/"/>
            <updated>2023-03-31T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2023/03/31/php-foundation-update-march-2023/</id>
            <content type="html"><![CDATA[<p><code>&lt;?php echo 'Hello world!';</code></p>

<p>It's been a while since our last update, so today we’d like to shed some light on what the PHP Foundation has been up to in recent months. Topics include changes to the reporting schedule, a new initiative within the Foundation called the Advisory Board, conferences with Foundation members, and other news.</p>

<h2 id="new-schedule-for-the-foundation%E2%80%99s-updates-and-reports">New schedule for the Foundation’s updates and reports</h2>

<p>Last year we started by publishing monthly updates, followed by an annual report released in October. Check out the <a href="https://thephp.foundation/blog/2022/11/22/transparency-and-impact-report-2022/">Impact and Transparency Report 2022</a> if you haven’t yet had a chance to do so.</p>

<p>Now that the Foundation has moved into a phase of steady growth and there are fewer administrative updates, we will publish an update and report once a quarter. The next report, the PHP Foundation 2023 Q1 Report, will come out in April.</p>

<p>As for the technical details and results of the Foundation’s developer team, nothing has changed. Every month <a href="https://aye.sh/">Ayesh</a> publishes a <a href="https://thephp.foundation/blog/tag/roundup/">PHP Core Roundup</a> where he talks about what’s kept the team busy and the accomplishments of other PHP contributors.</p>

<h2 id="the-php-foundation-is-now-on-github-sponsors">The PHP Foundation is now on GitHub Sponsors</h2>

<p>From the very beginning, we used <a href="https://opencollective.com/">OpenCollective</a> as our financial platform for collecting and distributing funds. We are very happy with and grateful for their service.</p>

<p>For some companies and individuals, though, it’s a lot easier to donate via GitHub Sponsors. To make it easier for them to pitch in, we’ve opened a GitHub Sponsors page: <strong><a href="https://github.com/sponsors/ThePHPF">github.com/sponsors/ThePHPF</a></strong>.</p>

<p>We are going to use GitHub Sponsors only to <em>receive</em> financial support. The funds will then be transferred to OpenCollective on a monthly basis, and we’ll continue to pay developers via OpenCollective, as before.</p>

<h2 id="a-new-benefit-for-major-sponsors-%E2%80%93-advisory-board-membership">A new benefit for major sponsors – Advisory Board membership</h2>

<p>A major goal of the PHP Foundation is to provide a voice for PHP's users in its development, and one initiative is to create an Advisory Board to provide communication between sponsors and the foundation team.</p>

<p>The advisory board's role is to assist in setting priorities for the utilization of the developer time and resources that the foundation provides. In other words, the board helps the foundation determine how best to allocate its funds to support the most critical and beneficial initiatives for the PHP community.</p>

<p>The Advisory Board is a forum for members to discuss shared challenges and propose feedback on developer plans. It provides a platform to exchange ideas and bring forward community concerns. The Foundation will review common requests and sponsor impactful projects, but feedback is provided periodically and not all suggestions will be implemented. It is a shared communication channel for constructive dialogue and common goal-setting.</p>

<p>For the first iteration of the Advisory Board, any company that contributed $10,000 in the early stages of the PHP Foundation will be offered the status of a major sponsor and a seat on the Advisory Board through October 2023. After that, the status and membership will be based on the extent of each member’s contributions and their commitment to continued support.</p>

<p>Currently, membership on the Advisory Board has the following benefits:</p>

<ul>
<li>Every month we provide developer plans – a list of tasks that the PHP Foundation developers will work on in the near future. Advisory Board members can discuss these plans among their teams and provide us with feedback that they feel we should consider.</li>
<li>Advisory board members are welcome to share their pain points or ideas on behalf of their communities or organizations. Suggestions may be discussed by other members and will be considered by the foundation developers.</li>
</ul>

<p>⚠️ Note: All language decisions go through the established Request for Comments (RFC) process, which is not affiliated with the PHP Foundation. Language decisions are the purview of PHP Internals. It means that some of the PHP Foundation’s efforts may not make it into the language. But with the Advisory Board discussions, we expect increased quality and acceptance rate of the foundation’s RFCs.</p>

<p>We’re also looking into providing some exclusive benefits for individual sponsors and smaller business contributors, as well. What would sound interesting or lucrative to you? Let us know!</p>

<h2 id="meet-us-at-the-conferences">Meet us at the conferences</h2>

<p>This spring, the PHP Foundation admins and developers will attend a few conferences.</p>

<p><strong><a href="https://phpconference.com/berlin-en/program-berlin-en/">International PHP Conference</a>, May 22–26, Berlin, Germany</strong></p>

<ul>
<li>Sebastian Bergmann (thePHP.cc, PHPUnit), Nils Adermann (Packagist Conductors GmbH, Composer), and George Peter Banyard (PHP core developer) will participate in a keynote panel about the PHP Foundation and the State of PHP.</li>
<li>Benjamin Eberlei (Tideways GmbH, Doctrine) and Nils Adermann will give a presentation entitled <em>The PHP Foundation: Past, Present, and Future</em>.</li>
<li>George Peter Banyard will present a talk called <em>Contributing to PHP: How?</em></li>
</ul>

<p>Benjamin Eberlei, Nils Adermann, and Sebastian Bergmann are members of the PHP Foundation’s administration. George Peter Banyard is one of the PHP core developers paid by the PHP Foundation.</p>

<p><strong><a href="https://tek.phparch.com/">php[tek] 2023</a>, May 16–18, Chicago, USA</strong></p>

<ul>
<li>Sara Golemon, PHP Foundation admin, will talk about <em>Funding PHP</em>.</li>
</ul>

<h2 id="derick-rethans-made-it-onto-the-openuk%E2%80%99s-honours-list-for-2023">Derick Rethans made it onto the OpenUK’s Honours List for 2023</h2>

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">I am happy to announce that over the holidays I was honoured as part of <a href="https://twitter.com/openuk_uk?ref_src=twsrc%5Etfw">@openuk_uk</a>&#39;s 2023 Honours list, partly due to my work with the <a href="https://twitter.com/ThePHPF?ref_src=twsrc%5Etfw">@ThePHPF</a> <a href="https://t.co/AwZmI4iIBh">https://t.co/AwZmI4iIBh</a> <a href="https://t.co/ip01eRBGhG">pic.twitter.com/ip01eRBGhG</a></p>&mdash; Derick Rethans (@derickr) <a href="https://twitter.com/derickr/status/1611014569345912838?ref_src=twsrc%5Etfw">January 5, 2023</a></blockquote>

<p>Congratulations, Derick!</p>

<h2 id="thank-you-to-our-sponsors">Thank you to our sponsors</h2>

<h3 id="renewed-and-new-sponsorships">Renewed and new sponsorships</h3>

<p>We are very grateful to all the sponsors who continue to support the PHP community via the Foundation. Some of the biggest contributors include:</p>

<ul>
<li>Automattic</li>
<li>Private Packagist</li>
<li>Craft CMS</li>
<li>Tideways</li>
<li>Zend by Perforce</li>
<li>Shopware AG</li>
<li>Aternos GmbH</li>
<li>Ardennes-étape</li>
<li>Cybozu Inc.</li>
<li>Moodle</li>
<li>Rakus</li>
<li>Mercari Inc.</li>
<li>Spryker</li>
<li>Les-Tilleuls.coop</li>
</ul>

<p>Check out the <strong><a href="https://thephp.foundation/#sponsors">Sponsors section</a></strong> on our <a href="https://thephp.foundation/">website</a>. It now shows all major contributors sorted by donation amount.</p>

<h3 id="shout-out-to-non-financial-sponsors">Shout-out to non-financial sponsors</h3>

<h4 id="sticker-mule">Sticker Mule</h4>

<p>We’re grateful to <a href="https://www.stickermule.com/">Sticker Mule</a> for official PHP Foundation swag, such as stickers and limited-edition T-shirts. You can find stickers at the conferences where we give talks. Logo and sticker designs are under a CC license, so feel free to use them if you’d like to produce your own merch.</p>

<h4 id="slack">Slack</h4>

<p>Big thanks to <a href="https://slack.com/">Slack</a> who kindly provided us with a pro plan for the messenger. We’d like to personally thank <a href="https://twitter.com/mattbrowndev">Matt Brown</a>, Psalm author and PHP community member, for helping arrange this.</p>

<p>Shout-out to <a href="https://thephp.foundation/#sponsors">everyone</a> for your continued support – the PHP Foundation is all of us!</p>

<hr />

<p><br></p>

<p>That’s all for today. Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> or Mastodon <a href="https://phpc.social/@thephpf">phpc.social/@thephpf</a> to get the latest updates from the Foundation.</p>

<p>💜🐘</p>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP Core Roundup #10]]></title>
            <link href="https://thephp.foundation/blog/2023/03/01/php-core-roundup-10/"/>
            <updated>2023-03-01T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2023/03/01/php-core-roundup-10/</id>
            <content type="html"><![CDATA[<p>Welcome back to the tenth in the PHP Core Roundup series. As February comes to end we have plenty of PHP developments to write about. February was a month full of new RFCs for upcoming PHP 8.3, merged changes, security releases for PHP 8.2, 8.1, and 8.0, as well as several discussions in the mailing list about improving PHP.</p>

<blockquote>
  <p>The PHP Foundation currently supports six part-time PHP contributors who work on maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>
</blockquote>

<p><br>
We publish the posts on our website, and you can subscribe to a newsletter; You don’t necessarily have to be a PHP Foundation backer to follow <em>PHP Core Roundup</em>.</p>

<p><div class="px-4 pt-3 border-b border-t -mx-4 border-gray-200">
    <div class="bg-white py-8">
        <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 lg:grid-cols-12 lg:gap-8">
            <div class="max-w-xl text-4xl font-medium tracking-tight text-gray-900 lg:col-span-6">
                Subscribe to PHP Core Roundup newsletter
            </div>
            <form method="POST"
                  action="https://php-foundation.mailcoach.app/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056"
                  class="w-full max-w-md lg:col-span-6">
                <div class="flex gap-x-4">
                    <label for="email-address" class="sr-only">Email address</label>
                    <input id="email-address" name="email" type="email" autocomplete="email" required
                           class="min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                           placeholder="Enter your email">
                    <button type="submit"
                            class="inline-block py-2 no-underline px-6 !text-white bg-[#7f52ff] rounded-3xl hover:bg-[rgba(127,82,255,.8)]">
                        Subscribe
                    </button>
                </div>
                <div class="mt-4 text-sm leading-6 text-gray-900">
                    We care about your data.
                    Read our <a href="https://thephp.foundation/privacy-policy"
                                class="font-semibold text-indigo-600 hover:text-indigo-500 no-underline">privacy policy</a>.
                </div>
            </form>
        </div>
    </div>
</div>
</p>

<h2 id="call-for-php-8.3-release-managers">Call for PHP 8.3 Release Managers</h2>

<p>Sergey Panteleev, one of the PHP 8.2 release managers, called for the volunteers to put their names forward to be the release managers for the upcoming PHP 8.3. Typically, each major PHP version gets two or three release managers, one of whom is a "veteran" RM with previous experience being an RM.</p>

<p>Release managers will be responsible for tagging releases, coordinating releases, triaging security issues, and will have the ultimate say on last-minute RFCs and the release schedule. The standard PHP support cycle of two years of active support, followed by a year of security support means this position lasts for three years.</p>

<p>The release managers will be elected with the same RFC voting process. Applications will be accepted until 31 March 12:00:00 UTC. Elections (if needed) will start on 1 April and run until 16 April 12:00:00 UTC.</p>

<p>The RM process is thoroughly documented, and previous RMs and PHP core contributors will be there to help. If you have reasonable internals knowledge, are able to triage security issues and bugs, review and merge pull requests, and overall take responsibility for managing a branch of one of the most widely used programming languages in the world, feel free to <a href="https://externals.io/message/119645">email the list</a> and put your name forward.</p>

<h2 id="php-8.2.3%2C-8.1.16%2C-and-8.0.28-security-fix-releases">PHP 8.2.3, 8.1.16, and 8.0.28 Security Fix Releases</h2>

<p>PHP 8.2.3, 8.1.16, and 8.0.28 were released on February 14, containing fixes for three security vulnerabilities along with several bug fixes.</p>

<p>PHP 7.4 has reached its End-Of-Life, and there will be no security fix releases.</p>

<h2 id="recent-rfcs-and-mailing-list-discussions">Recent RFCs and Mailing List Discussions</h2>

<blockquote>
  <p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net website</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>
</blockquote>

<p><br>
Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, documentation, and the php.net website. Here is a summary of some changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<h3 id="rfc-updates">RFC Updates</h3>

<p>Following are the RFCs and major pull-requests discussed, voted on, and implemented since our last update.</p>

<ul>
<li><p><strong>RFC In Voting: <a href="https://wiki.php.net/rfc/saner-array-sum-product">Saner array_(sum|product)()</a> by George Peter Banyard 💜</strong></p>

<p>Proposes to change the current behavior of <code>array_sum</code> and <code>array_product</code> to properly handle non-numeric values. This results in additional warnings when these functions encounter unsupported types such as certain objects, arrays, and resources. Further, it can result in different return values on objects that support arithmetic operations.</p></li>
<li><p><strong>RFC In Voting: <a href="https://wiki.php.net/rfc/typed_class_constants">Typed class constants</a> by Benas Seliuginas and Máté Kocsis 💜</strong></p>

<p>Despite the huge efforts put into improving the type system of PHP year after year, it is still not possible to declare constant types. This is less of a concern for global constants, but can indeed be a source of bugs and confusion for class constants: This RFC proposes to add support for declaring class, interface, trait, as well as enum constant types:</p>

<pre><code class="php">enum E {
  const string TEST = "Test1";
}

trait T {
  const string TEST = E::TEST;
}

interface I {
  const string TEST = E::TEST;
}

class C {
  const string TEST = E::TEST;
}
</code></pre>

<p><br></p></li>
<li><p><strong>RFC Partially Accepted: <a href="https://wiki.php.net/rfc/readonly_amendments">Readonly amendments</a> by Nicolas Grekas and Máté Kocsis💜</strong></p>

<p>This RFC attempts to address some of the shortcomings of PHP 8.1 readonly properties and 8.2 readonly classes.</p>

<p>This RFC proposed allowing <code>readonly</code> classes to be extended by non-readonly classes (currently not allowed, and causes a fatal error), and to allow reinitializing readonly properties during cloning (within the <code>__clone()</code> magic method).</p>

<p>During the two-part RFC vote, the first change of <strong>allowing <code>readonly</code> classes to be extended by non-readonly classes was rejected</strong>. The second change of <strong>making it possible to reinitialize readonly properties during cloning was accepted</strong>.</p></li>
<li><p><strong>RFC Implemented: <a href="https://wiki.php.net/rfc/datetime-exceptions">More Appropriate Date/Time Exceptions</a> 💜</strong></p>

<p>RFC by Derick Rethans, proposed to introduce Date/Time extension-specific exceptions and errors. This detailed RFC suggests more specificity in the exceptions with exception classes such as <code>DateInvalidTimeZoneException</code>, and <code>DateMalformedPeriodStringException</code> as well as promoting some of the current PHP warnings to Error exceptions.</p>

<p>The <a href="https://github.com/php/php-src/pull/10366">changes</a> are now merged.</p></li>
</ul>

<h3 id="notable-mailing-list-discussions">Notable Mailing List Discussions</h3>

<ul>
<li><a href="https://externals.io/message/119451">Official Preprocessor</a></li>
<li><a href="https://externals.io/message/119425">Deprecate ldap_connect with host and port as separate arguments</a></li>
<li><a href="https://externals.io/message/119444">RFC proposal: function array_filter_list() to avoid subtle bugs/workarounds</a></li>
<li><a href="https://externals.io/message/119470">RFC Proposal - Types for Inline Variables</a></li>
<li><a href="https://externals.io/message/119584">Class Re-implementation Mechanism</a></li>
<li><a href="https://externals.io/message/119613">PHP code refactoring (was: include cleanup)</a></li>
<li><a href="https://externals.io/message/119631">RFC Idea - json_validate() validate schema</a></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Following are some changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements. There are automated unit and integration tests for each of these changes, the PHP core developers review all pull requests.</p>

<h3 id="change-highlights">Change Highlights</h3>

<ul>
<li>Max Kellermann continued to clean-up several extensions and the Zend engine.</li>
<li>Alex Dowad continued with his series of improvements in mbstring extension optimizations. PHP 8.2 received several impactful performance improvements in mbstring extension too.</li>
<li>Jakub Zelenka 💜 added a new INI directive <code>max_multipart_body_parts</code> to PHP 8.0, 8.1, and 8.2 (in addition to the master branch). When set, PHP limits the number of body parts PHP processes in multipart requests. This is to prevent a DoS attack vector reported as <a href="https://github.com/php/php-src/security/advisories/GHSA-54hq-v5wp-fqgv">GHSA-54hq-v5wp-fqgv</a></li>
<li>David Carlier also continued his series of additions and improvements to the Socket extension, widening the features and their availability in various operating environments.</li>
<li>Niels Dossche implemented <a href="https://github.com/php/php-src/issues/9826">GH-9826</a>, making it possible for <code>class_alias()</code> to work with internal classes. Previously, it was not possible to alias an internal class with <code>class_alias()</code>, and resulted in a <code>ValueError</code> exception saying the class must be a user-defined class.</li>
</ul>

<hr />

<h3 id="full-list-of-commits-since-php-core-roundup-%239">Full list of commits since <a href="/blog/2023/01/30/php-core-roundup-9/">PHP Core Roundup #9</a></h3>

<details>

<summary>Click here to expand</summary>

<ul>
<li>Fix type inference in <a href="https://github.com/php/php-src/commit/81607a62ca">81607a62ca</a> by Dmitry Stogov</li>
<li>Fix resetting <code>ZEND_GENERATOR_IN_FIBER</code> flag in <a href="https://github.com/php/php-src/commit/b9bca2dadb">b9bca2dadb</a> by Bob Weinand</li>
<li>Look at executing generator for fiber destructor behaviour in <a href="https://github.com/php/php-src/commit/00be6e1aed">00be6e1aed</a> by Bob Weinand</li>
<li>Use <code>bool</code> and <code>zend_result</code> where it makes sense in sockets extension in <a href="https://github.com/php/php-src/commit/3eb9dd47e0">3eb9dd47e0</a> by George Peter Banyard 💜</li>
<li>Voidify <code>php_sock_array_from_fd_set()</code> as result is never used in <a href="https://github.com/php/php-src/commit/735edd1c17">735edd1c17</a> by George Peter Banyard 💜</li>
<li>Bring minimum precision inline with <code>spprintf</code> in <a href="https://github.com/php/php-src/commit/93fb2c12b9">93fb2c12b9</a> by Derick Rethans 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10152">GH-10152</a>: Custom properties of Date's child classes are not serialised in <a href="https://github.com/php/php-src/commit/85fbc6eaa6">85fbc6eaa6</a> by Derick Rethans 💜</li>
<li>Fixed <a href="https://github.com/php/php-src/issues/10447">GH-10447</a>: 'p' format specifier does not yield 'Z' for 00:00 in <a href="https://github.com/php/php-src/commit/a42bf93308">a42bf93308</a> by Derick Rethans 💜</li>
<li>Add macro to check <code>zend_string</code> is marked as valid UTF-8 in <a href="https://github.com/php/php-src/commit/0b9fb636d1">0b9fb636d1</a> by George Peter Banyard 💜</li>
<li>Add function in <code>zend_test</code> to check UTF8 flag is added in <a href="https://github.com/php/php-src/commit/0c9181b646">0c9181b646</a> by George Peter Banyard 💜</li>
<li>Mark numeric strings as valid UTF-8 in <a href="https://github.com/php/php-src/commit/78720e39a6">78720e39a6</a> by George Peter Banyard 💜</li>
<li>Concatenating two valid UTF-8 strings produces a valid UTF-8 string in <a href="https://github.com/php/php-src/commit/64127b66c6">64127b66c6</a> by George Peter Banyard 💜</li>
<li>Ignore generated file on arm64 in <a href="https://github.com/php/php-src/commit/21cab65c00">21cab65c00</a> by Danack</li>
<li><code>github/workflows/push.yml</code>: enable ccache in <a href="https://github.com/php/php-src/pull/10395">GH-10395</a> by Max Kellermann</li>
<li>Fix <code>lineno</code> for all constant expressions in <a href="https://github.com/php/php-src/pull/8855">GH-8855</a> by Ilija Tovilo 💜</li>
<li>Allow comments between intersection types and by-ref params in <a href="https://github.com/php/php-src/pull/10125">GH-10125</a> by Ilija Tovilo 💜</li>
<li>Fix comp-time and constant evaluation of dynamic class constant fetch in <a href="https://github.com/php/php-src/pull/10487">GH-10487</a> by Ilija Tovilo 💜</li>
<li>Fix incorrect line number of constant in constant expression in <a href="https://github.com/php/php-src/commit/848a6e5035">848a6e5035</a> by Ilija Tovilo 💜</li>
<li>Move setting of <code>CG(zend_lineno)</code> in <a href="https://github.com/php/php-src/commit/fb670f2b80">fb670f2b80</a> by Ilija Tovilo 💜</li>
<li>Fix use-after-free in <code>write_property</code> when object is released in <a href="https://github.com/php/php-src/pull/10179">GH-10179</a> by Ilija Tovilo 💜</li>
<li>Avoid crash for <code>reset</code>/<code>end</code>/<code>next</code>/<code>prev()</code> on ffi classes in <a href="https://github.com/php/php-src/pull/9711">GH-9711</a> by Tyson Andre</li>
<li>Use AVX2 to accelerate <code>strto{upper,lower}</code> (only on 'AVX2-native' builds for now) in <a href="https://github.com/php/php-src/commit/c02af98ae5">c02af98ae5</a> by Alex Dowad</li>
<li>fixed some misspellings (<a href="https://bugs.php.net/bug.php?id=10503">#10503</a>) in <a href="https://github.com/php/php-src/commit/d2cdfdbe44">d2cdfdbe44</a> by rj1</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10315">GH-10315</a>: FPM unknown child alert not valid in <a href="https://github.com/php/php-src/pull/10319">GH-10319</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10385">GH-10385</a>: FPM successful config test early exit in <a href="https://github.com/php/php-src/pull/10388">GH-10388</a> by Niels Dossche</li>
<li>Introduce convenience macros for copying flags that hold when concatenating two strings in <a href="https://github.com/php/php-src/commit/99b86141ae">99b86141ae</a> by Niels Dossche</li>
<li>Copy UTF-8 flag for <code>str_repeat</code> in <a href="https://github.com/php/php-src/commit/c2d4bafc4f">c2d4bafc4f</a> by Niels Dossche</li>
<li><code>ext/snmp</code>: use <code>memcpy()</code> instead of <code>memmove()</code> (<a href="https://bugs.php.net/bug.php?id=10498">#10498</a>) in <a href="https://github.com/php/php-src/commit/d3abcae4a2">d3abcae4a2</a> by Max Kellermann</li>
<li>Implement an SSE2 accelerated version of <code>zend_adler32</code> (<a href="https://bugs.php.net/bug.php?id=10507">#10507</a>) in <a href="https://github.com/php/php-src/commit/722fbd01a3">722fbd01a3</a> by Niels Dossche</li>
<li>Sync boost/context assembly files for fibers in <a href="https://github.com/php/php-src/pull/10407">GH-10407</a> by Niels Dossche</li>
<li>Metaphone performance improvement (<a href="https://bugs.php.net/bug.php?id=10501">#10501</a>) in <a href="https://github.com/php/php-src/commit/c9cbe525e1">c9cbe525e1</a> by Niels Dossche</li>
<li>Do not build unnecessary FCI in Reflection in <a href="https://github.com/php/php-src/commit/50a2de78a8">50a2de78a8</a> by George Peter Banyard 💜</li>
<li>When fuzzing mbstring encoding conversion code, compare output with different intermediate buffer sizes in <a href="https://github.com/php/php-src/commit/d5d9900661">d5d9900661</a> by Alex Dowad</li>
<li>Add AVX2-accelerated UTF-16 decoding/encoding routines in <a href="https://github.com/php/php-src/commit/c8ec2ed730">c8ec2ed730</a> by Alex Dowad</li>
<li>Fix possible <code>exit_counters</code> memory leak in ZTS build in <a href="https://github.com/php/php-src/commit/a21195650e">a21195650e</a> by Dmitry Stogov</li>
<li>Make fuzzer respect <code>ZEND_MMAP_AHEAD</code> in <a href="https://github.com/php/php-src/commit/5c5707d44d">5c5707d44d</a> by Dmitry Stogov</li>
<li><code>ext/opcache/zend_jit</code>: cast function to fix <code>-Wincompatible-pointer-types</code> (<a href="https://bugs.php.net/bug.php?id=10527">#10527</a>) in <a href="https://github.com/php/php-src/commit/afbb28dfb7">afbb28dfb7</a> by Max Kellermann</li>
<li>Disable timestamp for GitHub actions ccache in <a href="https://github.com/php/php-src/commit/c95125d370">c95125d370</a> by Ilija Tovilo 💜</li>
<li><code>ext/opcache/zend_jit</code>: call TSRM dtor before unloading opcache.so (<a href="https://bugs.php.net/bug.php?id=10533">#10533</a>) in <a href="https://github.com/php/php-src/commit/131b862ac0">131b862ac0</a> by Max Kellermann</li>
<li>Fix PDO OCI Bug <a href="https://bugs.php.net/bug.php?id=60994">#60994</a> (Reading a multibyte CLOB caps at 8192 chars) in <a href="https://github.com/php/php-src/commit/4df4264ac9">4df4264ac9</a> by Michael Voříšek</li>
<li><code>Zend/zend_cpuinfo</code>, <code>ext/standard/crc32_x86</code>: fix <code>-Wstrict-prototypes</code> in <a href="https://github.com/php/php-src/commit/0752baa583">0752baa583</a> by Max Kellermann</li>
<li><code>php.ini-production</code>: disable <code>opcache.huge_code_pages</code> by default in <a href="https://github.com/php/php-src/pull/10336">GH-10336</a> by Max Kellermann</li>
<li>Cleanup dead code in <code>array_slice</code> (<a href="https://bugs.php.net/bug.php?id=10539">#10539</a>) in <a href="https://github.com/php/php-src/commit/3ff8333473">3ff8333473</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10168">GH-10168</a>: heap-buffer-overflow at <code>zval_undefined_cv</code> in <a href="https://github.com/php/php-src/pull/10524">GH-10524</a> by Niels Dossche</li>
<li><code>github/workflows/nightly.yml</code>: add job to build out-of-tree extensions in <a href="https://github.com/php/php-src/pull/10404">GH-10404</a> by Max Kellermann</li>
<li><code>random</code>: Use branchless implementation for mask generation in <code>Randomizer::getBytesFromString()</code> (<a href="https://bugs.php.net/bug.php?id=10522">#10522</a>) in <a href="https://github.com/php/php-src/commit/0cfc45b667">0cfc45b667</a> by Tim Düsterhus</li>
<li>Implement More Appropriate Date/Time Exceptions RFC in <a href="https://github.com/php/php-src/commit/b7860cd564">b7860cd564</a> by Derick Rethans 💜</li>
<li>Improve illegal offset error messages (<a href="https://bugs.php.net/bug.php?id=10504">#10504</a>) in <a href="https://github.com/php/php-src/commit/641fe23e3a">641fe23e3a</a> by Marcos Marcolin</li>
<li><code>ext/curl</code>: suppress <code>-Wdeprecated-declarations</code> in <a href="https://github.com/php/php-src/pull/10531">GH-10531</a> by Max Kellermann</li>
<li>Bump minimum <code>re2c</code> version requirement to 1.0.3 in <a href="https://github.com/php/php-src/commit/df853cb305">df853cb305</a> by Derick Rethans 💜</li>
<li><code>opcache/pcntl/cli</code>: Fixes few functions signatures in <a href="https://github.com/php/php-src/commit/81aedad452">81aedad452</a> by David Carlier</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10370">GH-10370</a>: File corruption in <code>_php_stream_copy_to_stream_ex</code> when using <code>copy_file_range</code> (<a href="https://bugs.php.net/bug.php?id=10440">#10440</a>) in <a href="https://github.com/php/php-src/commit/b4db690cb3">b4db690cb3</a> by Niels Dossche</li>
<li>Fix concurrent testing in <a href="https://github.com/php/php-src/commit/10f2378584">10f2378584</a> by Arnaud Le Blanc 💜</li>
<li>Fixed OSS fuzz issues <a href="https://bugs.php.net/bug.php?id=55589">#55589</a>, <a href="https://bugs.php.net/bug.php?id=55599">#55599</a>, and <a href="https://bugs.php.net/bug.php?id=55727">#55727</a> in <a href="https://github.com/php/php-src/commit/5d9ee8f920">5d9ee8f920</a> by Derick Rethans 💜</li>
<li>Fix memory leaks in <code>ext-tidy</code> in <a href="https://github.com/php/php-src/pull/10545">GH-10545</a> by George Peter Banyard 💜</li>
<li>Mark test as <code>XFAIL</code> in <a href="https://github.com/php/php-src/commit/13c34aac05">13c34aac05</a> by Ilija Tovilo 💜</li>
<li>Temporarily disable odbc in ci in <a href="https://github.com/php/php-src/commit/18b611d6a0">18b611d6a0</a> by Ilija Tovilo 💜</li>
<li>Simplify <code>php_reflection.c</code>, class name cannot start with backslash (<a href="https://bugs.php.net/bug.php?id=10536">#10536</a>) in <a href="https://github.com/php/php-src/commit/a11e9c9d02">a11e9c9d02</a> by Michael Voříšek</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10548">GH-10548</a>: <code>copy()</code> fails on cifs mounts because of incorrect length (cfr_max) specified in <code>streams.c</code>:1584 <code>copy_file_range()</code> (<a href="https://bugs.php.net/bug.php?id=10551">#10551</a>) in <a href="https://github.com/php/php-src/commit/e787d6c9e6">e787d6c9e6</a> by Niels Dossche</li>
<li>sockets add <code>SO_RERROR</code>/<code>SO_ZEROIZE</code>/<code>SO_SPLICE</code> net/openbsd's constants in <a href="https://github.com/php/php-src/pull/10563">GH-10563</a> by David Carlier</li>
<li>base64: add avx512 and vbmi version. in <a href="https://github.com/php/php-src/pull/6361">GH-6361</a> by Frank Du</li>
<li>crypt: Fix validation of malformed BCrypt hashes in <a href="https://github.com/php/php-src/commit/c840f71524">c840f71524</a> by Tim Düsterhus</li>
<li>crypt: Fix possible buffer overread in <code>php_crypt()</code> in <a href="https://github.com/php/php-src/commit/a92acbad87">a92acbad87</a> by Tim Düsterhus</li>
<li>Fix array overrun when appending slash to paths in <a href="https://github.com/php/php-src/commit/ec10b28d64">ec10b28d64</a> by Niels Dossche</li>
<li>Stop copying internal functions into each thread (<a href="https://bugs.php.net/bug.php?id=10517">#10517</a>) in <a href="https://github.com/php/php-src/commit/3b75f07c9a">3b75f07c9a</a> by Dmitry Stogov</li>
<li>Fix collection of unfinished function call in fibers in <a href="https://github.com/php/php-src/commit/d721dcc2ef">d721dcc2ef</a> by Arnaud Le Blanc 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10496">GH-10496</a>: Fibers must not be garbage collected while implicitly suspended by resumption of another fiber in <a href="https://github.com/php/php-src/commit/95016138a5">95016138a5</a> by Bob Weinand</li>
<li>Fix assertion failure when <code>var_dump</code>'ing void FFI result (<a href="https://bugs.php.net/bug.php?id=10568">#10568</a>) in <a href="https://github.com/php/php-src/commit/1a5fc6e1a3">1a5fc6e1a3</a> by Niels Dossche</li>
<li><code>posix</code>: fix misuse of <code>bool</code> (invalid code in c23) in <a href="https://github.com/php/php-src/pull/10577">GH-10577</a> by Cristian Rodríguez</li>
<li>Make C functions returning "void" to return PHP "null" (<a href="https://bugs.php.net/bug.php?id=10579">#10579</a>) in <a href="https://github.com/php/php-src/commit/7d49189ff4">7d49189ff4</a> and <a href="https://github.com/php/php-src/commit/851e4623f5">851e4623f5</a> by Dmitry Stogov</li>
<li>Fix updating SSA object type for <code>*_ASSIGN_OP</code> (<a href="https://bugs.php.net/bug.php?id=10458">#10458</a>) in <a href="https://github.com/php/php-src/commit/d94ddbed2c">d94ddbed2c</a> by Niels Dossche</li>
<li>Fix repeated warning for file uploads limit exceeding in <a href="https://github.com/php/php-src/commit/e45850c195">e45850c195</a> by Jakub Zelenka 💜</li>
<li>Introduce <code>max_multipart_body_parts</code> INI in <a href="https://github.com/php/php-src/commit/716de0cff5">716de0cff5</a> and <a href="https://github.com/php/php-src/commit/fd3cc17cbd">fd3cc17cbd</a> by Jakub Zelenka 💜</li>
<li>Fix incorrect character in <code>NEWS</code> in <a href="https://github.com/php/php-src/commit/caaaf75990">caaaf75990</a> by Jakub Zelenka 💜</li>
<li>Change <code>NEWS</code> for <a href="https://github.com/php/php-src/security/advisories/GHSA-54hq-v5wp-fqgv">GHSA-54hq-v5wp-fqgv</a> as it is for all SAPIs in <a href="https://github.com/php/php-src/commit/eef29d434a">eef29d434a</a> by Jakub Zelenka 💜</li>
<li>more config for new FPM tests in <a href="https://github.com/php/php-src/commit/e86d8704b4">e86d8704b4</a> by Remi Collet</li>
<li>Point to the issue tracker on GitHub in <a href="https://github.com/php/php-src/commit/586e81b259">586e81b259</a> by Ben Ramsey</li>
<li>Use <code>gtar</code> if it's in the <code>PATH</code> in <a href="https://github.com/php/php-src/commit/843ba82b53">843ba82b53</a> by Ben Ramsey</li>
<li>Ensure <code>tar</code> is not <code>bsdtar</code> in <a href="https://github.com/php/php-src/commit/d9ac59b0a9">d9ac59b0a9</a> by Ben Ramsey</li>
<li>Add a <code>SECURITY.md</code> community health file to the repo in <a href="https://github.com/php/php-src/commit/5845a52973">5845a52973</a> and <a href="https://github.com/php/php-src/commit/bbc1f821dd">bbc1f821dd</a> by Ben Ramsey</li>
<li>Update to use GitHub security issue reporting in <a href="https://github.com/php/php-src/commit/d62968cd12">d62968cd12</a> by Ben Ramsey</li>
<li>Revert "Fix <a href="https://github.com/php/php-src/issues/10168">GH-10168</a>: heap-buffer-overflow at <code>zval_undefined_cv</code>" in <a href="https://github.com/php/php-src/commit/7b68ff46da">7b68ff46da</a> by Ilija Tovilo 💜</li>
<li>Update RM doc with new PGP keyserver in <a href="https://github.com/php/php-src/commit/0493187024">0493187024</a> by Ben Ramsey</li>
<li>Revert "Remove useless <code>UNEXPECTED</code> around <code>RETURN_VALUE_USED</code> in specialized <code>RETVAL</code> handler" in <a href="https://github.com/php/php-src/commit/81f3fcd5cc">81f3fcd5cc</a> by Ilija Tovilo 💜</li>
<li>Fix strict prototypes warnings in <a href="https://github.com/php/php-src/commit/7c3b92fc91">7c3b92fc91</a> by Ilija Tovilo 💜</li>
<li><code>ext/json</code>: add <code>php_json_scanner_defs.h</code> as make target in <a href="https://github.com/php/php-src/commit/2fde3afffb">2fde3afffb</a> by Daniel Black</li>
<li><code>ext/Zend</code>: <code>zend_language_scanner_defs.h</code> as make target in <a href="https://github.com/php/php-src/commit/e83cda0887">e83cda0887</a> by Daniel Black</li>
<li>zend win32 RE2C header files to Make targets and generated_files in <a href="https://github.com/php/php-src/commit/2b3fa5edac">2b3fa5edac</a> by Daniel Black</li>
<li>Fix <code>php_json_scanner_defs.h</code> target in <code>ext/json/Makefile.frag</code> in <a href="https://github.com/php/php-src/commit/4f731fa2ec">4f731fa2ec</a> by Jakub Zelenka 💜</li>
<li>Update <code>NEWS</code> with scanner and parser build fixes in <a href="https://github.com/php/php-src/commit/a9e4f51844">a9e4f51844</a> by Jakub Zelenka 💜</li>
<li><code>makedist</code>: Use fixed owner/group in generated tarball (<a href="https://bugs.php.net/bug.php?id=10613">#10613</a>) in <a href="https://github.com/php/php-src/commit/7d229787b0">7d229787b0</a> by Tim Düsterhus</li>
<li><code>proc_open</code>: reject array with empty command name (<a href="https://bugs.php.net/bug.php?id=10559">#10559</a>) in <a href="https://github.com/php/php-src/commit/5e617d0b4d">5e617d0b4d</a> by Cristian Rodríguez</li>
<li><code>Zend/zend_types.h</code>: deprecate <code>zend_bool</code>, <code>zend_intptr_t</code>, <code>zend_uintptr_t</code> (<a href="https://bugs.php.net/bug.php?id=10597">#10597</a>) in <a href="https://github.com/php/php-src/commit/413844d626">413844d626</a> by Max Kellermann</li>
<li><code>ext/opcache/zend_shared_alloc</code>: <code>bool</code> fixups in <a href="https://github.com/php/php-src/commit/3b9812f8be">3b9812f8be</a> by Max Kellermann</li>
<li><code>ext/opcache/zend_shared_alloc</code>: convert more <code>int</code> to <code>bool</code> in <a href="https://github.com/php/php-src/commit/3dcd47243c">3dcd47243c</a> by Max Kellermann</li>
<li><code>ext/opcache/ZendAccelerator</code>: <code>accel_is_inactive()</code> returns bool in <a href="https://github.com/php/php-src/commit/a50de37013">a50de37013</a> by Max Kellermann</li>
<li><code>ext/opcache/ZendAccelerator</code>: fix functions to return zend_result in <a href="https://github.com/php/php-src/commit/04c85a3371">04c85a3371</a> by Max Kellermann</li>
<li><code>Zend/zend_alloc</code>: make <code>stderr_last_error()</code> static (<a href="https://bugs.php.net/bug.php?id=10587">#10587</a>) in <a href="https://github.com/php/php-src/commit/c0d89e54c8">c0d89e54c8</a> by Max Kellermann</li>
<li>Make globals const (part 2) (<a href="https://bugs.php.net/bug.php?id=10610">#10610</a>) in <a href="https://github.com/php/php-src/commit/d46dea169c">d46dea169c</a> by Max Kellermann</li>
<li><code>Zend/zend_globals</code>: convert <code>fiber_stack_size</code> to <code>size_t</code> (<a href="https://bugs.php.net/bug.php?id=10619">#10619</a>) in <a href="https://github.com/php/php-src/commit/bf036fa2a3">bf036fa2a3</a> by Max Kellermann</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10623">GH-10623</a>: <code>ReflectionFunction::getClosureUsedVariables()</code> returns empty array in presence of variadic arguments in <a href="https://github.com/php/php-src/commit/ae16471628">ae16471628</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10377">GH-10377</a>: Unable to have an anonymous readonly class in <a href="https://github.com/php/php-src/pull/10381">GH-10381</a> by Niels Dossche</li>
<li><code>Zend/zend_types.h</code>: move <code>zend_result</code> to separate header (<a href="https://bugs.php.net/bug.php?id=10609">#10609</a>) in <a href="https://github.com/php/php-src/commit/3bce116069">3bce116069</a> by Max Kellermann</li>
<li><code>Zend/zend_extensions</code>: make <code>zend_extension_version_info</code> const (<a href="https://bugs.php.net/bug.php?id=10592">#10592</a>) in <a href="https://github.com/php/php-src/commit/7029fd08b1">7029fd08b1</a> by Max Kellermann</li>
<li><code>CODING_STANDARDS.md</code>: establish C99 as the implementation language (<a href="https://bugs.php.net/bug.php?id=10631">#10631</a>) in <a href="https://github.com/php/php-src/commit/5bfd3fa40f">5bfd3fa40f</a> by Max Kellermann</li>
<li><code>ext/mbstring</code>: fix <code>new_value</code> length check in <a href="https://github.com/php/php-src/pull/10532">GH-10532</a> by Max Kellermann</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10627">GH-10627</a>: <code>mb_convert_encoding</code> crashes PHP on Windows in <a href="https://github.com/php/php-src/pull/10628">GH-10628</a> by Niels Dossche</li>
<li>Make various pointers const in Zend/ (<a href="https://bugs.php.net/bug.php?id=10608">#10608</a>) in <a href="https://github.com/php/php-src/commit/49c1e6eb33">49c1e6eb33</a> by Max Kellermann</li>
<li>Fix (at lease part of the) #<a href="https://github.com/php/php-src/issues/10635">GH-10635</a>: ARM64 function JIT causes impossible assertion in <a href="https://github.com/php/php-src/commit/08e7591206">08e7591206</a> by Dmitry Stogov</li>
<li>Improve the optimizer's check if a function is a prototype or not (<a href="https://bugs.php.net/bug.php?id=10467">#10467</a>) in <a href="https://github.com/php/php-src/commit/2e78c080c6">2e78c080c6</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10635">GH-10635</a>: ARM64 function JIT causes impossible assertion (<a href="https://bugs.php.net/bug.php?id=10638">#10638</a>) in <a href="https://github.com/php/php-src/commit/70ff10af72">70ff10af72</a> by Dmitry Stogov</li>
<li><code>Zend/zend_ini</code>: fix zend_result return values in <a href="https://github.com/php/php-src/commit/d51eb1d74c">d51eb1d74c</a> by Max Kellermann</li>
<li><code>ext/curl/interface</code>: fix zend_result return value in <a href="https://github.com/php/php-src/pull/10640">GH-10640</a> by Max Kellermann</li>
<li>Make lots of string pointers <code>const</code> (<a href="https://bugs.php.net/bug.php?id=10646">#10646</a>) in <a href="https://github.com/php/php-src/commit/263b22f374">263b22f374</a> by Max Kellermann</li>
<li>Add missing error check on tidyLoadConfig in <a href="https://github.com/php/php-src/pull/10636">GH-10636</a> by ndossche</li>
<li>Fix incorrect error check in browsecap for <code>pcre2_match()</code> in <a href="https://github.com/php/php-src/pull/10632">GH-10632</a> by ndossche</li>
<li>Fix Tidy tests failing due to different spelling in <a href="https://github.com/php/php-src/commit/74c880edd1">74c880edd1</a> by nielsdos</li>
<li>Two <code>enum</code>s instead of preprocessor macros (<a href="https://bugs.php.net/bug.php?id=10617">#10617</a>) in <a href="https://github.com/php/php-src/commit/bb07e20203">bb07e20203</a> by Max Kellermann</li>
<li><code>sapi/fpm</code>: remove use of variable-length arrays (<a href="https://bugs.php.net/bug.php?id=10645">#10645</a>) in <a href="https://github.com/php/php-src/commit/ff2a211d55">ff2a211d55</a> by Max Kellermann</li>
<li>ext: make various internal functions static (<a href="https://bugs.php.net/bug.php?id=10650">#10650</a>) in <a href="https://github.com/php/php-src/commit/1287747a9a">1287747a9a</a> by Max Kellermann</li>
<li>Propagate errors correctly in <code>ps_files_cleanup_dir()</code> in <a href="https://github.com/php/php-src/pull/10644">GH-10644</a> by nielsdos</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10647">GH-10647</a>: <code>Spoofchecker</code> <code>isSuspicious</code>/<code>areConfusable</code> methods error code's argument in <a href="https://github.com/php/php-src/pull/10653">GH-10653</a> by NathanFreeman</li>
<li>make clean: remove <code>ext/opcache/minilua</code> in <a href="https://github.com/php/php-src/pull/10656">GH-10656</a> by Kévin Dunglas</li>
<li>Implement <a href="https://github.com/php/php-src/issues/9826">GH-9826</a>: Make <code>class_alias()</code> work with internal classes (<a href="https://bugs.php.net/bug.php?id=10483">#10483</a>) in <a href="https://github.com/php/php-src/commit/821fc55a68">821fc55a68</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10239">GH-10239</a>: <code>proc_close</code> after <code>proc_get_status</code> always returns <code>-1</code> in <a href="https://github.com/php/php-src/pull/10250">GH-10250</a> by Niels Dossche</li>
<li><code>CODING_STANDARDS.md</code>: add rules for <code>bool</code>/<code>zend_result</code> return types (<a href="https://bugs.php.net/bug.php?id=10630">#10630</a>) in <a href="https://github.com/php/php-src/commit/da777d493a">da777d493a</a> by Max Kellermann</li>
<li><code>makedist</code>: Use fixed sort in generated tarball (<a href="https://bugs.php.net/bug.php?id=10615">#10615</a>) in <a href="https://github.com/php/php-src/commit/9660a7fa59">9660a7fa59</a> by Tim Düsterhus</li>
<li>New test case from ed0c0df351 exercises the code it was intended to in <a href="https://github.com/php/php-src/commit/e934c5cde1">e934c5cde1</a> by Alex Dowad</li>
<li>Remove unneeded function <code>mbfl_name2no_encoding</code> in <a href="https://github.com/php/php-src/commit/a85adb170c">a85adb170c</a> by Alex Dowad</li>
<li>Remove unneeded function <code>mbfl_no2preferred_mime_name</code> in <a href="https://github.com/php/php-src/commit/117f2263ce">117f2263ce</a> by Alex Dowad</li>
<li>Implement <code>mb_decode_mimeheader</code> using fast text conversion filters in <a href="https://github.com/php/php-src/commit/157ca654f2">157ca654f2</a> by Alex Dowad</li>
<li><code>mb_decode_mimeheader</code> obeys RFC 2047 regarding underscores and QPrint encoding in <a href="https://github.com/php/php-src/commit/8995f60258">8995f60258</a> by Alex Dowad</li>
<li>Add support for generating namespaced constant in <a href="https://github.com/php/php-src/pull/10552">GH-10552</a> by SATO Kentaro</li>
<li>Declare proper parameter default values for <code>imagegd2</code> (<a href="https://bugs.php.net/bug.php?id=10569">#10569</a>) in <a href="https://github.com/php/php-src/commit/101178214c">101178214c</a> by Máté Kocsis 💜</li>
<li><code>Zend/zend_variables</code>: use C99 designated initializers (<a href="https://bugs.php.net/bug.php?id=10655">#10655</a>) in <a href="https://github.com/php/php-src/commit/0460420205">0460420205</a> by Max Kellermann</li>
<li><code>zend_compiler</code>, ...: use <code>uint8_t</code> instead of <code>zend_uchar</code> (<a href="https://bugs.php.net/bug.php?id=10621">#10621</a>) in <a href="https://github.com/php/php-src/commit/d5c649b36b">d5c649b36b</a> by Max Kellermann</li>
<li>random: Move the CSPRNG implementation into a separate C file (<a href="https://bugs.php.net/bug.php?id=10668">#10668</a>) in <a href="https://github.com/php/php-src/commit/b14dd85dca">b14dd85dca</a> by Tim Düsterhus</li>
<li>Fix incorrect string length for <code>output_handler</code> in zlib ini code in <a href="https://github.com/php/php-src/pull/10667">GH-10667</a> by Niels Dossche</li>
<li>Use an explicit failure check for <code>zend_result</code> functions in the scanner (<a href="https://bugs.php.net/bug.php?id=10688">#10688</a>) in <a href="https://github.com/php/php-src/commit/91857ccaf9">91857ccaf9</a> by Niels Dossche</li>
<li>Re-enable <code>UnixODBC</code> testing in <a href="https://github.com/php/php-src/commit/939c546ea1">939c546ea1</a> by Danack</li>
<li>Fix segfault when using <code>ReflectionFiber</code> (fixes <a href="https://bugs.php.net/bug.php?id=10439">#10439</a>) in <a href="https://github.com/php/php-src/pull/10478">GH-10478</a> by Daniil Gentili</li>
<li><code>ext/opcache/zend_shared_alloc</code>: use <code>memfd</code> for locking if available in <a href="https://github.com/php/php-src/pull/10589">GH-10589</a> by Max Kellermann</li>
<li><code>random</code>: Fix return type of <code>php_random_(bytes|int)</code> (<a href="https://bugs.php.net/bug.php?id=10687">#10687</a>) in <a href="https://github.com/php/php-src/commit/f079aa2e24">f079aa2e24</a> by Tim Düsterhus</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10672">GH-10672</a> (<code>pg_lo_open</code> segfaults in the <code>strict_types</code> mode) in <a href="https://github.com/php/php-src/pull/10677">GH-10677</a> by George Peter Banyard 💜</li>
<li>Fixed bug <a href="https://github.com/php/php-src/issues/10270">GH-10270</a> Unable to return <code>CURL_READFUNC_PAUSE</code> in readfunc callback in <a href="https://github.com/php/php-src/pull/10607">GH-10607</a> by Pierrick Charron</li>
<li>Fix incorrect type for return value of <code>zend_update_static_property_ex()</code> in <a href="https://github.com/php/php-src/pull/10691">GH-10691</a> by nielsdos</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10570">GH-10570</a>: Assertion `(key)->h != 0 &amp;&amp; "Hash must be known"' failed in <a href="https://github.com/php/php-src/pull/10572">GH-10572</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10489">GH-10489</a>: <code>run-tests.php</code> does not escape path when building cmd  (<a href="https://bugs.php.net/bug.php?id=10560">#10560</a>) in <a href="https://github.com/php/php-src/commit/dcc3255b18">dcc3255b18</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10692">GH-10692</a>: PHP crashes on Windows when an in-existent filename is executed in <a href="https://github.com/php/php-src/pull/10697">GH-10697</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10659">GH-10659</a>: <code>hash/xxhash</code> applying build upstream fix in <a href="https://github.com/php/php-src/pull/10693">GH-10693</a> by David Carlier</li>
<li>Change <code>DOMCharacterData::appendData</code> return type to true (<a href="https://bugs.php.net/bug.php?id=10690">#10690</a>) in <a href="https://github.com/php/php-src/commit/e1967ca9ed">e1967ca9ed</a> by othercorey</li>
<li>Fix format string mistake in <code>accel_move_code_to_huge_pages()</code> in <a href="https://github.com/php/php-src/commit/eb7bb3430b">eb7bb3430b</a> by Niels Dossche</li>
<li>Fix incorrect error checking in <code>php_openssl_set_server_dh_param()</code> in <a href="https://github.com/php/php-src/pull/10705">GH-10705</a> by Niels Dossche</li>
<li>Use <code>zend_result</code> where appropriate in <code>ext/openssl</code> Remove dead code in <a href="https://github.com/php/php-src/pull/10704">GH-10704</a> by Niels Dossche</li>
<li>Change implicit enum return value checks to explicit checks (<a href="https://bugs.php.net/bug.php?id=10703">#10703</a>) in <a href="https://github.com/php/php-src/commit/375e7402af">375e7402af</a> by Niels Dossche</li>
<li>Fix <code>UBSAN</code> warning about applying zero offset to null pointer (<a href="https://bugs.php.net/bug.php?id=10700">#10700</a>) in <a href="https://github.com/php/php-src/commit/382148d7bb">382148d7bb</a> by George Peter Banyard 💜</li>
<li>Simplify checks and returns in <code>ext/xmlwriter</code> (<a href="https://bugs.php.net/bug.php?id=10701">#10701</a>) in <a href="https://github.com/php/php-src/commit/07fe46fb5d">07fe46fb5d</a> by Niels Dossche</li>
<li>chore: standardize the visibility of functions. (<a href="https://bugs.php.net/bug.php?id=10708">#10708</a>) in <a href="https://github.com/php/php-src/commit/9004725367">9004725367</a> by Marcos Marcolin</li>
<li>Minor cleanups in Zend execution APIs (<a href="https://bugs.php.net/bug.php?id=10699">#10699</a>) in <a href="https://github.com/php/php-src/commit/9108a32bfe">9108a32bfe</a> by Niels Dossche</li>
<li><code>Zend/zend_types.h</code>: move <code>zend_rc_debug</code> to <code>zend_rc_debug.h</code> in <a href="https://github.com/php/php-src/commit/d6e95041e2">d6e95041e2</a> by Max Kellermann</li>
<li><code>Zend/zend_rc_debug</code>: convert <code>ZEND_RC_MOD_CHECK()</code> to function in <a href="https://github.com/php/php-src/commit/e509a66a9c">e509a66a9c</a> by Max Kellermann</li>
<li><code>Zend/zend_types.h</code>: move <code>IS_*</code> to <code>zend_type_code.h</code> in <a href="https://github.com/php/php-src/commit/0270a1e54c">0270a1e54c</a> by Max Kellermann</li>
<li><code>Zend/zend_type_code.h</code>: convert to <code>enum</code> in <a href="https://github.com/php/php-src/commit/b98f18e7c3">b98f18e7c3</a> by Max Kellermann</li>
<li><code>Zend/zend_types.h</code>: move <code>zend_refcounted</code> to <code>zend_refcounted.h</code> in <a href="https://github.com/php/php-src/commit/eb34c28fed">eb34c28fed</a> by Max Kellermann</li>
<li><code>Zend/zend_types.h</code>: move <code>zend_uchar.h</code> to <code>zend_char.h</code> in <a href="https://github.com/php/php-src/commit/42577c6b6b">42577c6b6b</a> by Max Kellermann</li>
<li><code>Zend/zend_types.h</code>: move <code>zend_string</code> to <code>zend_string.h</code> in <a href="https://github.com/php/php-src/commit/02690fe3c0">02690fe3c0</a> by Max Kellermann</li>
<li>The userland constants do not start with PHP_ in <a href="https://github.com/php/php-src/commit/6a5b3f0ff9">6a5b3f0ff9</a> by George Peter Banyard 💜</li>
<li>Fixed <code>ValueError</code> message in <code>substr_compare()</code> in <a href="https://github.com/php/php-src/commit/2133970152">2133970152</a> by George Peter Banyard 💜</li>
<li>Fixed <code>ValueError</code> message in count_chars() in <a href="https://github.com/php/php-src/commit/adc5edd411">adc5edd411</a> by George Peter Banyard 💜</li>
<li>Improve handling of XML options in <a href="https://github.com/php/php-src/pull/10675">GH-10675</a> by George Peter Banyard 💜</li>
<li><code>Zend/zend_fibers</code>: change return value to zend_result in <a href="https://github.com/php/php-src/pull/10622">GH-10622</a> by Max Kellermann</li>
<li>Remove unnecessary checks in <code>ftp_fopen_wrapper.c</code> (<a href="https://bugs.php.net/bug.php?id=10711">#10711</a>) in <a href="https://github.com/php/php-src/commit/edacfbd1d4">edacfbd1d4</a> by Niels Dossche</li>
<li>Allow <code>gen_stub.php</code> to parse and ignore extended docblock types in <a href="https://github.com/php/php-src/commit/81abd8dc37">81abd8dc37</a> by Bob Weinand</li>
<li>Fix incorrect inheritance cache update (<a href="https://bugs.php.net/bug.php?id=10719">#10719</a>) in <a href="https://github.com/php/php-src/commit/2e3fc8c0ff">2e3fc8c0ff</a> by Dmitry Stogov</li>
<li>Fix incorrect inheritance cache update (<a href="https://bugs.php.net/bug.php?id=10719">#10719</a>) in <a href="https://github.com/php/php-src/commit/44e5c04e55">44e5c04e55</a> by Dmitry Stogov</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10715">GH-10715</a>: phpdbg heap buffer overflow -- by misuse of the option "--run" in <a href="https://github.com/php/php-src/pull/10720">GH-10720</a> by Niels Dossche</li>
<li><code>Zend/zend_type_code</code>: remove hard-coded integer values and remove unused macro <code>ZEND_SAME_FAKE_TYPE</code> <code>Zend/zend_variables</code>: add _Static_assert on the size zend_rc_dtor_func _Static_assert is C11, but has been supported since GCC 4.6 in <a href="https://github.com/php/php-src/pull/10714">GH-10714</a> by Max Kellermann</li>
<li><code>ext/sockets</code>: add <code>TCP_REPAIR</code> to silently close a connection in <a href="https://github.com/php/php-src/pull/10724">GH-10724</a> by David CARLIER</li>
</ul>

</details>

<p><br></p>

<hr />

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP Core Roundup #9]]></title>
            <link href="https://thephp.foundation/blog/2023/01/30/php-core-roundup-9/"/>
            <updated>2023-01-30T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2023/01/30/php-core-roundup-9/</id>
            <content type="html"><![CDATA[<p>The first for the year 2023, and the ninth in the series, this episode of PHP Core Roundup is full of exciting new developments in PHP and about PHP 8.2, the latest PHP version released last month! January was a busy month with many RFC proposals, discussions, votes, and some that are already included for the upcoming PHP 8.3 version that is scheduled for November 2023.</p>

<blockquote>
  <p>The PHP Foundation currently supports six part-time PHP contributors who work on maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>
</blockquote>

<p><br>
We publish the posts on our website, and you can subscribe to a newsletter; You don’t necessarily have to be a PHP Foundation backer to follow <em>PHP Core Roundup</em>.</p>

<p><div class="px-4 pt-3 border-b border-t -mx-4 border-gray-200">
    <div class="bg-white py-8">
        <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 lg:grid-cols-12 lg:gap-8">
            <div class="max-w-xl text-4xl font-medium tracking-tight text-gray-900 lg:col-span-6">
                Subscribe to PHP Core Roundup newsletter
            </div>
            <form method="POST"
                  action="https://php-foundation.mailcoach.app/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056"
                  class="w-full max-w-md lg:col-span-6">
                <div class="flex gap-x-4">
                    <label for="email-address" class="sr-only">Email address</label>
                    <input id="email-address" name="email" type="email" autocomplete="email" required
                           class="min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                           placeholder="Enter your email">
                    <button type="submit"
                            class="inline-block py-2 no-underline px-6 !text-white bg-[#7f52ff] rounded-3xl hover:bg-[rgba(127,82,255,.8)]">
                        Subscribe
                    </button>
                </div>
                <div class="mt-4 text-sm leading-6 text-gray-900">
                    We care about your data.
                    Read our <a href="https://thephp.foundation/privacy-policy"
                                class="font-semibold text-indigo-600 hover:text-indigo-500 no-underline">privacy policy</a>.
                </div>
            </form>
        </div>
    </div>
</div>
</p>

<h2 id="php-8.2-released">PHP 8.2 Released</h2>

<p>PHP 8.2 is here! With type-system improvements, <code>readonly</code>classes, sensitive parameter redaction support, a new "<code>random</code>" extension, and several new features and improvements, PHP 8.2.0 was released on December 08th, followed by a security-fix release 8.2.1 on January 05th.</p>

<p>Over <strong>110 people</strong>, along with our six PHP Foundation members, helped shape PHP 8.2. <strong>Thank you for your amazing efforts 🙏🏼💜</strong>.</p>

<p><a href="https://www.php.net/releases/8.2/en.php">PHP 8.2 Release Announcement</a> on <a href="https://php.net">php.net</a> contains a summary of what’s new and changed in PHP 8.2. Detailed lists and guides are also available on <a href="https://php.watch/versions/8.2">PHP.Watch: PHP 8.2</a> and <a href="https://stitcher.io/blog/new-in-php-82">Stitcher.io</a>.</p>

<h2 id="php-8.3-rfcs-and-discussions">PHP 8.3 RFCs and Discussions</h2>

<p>Discussions and proposals for new features and changes for the upcoming PHP version 8.3 were being made even before PHP 8.2.0 was released. January was a particularly eventful month with several proposals and discussions, including a few that went to a vote, and a few that are now implemented in the PHP master branch.</p>

<p>Most of the proposed improvements are in improving existing PHP functionality, especially the new readonly properties/class and the random extension. There were also discussions and proposals about adding a new syntax similar to Swift to declare granular get/set access to properties, passing the calling scope to class magic methods, and more.</p>

<p>Additionally, the <a href="https://wiki.php.net/rfc/deprecations_php_8_3">Deprecations for PHP 8.3 RFC</a> is also being drafted and discussed on features that the community proposes to deprecate in PHP 8.3 and remove in PHP 9.0.</p>

<h2 id="recent-rfcs%2C-merged-prs%2C-discussions%2C-and-commits">Recent RFCs, Merged PRs, Discussions, and Commits</h2>

<blockquote>
  <p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net website</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>
</blockquote>

<p><br>
Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, documentation, and the php.net website. Here is a summary of some changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<h3 id="rfc-updates">RFC Updates</h3>

<p>Following are the RFCs and major pull-requests discussed, voted, and implemented since our last update.</p>

<ul>
<li><p><strong>RFC In Voting: <a href="https://wiki.php.net/rfc/readonly_amendments">Readonly amendments</a> 💜</strong></p>

<p>RFC by Nicolas Grekas and Máté Kocsis, attempts to address some of the shortcomings of PHP 8.1 readonly properties and 8.2 readonly classes.</p>

<p>This RFC proposes allowing <code>readonly</code> classes to be extended by non-readonly classes (currently not allowed, and causes a fatal error), and to allow reinitializing readonly properties during cloning (within the <code>__clone()</code> magic method).</p></li>
<li><p><strong>RFC Accepted: <a href="https://wiki.php.net/rfc/datetime-exceptions">More Appropriate Date/Time Exceptions</a> 💜</strong></p>

<p>RFC by Derick Rethans, proposed to introduce Date/Time extension-specific exceptions and errors. This detailed RFC suggests more specificity in the exceptions with exception classes such as <code>DateInvalidTimeZoneException</code>, and <code>DateMalformedPeriodStringException</code> as well as promoting some of the current PHP warnings to Error exceptions.</p>

<p>The vote was accepted, and the <a href="https://github.com/php/php-src/pull/10366">pull-request</a> is nearly ready to be merged.</p></li>
<li><p><strong>RFC Implemented: <a href="https://wiki.php.net/rfc/randomizer_additions">Randomizer Additions</a></strong></p>

<p>RFC by Joshua Rüsweg and Tim Düsterhus, proposed to add new “building block” methods to <code>\Random\Randomizer</code> (added in PHP 8.2) that implement commonly useful operations that are either verbose or very hard to implement in userland.</p>

<p>The RFC proposed to add two new methods: <code>getBytesFromString</code>, to generate a random string containing specific characters, and <code>getFloat</code>/<code>nextFloat</code>, to generate a random floating point value.</p></li>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/pass_scope_to_magic_accessors">Pass Scope to Magic Accessors</a> 💜</strong></p>

<p>RFC by Nicolas Grekas and Ilija Tovilo, proposing to pass the calling scope to magic accessors to make it trivial to get it. While it is currently possible to retrieve the calling scope by retrieving the backtrace, the RFC proposes to pass the calling scope as the last argument to the magic methods, making it easier compared to fiddling with the debug backtrace.</p></li>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/saner-inc-dec-operators">Path to Saner Increment/Decrement operators</a> 💜</strong></p>

<p>PHP's increment and decrement operators can have some surprising behaviours when used with types other than int and float. Various previous attempts (<a href="https://wiki.php.net/rfc/normalize_inc_dec">1</a>, <a href="https://wiki.php.net/rfc/alpanumeric_decrement">2</a>, <a href="https://wiki.php.net/rfc/increment_decrement_fixes">3</a>) have been made to improve the behaviour of these operators, but none have been implemented. The goal of this RFC by George Peter Banyard is to normalize the behaviour of <code>$v++</code> and <code>$v--</code> to be the same as <code>$v += 1</code> and <code>$v -= 1</code>, respectively.</p></li>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/saner-array-sum-product">Saner <code>array_(sum|product)()</code></a> 💜</strong></p>

<p>RFC by George Peter Banyard suggests improvements to the existing <code>array_sum</code> and <code>array_product</code> functions by emitting a warning when the arrays being summed/multiplied contain invalid types. This can introduce backwards-incompatible effects (apart from the warning) on code that relies on the current behavior of the functions.</p></li>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/same-site-parameter">Add SameSite cookie attribute parameter</a> 💜</strong></p>

<p>RFC by George Peter Banyard proposes adding support for SameSite cookies as a function parameter to <code>setcookie</code>, <code>setrawcookie</code>, and <code>session_set_cookie_params</code> functions. While PHP 7.3 and later supports <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite">SameSite cookies</a> when the cookie options are passed as an array, this RFC proposes to add a new parameter that accepts a <code>SameSite</code> enum value. The proposed <code>SameSite</code> enum contains <code>Strict</code>, <code>Lax</code>, and <code>None</code> members, which are the only accepted values.</p></li>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/file-descriptor-function">Add file_descriptor() function</a> 💜</strong></p>

<p>RFC by George Peter Banyard proposes a new <code>file_descriptor()</code> function that returns the integer file descriptor of a given stream, if the underlying file system supports it.</p></li>
<li><p><strong>RFC Declined: <a href="https://wiki.php.net/rfc/asymmetric-visibility">Asymmetric Visibility</a> 💜</strong></p>

<p>PHP’s property visibility modifiers (<code>public</code>, <code>protected</code>, and <code>private</code>) apply to both get and set operations. This RFC by Ilija Tovilo and Larry Garfield proposed a new syntax inspired by Swift to asymmetrically declare the visibility modifiers individually for get and set operations:</p>

<pre><code>class Foo
{
    public private(set) string $bar;
}
</code></pre>

<p><br>
In the snippet above, <code>public private(set)</code>indicates that get operations are <code>public</code>, while set operations are <code>private</code>.</p>

<p>However, the vote held for this RFC did not pass. A lengthy mailing list discussion on this RFC is available <a href="https://externals.io/message/118994">here</a>.</p></li>
</ul>

<h3 id="notable-mailing-list-discussions">Notable Mailing List Discussions</h3>

<ul>
<li><a href="https://externals.io/message/119243">base64url format</a></li>
<li><a href="https://externals.io/message/119198">PHP build for the wasm32-wasi target</a></li>
<li><a href="https://externals.io/message/119238">A set of 18 functions/changes to improve PHP core</a></li>
<li><a href="https://externals.io/message/119086">PHP support for matrix operations - BLAS, LAPACK</a></li>
<li><a href="https://externals.io/message/119149">Unicode Text Processing</a></li>
<li><a href="https://externals.io/message/119425">Deprecate ldap_connect with host and port as separate arguments</a></li>
<li><a href="https://externals.io/message/119392">Introduce the ability to use the first-call-callable syntax on non-static methods, statically</a></li>
<li><a href="https://externals.io/message/119374">Loading SQLite extensions on PDO</a></li>
<li><a href="https://externals.io/message/119272">rules for #include directives</a></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<ul>
<li>Alex Dowad continued with his series of improvements in mbstring extension optimizations. PHP 8.2 received several impactful performance improvements in mbstring extension too.</li>
<li>Tim Düsterhus made several improvements and fixes to the new "random" extension.</li>
<li>Max Kellermann made several improvements in making several pointers <code>const</code>, along with a new <a href="https://wiki.php.net/rfc/include_cleanup">RFC</a> to clean up PHP source's header <code>include</code> calls.</li>
</ul>

<p>Following are some changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements. There are automated unit and integration tests for each of these changes, the PHP core developers review all pull requests.</p>

<hr />

<h3 id="full-list-of-commits-since-php-core-roundup-%238">Full list of commits since <a href="/blog/2022/11/30/php-core-roundup-8/">PHP Core Roundup #8</a></h3>

<details>

<summary>Click here to expand</summary>

<ul>
<li>Fix incorrect short-circuiting in constant expressions (<a href="https://bugs.php.net/bug.php?id=10030">#10030</a>) in <a href="https://github.com/php/php-src/commit/683d81e4bd">683d81e4bd</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9769">GH-9769</a>: Misleading error message for unpacking of objects in <a href="https://github.com/php/php-src/pull/9776">GH-9776</a> by 蝦米</li>
<li>Fix <code>zend_fcc_equals()</code> with trampolines (<a href="https://bugs.php.net/bug.php?id=10012">#10012</a>) in <a href="https://github.com/php/php-src/commit/c4a0fc62a2">c4a0fc62a2</a> by George Peter Banyard 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10011">GH-10011</a> (Trampoline autoloader will get reregistered and cannot be unregistered) in <a href="https://github.com/php/php-src/pull/10033">GH-10033</a> by George Peter Banyard 💜</li>
<li>Fallback to first line of function when <code>ex-&gt;opline</code> is NULL (<a href="https://bugs.php.net/bug.php?id=10003">#10003</a>) in <a href="https://github.com/php/php-src/commit/adc23828b4">adc23828b4</a> by Arnaud Le Blanc 💜</li>
<li><code>ext/mysqli</code> tests "using password" optional in error messages in <a href="https://github.com/php/php-src/pull/10035">GH-10035</a> by Daniel Black</li>
<li>Drop superfluous check for <code>imap_stream</code> in <a href="https://github.com/php/php-src/pull/10053">GH-10053</a> by Christoph M. Becker</li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=81742">#81742</a>: open_basedir bypass in SQLite3 by using file URI in <a href="https://github.com/php/php-src/pull/10018">GH-10018</a> by Christoph M. Becker</li>
<li>Replace Azure DevOps link with GitHub Actions in <a href="https://github.com/php/php-src/commit/35a4950ffa">35a4950ffa</a> by Ben Ramsey</li>
<li>Rename <code>PHP_STREAM_TO_ZVAL</code> to <code>PHP_STREAM_FROM_ZVAL</code> (<a href="https://bugs.php.net/bug.php?id=10065">#10065</a>) in <a href="https://github.com/php/php-src/commit/11b612af6d">11b612af6d</a> by Niels</li>
<li><code>ext/mysqli</code> tests "using password" optional in error messages (part 2) in <a href="https://github.com/php/php-src/pull/10064">GH-10064</a> by Daniel Black</li>
<li><code>standard/basic_functions.c</code> remove x bit on this file (<a href="https://bugs.php.net/bug.php?id=10069">#10069</a>) in <a href="https://github.com/php/php-src/commit/faef55d638">faef55d638</a> by David CARLIER</li>
<li>Support Microsoft's "Best Fit" mappings for <code>Windows-1252</code> text encoding in <a href="https://github.com/php/php-src/commit/a1a69c3734">a1a69c3734</a> by Alex Dowad</li>
<li>Fix mysqli test wrt. MariaDB in <a href="https://github.com/php/php-src/pull/10029">GH-10029</a> by Daniel Black</li>
<li>Add <code>Randomizer::getBytesFromString()</code> method in <a href="https://github.com/php/php-src/pull/9664">GH-9664</a> by Joshua Rüsweg</li>
<li><code>intl</code> extension: <code>msgfmt_set_pattern</code> add pattern format error informations in <a href="https://github.com/php/php-src/commit/6422cf6f1a">6422cf6f1a</a> by David Carlier</li>
<li>Avoid code duplication in <code>php_ini.c</code> in <a href="https://github.com/php/php-src/pull/4512">GH-4512</a> by Elan Ruusamäe</li>
<li>Fix litespeed SAPI build warnings in <a href="https://github.com/php/php-src/pull/10068">GH-10068</a> by David Carlier</li>
<li>Fix compilation on RHEL 7 ppc64le (gcc 4.8) in <a href="https://github.com/php/php-src/pull/10078">GH-10078</a> by Mattias Ellert</li>
<li>Use fast text conversion filters for <code>mb_strpos</code>, <code>mb_stripos</code>, <code>mb_substr</code>, etc in <a href="https://github.com/php/php-src/commit/0c0774f5b4">0c0774f5b4</a> by Alex Dowad</li>
<li>Optimize SJIS decoder for speed in <a href="https://github.com/php/php-src/commit/b3d197d688">b3d197d688</a> by Alex Dowad</li>
<li>Move MacJapanese implementation into <code>mbfilter_sjis.c</code> in <a href="https://github.com/php/php-src/commit/4072a76e3f">4072a76e3f</a> by Alex Dowad</li>
<li>Optimize MacJapanese decoder for speed in <a href="https://github.com/php/php-src/commit/005e49e552">005e49e552</a> by Alex Dowad</li>
<li>Move mobile variants of SJIS into <code>mbfilter_sjis.c</code> in <a href="https://github.com/php/php-src/commit/4ebfddfad4">4ebfddfad4</a> by Alex Dowad</li>
<li>Optimize <code>SJIS-Mobile#DOCOMO</code> decoder for speed in <a href="https://github.com/php/php-src/commit/43cdfa3190">43cdfa3190</a> by Alex Dowad</li>
<li>Optimize <code>SJIS-Mobile#KDDI</code> decoder for speed in <a href="https://github.com/php/php-src/commit/6bf0c44f48">6bf0c44f48</a> by Alex Dowad</li>
<li>Optimize <code>SJIS-Mobile#SOFTBANK</code> decoder for speed in <a href="https://github.com/php/php-src/commit/e36c600a31">e36c600a31</a> by Alex Dowad</li>
<li>Add CLEAN section to some IO tests (<a href="https://bugs.php.net/bug.php?id=10081">#10081</a>) in <a href="https://github.com/php/php-src/commit/3be2b0d0d8">3be2b0d0d8</a> by George Peter Banyard 💜</li>
<li>Fix borked Windows tests after <a href="https://github.com/php/php-src/commit/3be2b0d0d83702db409bfcc3fbb4a176d565932d">3be2b0d0</a> in <a href="https://github.com/php/php-src/commit/fa3bbf078a">fa3bbf078a</a> by George Peter Banyard 💜</li>
<li><code>intl</code> extension, follow up on <a href="https://bugs.php.net/bug.php?id=10006">#10006</a> for numfmt_set_pattern in <a href="https://github.com/php/php-src/pull/10073">GH-10073</a> by David Carlier</li>
<li>Change if (stack) check to an assertion (<a href="https://bugs.php.net/bug.php?id=10090">#10090</a>) in <a href="https://github.com/php/php-src/commit/3ab18d4d14">3ab18d4d14</a> by Niels</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9949">GH-9949</a>: Partial content on incomplete POST request in <a href="https://github.com/php/php-src/pull/10059">GH-10059</a> by Christoph M. Becker</li>
<li>Fix Windows <code>shmget()</code> wrt. <code>IPC_PRIVATE</code> in <a href="https://github.com/php/php-src/pull/9946">GH-9946</a> by Tyson Andre</li>
<li><code>shmget()</code> with IPC_CREAT must not create 0 size SHM in <a href="https://github.com/php/php-src/commit/4631e9de2b">4631e9de2b</a> by Christoph M. Becker</li>
<li>Add a new <code>imap_is_open()</code> function to check that a connection object is still valid in <a href="https://github.com/php/php-src/commit/52a891aeaa">52a891aeaa</a> by George Peter Banyard 💜</li>
<li>Add <code>Randomizer::nextFloat()</code> and <code>Randomizer::getFloat()</code> in <a href="https://github.com/php/php-src/pull/9679">GH-9679</a> by Tim Düsterhus</li>
<li>Implement <code>mb_substr_count</code> using fast text conversion filters in <a href="https://github.com/php/php-src/commit/b9cd1cdb4f">b9cd1cdb4f</a> by Alex Dowad</li>
<li>Replace another root XML element format to the "canonical" one in <a href="https://github.com/php/php-src/commit/60cf9fbee0">60cf9fbee0</a> by Máté Kocsis 💜</li>
<li>Remove the superfluous closing parentheses from class synopsis page includes in <a href="https://github.com/php/php-src/commit/b4df038cee">b4df038cee</a> by Máté Kocsis 💜</li>
<li>Always include the constructor on the class manual pages in <a href="https://github.com/php/php-src/commit/0fc60fab72">0fc60fab72</a> by Máté Kocsis 💜</li>
<li>Backport methodsynopsis role attributes changes from master in <a href="https://github.com/php/php-src/commit/6aa5e58414">6aa5e58414</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10112">GH-10112</a>: <code>LDAP\Connection::__construct()</code> refers to <code>ldap_create()</code> in <a href="https://github.com/php/php-src/pull/10115">GH-10115</a> by Christoph M. Becker</li>
<li>Only include the default constructor for non-abstract class synopses in <a href="https://github.com/php/php-src/commit/d832125b8e">d832125b8e</a> by Máté Kocsis 💜</li>
<li>Limit stack size in <a href="https://github.com/php/php-src/pull/9104">GH-9104</a> by Arnaud Le Blanc 💜</li>
<li>Optimize JMP[N]Z_EX to BOOL instead of QM_ASSIGN (<a href="https://bugs.php.net/bug.php?id=10108">#10108</a>) in <a href="https://github.com/php/php-src/commit/6d9d2eb355">6d9d2eb355</a> by Ilija Tovilo 💜</li>
<li>Remove unnecessary check of p in <code>phpdbg_trim</code> (<a href="https://bugs.php.net/bug.php?id=10122">#10122</a>) in <a href="https://github.com/php/php-src/commit/e288438373">e288438373</a> by Niels</li>
<li>Speed boost for <code>mb_stripos</code> (when not using UTF-8) in <a href="https://github.com/php/php-src/commit/744ca16e73">744ca16e73</a> by Alex Dowad</li>
<li><code>mb_str{i,}pos</code> does not match illegal byte sequences against occurrences of <code>mb_substitute_char</code> in <a href="https://github.com/php/php-src/pull/9613">GH-9613</a> by Alex Dowad</li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=81740">#81740</a>: <code>PDO::quote()</code> may return unquoted string in <a href="https://github.com/php/php-src/commit/921b6813da">921b6813da</a> by Christoph M. Becker</li>
<li>Make build work with newer OpenSSL in <a href="https://github.com/php/php-src/commit/5f90134bb6">5f90134bb6</a> by Stanislav Malyshev</li>
<li>Improve fix for bug <a href="https://bugs.php.net/bug.php?id=81740">#81740</a> in <a href="https://github.com/php/php-src/commit/a6a80eefe0">a6a80eefe0</a> by Stanislav Malyshev</li>
<li>Fix memory leak in <a href="https://github.com/php/php-src/commit/683285165e">683285165e</a> by Dmitry Stogov</li>
<li><code>mbstring</code>: Do not stop when mbstring test failed in <a href="https://github.com/php/php-src/commit/e0e587cdb8">e0e587cdb8</a> by Yuya Hamada</li>
<li>Skip newly added test on 32bit platforms in <a href="https://github.com/php/php-src/commit/cf5dac07d2">cf5dac07d2</a> by Christoph M. Becker</li>
<li>Force extension loading for new test in <a href="https://github.com/php/php-src/commit/da5cbca23e">da5cbca23e</a> by Christoph M. Becker</li>
<li>Skip tests under MSAN in <a href="https://github.com/php/php-src/commit/cf77762970">cf77762970</a> by Arnaud Le Blanc 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9891">GH-9891</a>: DateTime modify with unixtimestamp (@) must work like setTimestamp in <a href="https://github.com/php/php-src/commit/d19a70c9a0">d19a70c9a0</a> by Derick Rethans 💜</li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=10133">#10133</a> set variables_order en ensure <code>$ENV</code> is set in <a href="https://github.com/php/php-src/commit/bfa56cf62b">bfa56cf62b</a> by Remi Collet</li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=77106">#77106</a>: Missing separator in FPM FastCGI errors in <a href="https://github.com/php/php-src/commit/891b58d503">891b58d503</a> by Jakub Zelenka 💜</li>
<li><code>ext/opcache/jit/zend_jit</code>: fix inverted bailout value in <code>zend_runtime_jit()</code> (<a href="https://bugs.php.net/bug.php?id=10144">#10144</a>) in <a href="https://github.com/php/php-src/commit/d3a6eedf4a">d3a6eedf4a</a> by Max Kellermann</li>
<li>Cleanup redundant lookups in <code>phar_object.c</code> (<a href="https://bugs.php.net/bug.php?id=10150">#10150</a>) in <a href="https://github.com/php/php-src/commit/7b2c3c11b2">7b2c3c11b2</a> by Niels</li>
<li>Initialize <code>ping_auto_globals_mask</code> to prevent undefined behaviour in <a href="https://github.com/php/php-src/pull/10121">GH-10121</a> by Niels Dossche</li>
<li>Remove <code>_zend_ast_decl-&gt;lex_pos</code> (<a href="https://bugs.php.net/bug.php?id=10046">#10046</a>) in <a href="https://github.com/php/php-src/commit/23fe58c3a8">23fe58c3a8</a> by Niels</li>
<li>cli server addressing few todos in <a href="https://github.com/php/php-src/pull/10124">GH-10124</a> by David Carlier</li>
<li>sockets adding <code>TCP_QUICKACK</code> constant in <a href="https://github.com/php/php-src/pull/10145">GH-10145</a> by David Carlier</li>
<li>Add a regression test for <code>auto_globals_jit=0</code> with preloading on in <a href="https://github.com/php/php-src/commit/bbad29b9c1">bbad29b9c1</a> by Niels Dossche</li>
<li>Fix undefined behaviour in <code>phpdbg_load_module_or_extension</code> in <a href="https://github.com/php/php-src/pull/10157">GH-10157</a> by Niels Dossche</li>
<li>Update test for changed behaviour of GMP constructor in <a href="https://github.com/php/php-src/commit/a24659e70c">a24659e70c</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10072">GH-10072</a>: PHP crashes when execute_ex is overridden and a __call trampoline is used from internal code in <a href="https://github.com/php/php-src/commit/233ffccc35">233ffccc35</a> by Derick Rethans 💜</li>
<li>Make sure to disable JIT when overriding <code>execute_ex</code> in <a href="https://github.com/php/php-src/commit/b489e0f2b8">b489e0f2b8</a> by Derick Rethans 💜</li>
<li>Add secondary test that registers a trampoline as a shutdown function in <a href="https://github.com/php/php-src/commit/44add3c791">44add3c791</a> by George Peter Banyard 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9981">GH-9981</a>: FPM does not reset <code>fastcgi.error_header</code> in <a href="https://github.com/php/php-src/commit/a3891d9d1a">a3891d9d1a</a> by Jakub Zelenka 💜</li>
<li>Fix memory leak because of incorrect optimization in <a href="https://github.com/php/php-src/commit/0464524292">0464524292</a> by Dmitry Stogov</li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=68591">#68591</a>: Configuration test does not perform UID lookups in <a href="https://github.com/php/php-src/pull/10165">GH-10165</a> by Jakub Zelenka 💜</li>
<li><code>ext/opcache/jit</code>: handle <code>zend_jit_find_trace()</code> failures in <a href="https://github.com/php/php-src/commit/b26b758952">b26b758952</a> by Max Kellermann</li>
<li>Use proper <code>int|float</code> union type instead of <code>numeric</code> (<a href="https://bugs.php.net/bug.php?id=10162">#10162</a>) in <a href="https://github.com/php/php-src/commit/4cee2c0127">4cee2c0127</a> by George Peter Banyard 💜</li>
<li>Added missed return in <a href="https://github.com/php/php-src/commit/ca5f668f7c">ca5f668f7c</a> by Dmitry Stogov</li>
<li><code>ext/opcache/jit/zend_jit_trace</code>: add missing lock for <code>EXIT_INVALIDATE</code> in <a href="https://github.com/php/php-src/commit/e217138b40">e217138b40</a> by Max Kellermann</li>
<li>Allow <code>h</code> and <code>k</code> flags to be combined for <code>mb_convert_kana</code> in <a href="https://github.com/php/php-src/pull/10174">GH-10174</a> by Alex Dowad</li>
<li>Register parameter attributes via stub in <code>ext/zend_test</code> (<a href="https://bugs.php.net/bug.php?id=10183">#10183</a>) in <a href="https://github.com/php/php-src/commit/3e48e52d93">3e48e52d93</a> by Tim Düsterhus</li>
<li>Fix null pointer dereference of param in <a href="https://github.com/php/php-src/commit/3a44c78f14">3a44c78f14</a> by Niels Dossche</li>
<li>Improve <code>mb_detect_encoding</code>'s recognition of Turkish text in <a href="https://github.com/php/php-src/commit/f40c3fca88">f40c3fca88</a> by Alex Dowad</li>
<li>Fix memory leak in <code>posix_ttyname()</code> in <a href="https://github.com/php/php-src/pull/10190">GH-10190</a> by George Peter Banyard 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10187">GH-10187</a>: Segfault in stripslashes() with arm64 in <a href="https://github.com/php/php-src/pull/10188">GH-10188</a> by Niels Dossche</li>
<li>Fix <code>variation5-win32(-mb).phpt</code> wrt. parallel test execution in <a href="https://github.com/php/php-src/pull/10189">GH-10189</a> by Christoph M. Becker</li>
<li>Better document constructors in <a href="https://github.com/php/php-src/commit/eebf3bc0ba">eebf3bc0ba</a> by Máté Kocsis 💜</li>
<li>Do not display non-existent constructors in <a href="https://github.com/php/php-src/commit/38e138798d">38e138798d</a> by Máté Kocsis 💜</li>
<li>Do not list private constructors as inherited in <a href="https://github.com/php/php-src/commit/7b08fe9f2d">7b08fe9f2d</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10200">GH-10200</a>: zif_get_object_vars: Assertion <code>!(((__ht)-&gt;u.flags &amp; (1&lt;&lt;2)) != 0)</code> failed in <a href="https://github.com/php/php-src/pull/10209">GH-10209</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10200">GH-10200</a>: zif_get_object_vars: Assertion <code>!(((__ht)-&gt;u.flags &amp; (1&lt;&lt;2)) != 0)</code> failed in <a href="https://github.com/php/php-src/pull/10209">GH-10209</a> by Niels Dossche</li>
<li><code>ext/opcache/zend_shared_alloc</code>: add assertions on "locked" flag in <a href="https://github.com/php/php-src/commit/e1a25ff2ed">e1a25ff2ed</a> by Max Kellermann</li>
<li><code>ext/opcache/zend_shared_alloc</code>: change "locked" check to assertion in <a href="https://github.com/php/php-src/commit/10d43c40dd">10d43c40dd</a> by Max Kellermann</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10202">GH-10202</a>: <code>posix_getgr(gid|nam)_basic.phpt</code> fail in <a href="https://github.com/php/php-src/commit/d5f0362e59">d5f0362e59</a> by Niels Dossche</li>
<li>Implement <code>mb_output_handler</code> using fast text conversion filters in <a href="https://github.com/php/php-src/commit/a9a672048b">a9a672048b</a> by Alex Dowad</li>
<li>Implement <code>mb_str_split</code> using fast text conversion filters in <a href="https://github.com/php/php-src/commit/88c99afdac">88c99afdac</a> by Alex Dowad</li>
<li>Mark default interned strings as valid UTF-8 where appropriate in <a href="https://github.com/php/php-src/commit/e2654a532a">e2654a532a</a> by Alex Dowad</li>
<li>Implement <code>php_mb_zend_encoding_converter</code> using fast text conversion filters in <a href="https://github.com/php/php-src/commit/953864661a">953864661a</a> by Alex Dowad</li>
<li>Implement <code>mb_detect_encoding</code> using fast text conversion filters in <a href="https://github.com/php/php-src/commit/0e7160b836">0e7160b836</a> by Alex Dowad</li>
<li>Use <code>smart_str</code> in <code>mb_http_input</code> rather than <code>mbfl_memory_device</code> in <a href="https://github.com/php/php-src/commit/3b5072f6f6">3b5072f6f6</a> by Alex Dowad</li>
<li>Revert "Make build work with newer OpenSSL" in <a href="https://github.com/php/php-src/commit/255e08ac56">255e08ac56</a> by Gabriel Caruso</li>
<li><code>Zend/zend_ini_scanner</code>: <code>zend_ini_scanner_get_filename()</code> returns const string in <a href="https://github.com/php/php-src/commit/5e9b335e24">5e9b335e24</a> by Max Kellermann</li>
<li><code>Zend/zend_ini_scanner</code>: parse const strings in <a href="https://github.com/php/php-src/commit/2d662f325d">2d662f325d</a> by Max Kellermann</li>
<li><code>main/SAPI</code>: make "ini_entries" a const string in <a href="https://github.com/php/php-src/commit/d53ad4b566">d53ad4b566</a> by Max Kellermann</li>
<li><code>Zend/zend_operators</code>: make several pointers const in <a href="https://github.com/php/php-src/commit/a8eb399ca3">a8eb399ca3</a> by Max Kellermann</li>
<li><code>Zend/zend_API</code>: make several pointers const in <a href="https://github.com/php/php-src/commit/f5149535e8">f5149535e8</a> by Max Kellermann</li>
<li><code>Zend/zend_smart_str</code>: make several pointers const in <a href="https://github.com/php/php-src/commit/00a918f0cc">00a918f0cc</a> by Max Kellermann</li>
<li><code>Zend/zend_execute</code>: make several pointers const in <a href="https://github.com/php/php-src/commit/0caef56ed6">0caef56ed6</a> by Max Kellermann</li>
<li><code>Zend/zend_object_handlers</code>: make several pointers const in <a href="https://github.com/php/php-src/commit/d48c5372ab">d48c5372ab</a> by Max Kellermann</li>
<li><code>Zend/Optimizer/zend_inference</code>: make several pointers const in <a href="https://github.com/php/php-src/commit/efd5ecb0f2">efd5ecb0f2</a> by Max Kellermann</li>
<li><code>Zend/Optimizer/zend_ssa</code>: make pointer const in <a href="https://github.com/php/php-src/commit/5ea9a7e219">5ea9a7e219</a> by Max Kellermann</li>
<li>Enforce literals in certain macros (<a href="https://bugs.php.net/bug.php?id=10111">#10111</a>) in <a href="https://github.com/php/php-src/commit/0f4d37d040">0f4d37d040</a> by Levi Morrison</li>
<li>Simplify code for conversion of UHC to Unicode in <a href="https://github.com/php/php-src/commit/ef114f94b9">ef114f94b9</a> by Alex Dowad</li>
<li>Combine uhc1_ucs_table and <code>uhc2_ucs_table</code> for UHC/EUC-KR/ISO-2022-KR conversion in <a href="https://github.com/php/php-src/commit/74319de2f9">74319de2f9</a> by Alex Dowad</li>
<li>Remove redundant bounds check for lookup in BIG5 conversion table in <a href="https://github.com/php/php-src/commit/b15d0a9ba5">b15d0a9ba5</a> by Alex Dowad</li>
<li>Manually handle int ZPP for <code>posix_isatty()</code>/<code>posix_ttyname()</code> in <a href="https://github.com/php/php-src/commit/54767b1047">54767b1047</a> by George Peter Banyard 💜</li>
<li>Check that int file descriptor is valid for <code>posix_(isatty|ttyname)</code> in <a href="https://github.com/php/php-src/commit/31e7d6ef05">31e7d6ef05</a> by George Peter Banyard 💜</li>
<li>Optimize conversion of CP936 to Unicode in <a href="https://github.com/php/php-src/commit/703725e43b">703725e43b</a> by Alex Dowad</li>
<li>Optimize conversion of GB18030 to Unicode in <a href="https://github.com/php/php-src/commit/ffbddc4848">ffbddc4848</a> by Alex Dowad</li>
<li>Optimize out bounds check in UHC decoder in <a href="https://github.com/php/php-src/commit/a76658b329">a76658b329</a> by Alex Dowad</li>
<li>Optimize another check out of hot path for UHC decoding in <a href="https://github.com/php/php-src/commit/e837a8800b">e837a8800b</a> by Alex Dowad</li>
<li>Optimize out another bounds check in BIG5 decoder in <a href="https://github.com/php/php-src/commit/9c283850fb">9c283850fb</a> by Alex Dowad</li>
<li>Optimize out checks in hot path for SJIS decoding in <a href="https://github.com/php/php-src/commit/d75c78b0c8">d75c78b0c8</a> by Alex Dowad</li>
<li>Optimize out more checks from hot path for BIG5 decoding in <a href="https://github.com/php/php-src/commit/204694cc71">204694cc71</a> by Alex Dowad</li>
<li>Correct entry for <code>0x80</code>,<code>0xFD-FF</code> in SJIS multi-byte character length table in <a href="https://github.com/php/php-src/commit/d104481af8">d104481af8</a> by Alex Dowad</li>
<li>Add missing <code>EXTENSIONS</code> section to test file gh10200 in <a href="https://github.com/php/php-src/commit/de633c31dd">de633c31dd</a> by George Peter Banyard 💜</li>
<li>Close <a href="https://github.com/php/php-src/issues/10217">GH-10217</a>: Use strlen() for determining the class_name length in <a href="https://github.com/php/php-src/pull/10231">GH-10231</a> by Dennis Buteyn</li>
<li>chore: remove semicolon left over in <a href="https://github.com/php/php-src/pull/10236">GH-10236</a> by Marcos Marcolin</li>
<li>Use different <code>mblen_table</code> for different SJIS variants in <a href="https://github.com/php/php-src/commit/3152b7b26f">3152b7b26f</a> by Alex Dowad</li>
<li>posix adding <code>posix_pathconf</code> in <a href="https://github.com/php/php-src/pull/10238">GH-10238</a> by David Carlier</li>
<li>follow-up on <a href="https://github.com/php/php-src/issues/10238">GH-10238</a>. (<a href="https://bugs.php.net/bug.php?id=10243">#10243</a>) in <a href="https://github.com/php/php-src/commit/84af629e7e">84af629e7e</a> by David CARLIER</li>
<li>Move test for <a href="https://github.com/php/php-src/issues/10200">GH-10200</a> to the simplexml extension test directory in <a href="https://github.com/php/php-src/pull/10252">GH-10252</a> by Niels Dossche</li>
<li>random: Fix check before closing <code>random_fd</code> (<a href="https://bugs.php.net/bug.php?id=10247">#10247</a>) in <a href="https://github.com/php/php-src/commit/32f503e4e3">32f503e4e3</a> by Tim Düsterhus</li>
<li>Remove unnecessary NULL-checks on ctx (<a href="https://bugs.php.net/bug.php?id=10256">#10256</a>) in <a href="https://github.com/php/php-src/commit/58d741c042">58d741c042</a> by Niels</li>
<li>Remove 'fast path' using mblen_table from <code>mb_get_strlen</code> (it's actually a slow path) in <a href="https://github.com/php/php-src/commit/cca4ca6d3d">cca4ca6d3d</a> by Alex Dowad</li>
<li>Add unit tests for <code>mb_str_split</code>/<code>mb_substr</code> on MacJapanese encoding in <a href="https://github.com/php/php-src/commit/d8b5b9fa55">d8b5b9fa55</a> by Alex Dowad</li>
<li>Optimize branch structure of UTF-8 decoder routine in <a href="https://github.com/php/php-src/commit/092ad3e462">092ad3e462</a> by Alex Dowad</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9710">GH-9710</a>: phpdbg memory leaks by option "-h" in <a href="https://github.com/php/php-src/pull/10237">GH-10237</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10251">GH-10251</a>: Assertion <code>(flag &amp; (1&lt;&lt;3)) == 0</code> failed in <a href="https://github.com/php/php-src/pull/10254">GH-10254</a> by Niels Dossche</li>
<li>Fix recently introduced <code>gh10251.phpt</code> in <a href="https://github.com/php/php-src/commit/6faeb9571d">6faeb9571d</a> by Christoph M. Becker</li>
<li>Add fast SSE2-based implementation of <code>mb_strlen</code> for known-valid UTF-8 strings in <a href="https://github.com/php/php-src/commit/b4cbaabd9b">b4cbaabd9b</a> by Alex Dowad</li>
<li><code>ext/opcache/jit/zend_jit_trace</code>: fix memory leak in <code>_compile_root_trace()</code> (<a href="https://bugs.php.net/bug.php?id=10146">#10146</a>) in <a href="https://github.com/php/php-src/commit/bcc5d268f6">bcc5d268f6</a> by Max Kellermann</li>
<li>Fix incorrect optimization of ASSIGN_OP may lead to incorrect result (sub assign -> pre dec conversion for null values) in <a href="https://github.com/php/php-src/commit/4d4a53beee">4d4a53beee</a> by Dmitry Stogov</li>
<li>Adapt <code>ext/intl</code> tests for ICU 72.1 in <a href="https://github.com/php/php-src/commit/a9e7b90cc2">a9e7b90cc2</a> by Christoph M. Becker</li>
<li>random: <code>Randomizer::getFloat()</code>: Fix check for empty open intervals (<a href="https://bugs.php.net/bug.php?id=10185">#10185</a>) in <a href="https://github.com/php/php-src/commit/13b82eef84">13b82eef84</a> by Tim Düsterhus</li>
<li><code>posix_pathconf</code> throwing <code>ValueError</code> on empty path in <a href="https://github.com/php/php-src/commit/61cf7d49ab">61cf7d49ab</a> by David Carlier</li>
<li>Fixed <a href="https://github.com/php/php-src/issues/10218">GH-10218</a>: DateTimeZone fails to parse time zones that contain the "+" character in <a href="https://github.com/php/php-src/commit/d12ba111e0">d12ba111e0</a> by Derick Rethans 💜</li>
<li>fix: indirect_return compilation warning in <a href="https://github.com/php/php-src/pull/10274">GH-10274</a> by Kévin Dunglas</li>
<li>random: Rely on <code>free(NULL)</code> being safe for random status freeing (<a href="https://bugs.php.net/bug.php?id=10246">#10246</a>) in <a href="https://github.com/php/php-src/commit/e7c0f4e816">e7c0f4e816</a> by Tim Düsterhus</li>
<li>Mark UTF-8 strings emitted by mbstring functions as valid UTF-8 in <a href="https://github.com/php/php-src/commit/4427b2e1ab">4427b2e1ab</a> by Alex Dowad</li>
<li>Fix ASAN reported leak in FPM config test in <a href="https://github.com/php/php-src/pull/10296">GH-10296</a> by Jakub Zelenka 💜</li>
<li><code>ext/opcache</code>: C++ compatibility in <a href="https://github.com/php/php-src/commit/b47bfd698d">b47bfd698d</a> by Max Kellermann</li>
<li><code>ext/opcache/zend_shared_alloc</code>: rename _register_xlat_entry() params in <a href="https://github.com/php/php-src/commit/24b311bdd7">24b311bdd7</a> by Max Kellermann</li>
<li>Implement Unicode conditional casing rules for Greek letter sigma in <a href="https://github.com/php/php-src/pull/8096">GH-8096</a> by Alex Dowad</li>
<li>Adjust code which checks if encoding is ISO-8859-9 when converting case in <a href="https://github.com/php/php-src/commit/290efe842d">290efe842d</a> by Alex Dowad</li>
<li>Implement conditional casing for Greek letter sigma when title-casing text in <a href="https://github.com/php/php-src/commit/a90358639d">a90358639d</a> by Alex Dowad</li>
<li>Use absolute paths in OPCache tests when calling <code>opcache_compile_file()</code> in <a href="https://github.com/php/php-src/pull/10266">GH-10266</a> by Thomas Gerbet</li>
<li>unserialize: Strictly check for <code>:{</code> at object start (<a href="https://bugs.php.net/bug.php?id=10214">#10214</a>) in <a href="https://github.com/php/php-src/commit/f2e8c5da90">f2e8c5da90</a> by Tim Düsterhus</li>
<li>Stop using the deprecated <code>set-output</code> command in <code>nightly_matrix.php</code> (<a href="https://bugs.php.net/bug.php?id=10302">#10302</a>) in <a href="https://github.com/php/php-src/commit/71bdcce9f8">71bdcce9f8</a> by Tim Düsterhus</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10249">GH-10249</a>: Assertion `size >= page_size + 1 * page_size' failed in <a href="https://github.com/php/php-src/pull/10284">GH-10284</a> by Niels Dossche</li>
<li>posix adding <code>posix_fpathconf</code> in <a href="https://github.com/php/php-src/commit/55d19eee49">55d19eee49</a> by David Carlier</li>
<li>socket DF flag on UDP socket via IP_MTU_DISCOVER on Linux and IP_DONTFRAGMENT on FreeBSD for path MTU discovery purpose in <a href="https://github.com/php/php-src/commit/9198e8894b">9198e8894b</a> by David Carlier</li>
<li>Fix comment for <code>php_safe_bcmp</code> (<a href="https://bugs.php.net/bug.php?id=10306">#10306</a>) in <a href="https://github.com/php/php-src/commit/fd7214436a">fd7214436a</a> by Tim Düsterhus</li>
<li><code>ext/opcache</code>: use C11 atomics for "restart_in" (<a href="https://bugs.php.net/bug.php?id=10276">#10276</a>) in <a href="https://github.com/php/php-src/commit/061fcdb0a5">061fcdb0a5</a> by Max Kellermann</li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=67244">#67244</a>: Wrong owner:group for listening unix socket in <a href="https://github.com/php/php-src/commit/120aafcc42">120aafcc42</a> by Jakub Zelenka 💜</li>
<li>GC fiber unfinished executions in <a href="https://github.com/php/php-src/pull/9810">GH-9810</a> by Arnaud Le Blanc 💜</li>
<li>Reduce HT_MAX_SIZE to account for the max load factor of 0.5 (<a href="https://bugs.php.net/bug.php?id=10242">#10242</a>) in <a href="https://github.com/php/php-src/commit/0f7625c47c">0f7625c47c</a> by Arnaud Le Blanc 💜</li>
<li><code>build/php.m4</code>: remove test for integer types (<a href="https://bugs.php.net/bug.php?id=10304">#10304</a>) in <a href="https://github.com/php/php-src/commit/7473b86f10">7473b86f10</a> by Max Kellermann</li>
<li><code>zend_hash_check_size</code>: allow nSize &lt;= HT_MAX_SIZE (<a href="https://bugs.php.net/bug.php?id=10244">#10244</a>) in <a href="https://github.com/php/php-src/commit/2b1907786c">2b1907786c</a> by Arnaud Le Blanc 💜</li>
<li>Fix <code>run-tests.php</code> hanging when a worker process dies without notice in <a href="https://github.com/php/php-src/pull/9931">GH-9931</a> by Arnaud Le Blanc 💜</li>
<li>intl extension couple of micro optimisations for error edge cases. (<a href="https://bugs.php.net/bug.php?id=10044">#10044</a>) in <a href="https://github.com/php/php-src/commit/690db97c6d">690db97c6d</a> by David CARLIER</li>
<li>Make array_pad's $length warning less confusing (<a href="https://bugs.php.net/bug.php?id=10149">#10149</a>) in <a href="https://github.com/php/php-src/commit/6ab503814d">6ab503814d</a> by Niels</li>
<li>Fix typo in <code>HAVE_</code> macro (<a href="https://bugs.php.net/bug.php?id=10310">#10310</a>) in <a href="https://github.com/php/php-src/commit/a493da7b9d">a493da7b9d</a> by Arnaud Le Blanc 💜</li>
<li>Fix missing comment in FPM <code>www.conf</code> in <a href="https://github.com/php/php-src/commit/7d98e3e40c">7d98e3e40c</a> by Jakub Zelenka 💜</li>
<li>Remove useless check, <code>search_str</code> is always true here (<a href="https://bugs.php.net/bug.php?id=10322">#10322</a>) in <a href="https://github.com/php/php-src/commit/e951202a69">e951202a69</a> by Niels</li>
<li>Mark constant static arrays in function bodies actually as const (<a href="https://bugs.php.net/bug.php?id=10325">#10325</a>) in <a href="https://github.com/php/php-src/commit/a60c6ee0ac">a60c6ee0ac</a> by Niels Dossche</li>
<li>Fix substr_replace with slots in repl_ht being UNDEF in <a href="https://github.com/php/php-src/pull/10323">GH-10323</a> by Niels Dossche</li>
<li>Fix missing check for <code>xmlTextWriterEndElement</code> in <a href="https://github.com/php/php-src/pull/10324">GH-10324</a> by Niels Dossche</li>
<li>Fix wrong flags check for compression method in <code>phar_object.c</code> in <a href="https://github.com/php/php-src/pull/10328">GH-10328</a> by Niels Dossche</li>
<li>Move <code>http_build_query()</code> tests to the HTTP test folder in <a href="https://github.com/php/php-src/commit/c177ea91d4">c177ea91d4</a> by George Peter Banyard 💜</li>
<li>Add more tests for <code>http_build_query()</code> in <a href="https://github.com/php/php-src/commit/ec7c7a7550">ec7c7a7550</a> by George Peter Banyard 💜</li>
<li>Handle floats directly in <code>http_build_query()</code> in <a href="https://github.com/php/php-src/commit/7d33a30b40">7d33a30b40</a> by George Peter Banyard 💜</li>
<li>Extract scalar url encoding into its own function in <a href="https://github.com/php/php-src/commit/20a6638e22">20a6638e22</a> by George Peter Banyard 💜</li>
<li>Introduce new INI API to get <code>zend_string*</code> value for an INI setting in <a href="https://github.com/php/php-src/commit/098a43dbd0">098a43dbd0</a> by George Peter Banyard 💜</li>
<li>Use a zend_string* for <code>arg_sep</code> in <code>php_url_encode_hash_ex()</code> in <a href="https://github.com/php/php-src/commit/76eaff080a">76eaff080a</a> by George Peter Banyard 💜</li>
<li>Use <code>zend_string*</code> instead of <code>char*</code> and <code>size_t</code> pair for <code>key_prefix</code> in <a href="https://github.com/php/php-src/commit/c9b8d1bfaa">c9b8d1bfaa</a> by George Peter Banyard 💜</li>
<li>Drop <code>key_suffix</code> parameter in <code>php_url_encode_hash_ex()</code> in <a href="https://github.com/php/php-src/commit/540e5104df">540e5104df</a> by George Peter Banyard 💜</li>
<li>Update <code>UPGRADING.INTERNALS</code> with the changes made to <code>php_url_encode_hash_ex()</code> in <a href="https://github.com/php/php-src/commit/334ecbed5e">334ecbed5e</a> by George Peter Banyard 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10271">GH-10271</a>: Incorrect arithmetic calculations when using JIT in <a href="https://github.com/php/php-src/commit/42eed7bb4e">42eed7bb4e</a> by Dmitry Stogov</li>
<li>Remove dead cleanup code (<a href="https://bugs.php.net/bug.php?id=10333">#10333</a>) in <a href="https://github.com/php/php-src/commit/9006f06a84">9006f06a84</a> by Niels Dossche</li>
<li>Remove <code>main()</code> from mysqli warning (<a href="https://bugs.php.net/bug.php?id=10321">#10321</a>) in <a href="https://github.com/php/php-src/commit/38dfd20526">38dfd20526</a> by Kamil Tekiela</li>
<li><code>MYSQL_ATTR_USE_BUFFERED_QUERY</code> is a bool attribute (<a href="https://bugs.php.net/bug.php?id=10320">#10320</a>) in <a href="https://github.com/php/php-src/commit/da550e7762">da550e7762</a> by Kamil Tekiela</li>
<li>Add some const qualifiers and better return types to <code>zend_object_handlers.h</code> (<a href="https://bugs.php.net/bug.php?id=10330">#10330</a>) in <a href="https://github.com/php/php-src/commit/6556601b45">6556601b45</a> by George Peter Banyard 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9675">GH-9675</a>: Re-adjust run_time_cache init for internal enum methods in <a href="https://github.com/php/php-src/pull/10143">GH-10143</a> by Petar Obradović</li>
<li>Fix incorrect comparison in block optimization pass in <a href="https://github.com/php/php-src/commit/dfe9c2af19">dfe9c2af19</a> by Niels Dossche</li>
<li>Add accelerated (SIMD-based) implementation of mb_check_encoding for UTF-8 in <a href="https://github.com/php/php-src/commit/3ae4779305">3ae4779305</a> by Alex Dowad</li>
<li>Tweaks for accelerated implementation of mb_strlen for UTF-8 in <a href="https://github.com/php/php-src/commit/b189aaacc2">b189aaacc2</a> by Alex Dowad</li>
<li>Add regression test for <a href="https://github.com/php/php-src/commit/e560592a61c01b8a5df5256ac18361803fae252e">e560592a</a> in <a href="https://github.com/php/php-src/commit/a6a20c9e17">a6a20c9e17</a> by Bob Weinand</li>
<li>Remove <code>mysqlnd_shutdown()</code> (<a href="https://bugs.php.net/bug.php?id=10355">#10355</a>) in <a href="https://github.com/php/php-src/commit/0e5128c256">0e5128c256</a> by Kamil Tekiela</li>
<li>Fix phpdbg segmentation fault in case of malformed input in <a href="https://github.com/php/php-src/pull/10353">GH-10353</a> by Niels Dossche</li>
<li>Handle exceptions from <code>__toString</code> in XXH3's initialization in <a href="https://github.com/php/php-src/pull/10352">GH-10352</a> by Niels Dossche</li>
<li>Remove useless <code>php_stream_tell()</code> call in <a href="https://github.com/php/php-src/pull/10365">GH-10365</a> by Niels Dossche</li>
<li>Fix UNEXPECTED() paren mistakes in <a href="https://github.com/php/php-src/pull/10364">GH-10364</a> by Niels Dossche</li>
<li>Remove <code>pcre_get_compiled_regex_ex()</code> (<a href="https://bugs.php.net/bug.php?id=10354">#10354</a>) in <a href="https://github.com/php/php-src/commit/fa1e3f9798">fa1e3f9798</a> by Kamil Tekiela</li>
<li>Simplify check (in <code>mb_fast_check_utf8</code>) for seeing if 16 bytes are all ASCII characters in <a href="https://github.com/php/php-src/commit/d58f70455b">d58f70455b</a> by Alex Dowad</li>
<li>Simplify checks (in <code>mb_fast_check_utf8</code>) for overlong code units and invalid codepoint values in <a href="https://github.com/php/php-src/commit/8902e47f3d">8902e47f3d</a> by Alex Dowad</li>
<li>Fix incorrect check condition in <code>ZEND_YIELD</code> in <a href="https://github.com/php/php-src/pull/10332">GH-10332</a> by Niels Dossche</li>
<li>Remove <code>php_pdo_mysql_sqlstate.h</code> in <a href="https://github.com/php/php-src/pull/10363">GH-10363</a> by Marcos Marcolin</li>
<li>Fix incorrect UNEXPECTED paren placement in <code>zend_gc.c</code> in <a href="https://github.com/php/php-src/pull/10371">GH-10371</a> by Niels Dossche</li>
<li>Fix incorrect compilation of FE_FETCH with predicted empty array in <a href="https://github.com/php/php-src/commit/7d68f9128e">7d68f9128e</a> by Dmitry Stogov</li>
<li>mb_detect_encoding is more accurate on strings with UTF-8/16 BOM in <a href="https://github.com/php/php-src/commit/cb840799b4">cb840799b4</a> by Alex Dowad</li>
<li>Customize the link of some constants in the manual in <a href="https://github.com/php/php-src/commit/148ac364e9">148ac364e9</a> by Máté Kocsis 💜</li>
<li>Fix bug 69168: DomNode::getNodePath() returns invalid path in <a href="https://github.com/php/php-src/pull/10318">GH-10318</a> by Niels Dossche</li>
<li>Implement GMP::__construct() in <a href="https://github.com/php/php-src/pull/10225">GH-10225</a> by Niels Dossche</li>
<li>Fix incorrect trace type inference when function SSA is not available in <a href="https://github.com/php/php-src/commit/298aa74b16">298aa74b16</a> by Dmitry Stogov</li>
<li>Revert "<code>ext/opcache</code>: use C11 atomics for "restart_in" (<a href="https://bugs.php.net/bug.php?id=10276">#10276</a>)" (<a href="https://bugs.php.net/bug.php?id=10339">#10339</a>) in <a href="https://github.com/php/php-src/commit/bff7a56d00">bff7a56d00</a> by Max Kellermann</li>
<li>Sync with timelib 2021.19 in <a href="https://github.com/php/php-src/commit/ce877da23b">ce877da23b</a>, <a href="https://github.com/php/php-src/commit/4d8f981818">4d8f981818</a>, and <a href="https://github.com/php/php-src/commit/0df92d218e">0df92d218e</a> by Derick Rethans 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8086">GH-8086</a>: Introduce mail.mixed_lf_and_crlf INI in <a href="https://github.com/php/php-src/commit/cc931af35d">cc931af35d</a> by Jakub Zelenka 💜</li>
<li>Delay debug JIT op_array dump until actual JIT-ing in <a href="https://github.com/php/php-src/commit/6676f5d3cb">6676f5d3cb</a> by Dmitry Stogov</li>
<li>Tweak SSE2-accelerated strtoupper() and strtolower() for speed in <a href="https://github.com/php/php-src/commit/0b7986f976">0b7986f976</a> by Alex Dowad</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10248">GH-10248</a>: Assertion <code>!(zval_get_type(&amp;(*(property))) == 10)</code> failed in <a href="https://github.com/php/php-src/commit/0801c567dc">0801c567dc</a> by Niels Dossche</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10292">GH-10292</a> make the default value of the first parame of srand() and mt_srand() nullable (<a href="https://bugs.php.net/bug.php?id=10380">#10380</a>) in <a href="https://github.com/php/php-src/commit/1f05d6ef80">1f05d6ef80</a> by Máté Kocsis 💜</li>
<li>Use fast encoding conversion filters in mb_send_mail in <a href="https://github.com/php/php-src/commit/8a73a68190">8a73a68190</a> by Alex Dowad</li>
<li>Use smart_str as dynamic buffer for extra headers in mb_send_mail in <a href="https://github.com/php/php-src/commit/23dab38fe9">23dab38fe9</a> by Alex Dowad</li>
<li>Remove duplicated length check in exif and remove always false condition from exif in <a href="https://github.com/php/php-src/commit/f4dd35ea53">f4dd35ea53</a> by Niels Dossche</li>
<li>mb_scrub does not attempt to scrub known-valid UTF-8 strings in <a href="https://github.com/php/php-src/commit/6f53dbb83e">6f53dbb83e</a> by Alex Dowad</li>
<li>Use RETURN_STR_COPY in mb_output_handler in <a href="https://github.com/php/php-src/commit/4f36623c1e">4f36623c1e</a> by Alex Dowad</li>
<li>Honor constant expressions instead of just taking the last constant encountered in stubs in <a href="https://github.com/php/php-src/commit/1fbe855971">1fbe855971</a> by Bob Weinand</li>
<li>Add a couple clarifying comments in <a href="https://github.com/php/php-src/commit/cf1d21edbd">cf1d21edbd</a> by Bob Weinand</li>
<li>sockets add AF_DIVERT constant in <a href="https://github.com/php/php-src/commit/f8f7fd2db1">f8f7fd2db1</a> by David Carlier</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8329">GH-8329</a> Print true/false instead of bool in error and debug messages in <a href="https://github.com/php/php-src/pull/8385">GH-8385</a> by Máté Kocsis 💜</li>
<li>strtok warns in case the string to split was not set in <a href="https://github.com/php/php-src/commit/256a34ed15">256a34ed15</a> by David Carlier</li>
<li>exif add simple assert into jpeg header parsing as safety net more in a context of a possible text change. follow-up on <a href="https://github.com/php/php-src/issues/10402">GH-10402</a> in <a href="https://github.com/php/php-src/commit/1ab5d35bde">1ab5d35bde</a> by David Carlier</li>
<li>Remove unbalanced parentheses in an error message (<a href="https://bugs.php.net/bug.php?id=10420">#10420</a>) in <a href="https://github.com/php/php-src/commit/670f1aa477">670f1aa477</a> by Kamil Tekiela</li>
<li>Make <code>stripslashes()</code> only dependent on SSE2 configuration. (<a href="https://bugs.php.net/bug.php?id=10408">#10408</a>) in <a href="https://github.com/php/php-src/commit/2b55dee4dc">2b55dee4dc</a> by Niels Dossche</li>
<li>AC_PROG_CC_C99 is obsolete with <code>autoconf</code> >= 2.70 (<a href="https://bugs.php.net/bug.php?id=10383">#10383</a>) in <a href="https://github.com/php/php-src/commit/bf5fdbd3a8">bf5fdbd3a8</a> by Peter Kokot</li>
<li>session: Remove <code>PS_EXTRA_RAND_BYTES</code> (<a href="https://bugs.php.net/bug.php?id=10394">#10394</a>) in <a href="https://github.com/php/php-src/commit/d9c2cf7e3d">d9c2cf7e3d</a> by Tim Düsterhus</li>
<li>Mark globals as const (<a href="https://bugs.php.net/bug.php?id=10303">#10303</a>) in <a href="https://github.com/php/php-src/commit/d3facbe283">d3facbe283</a> by Max Kellermann</li>
<li>Fix duplicated <code>FILE</code> section in test <code>bug80747.phpt</code> in <a href="https://github.com/php/php-src/commit/974dba3b80">974dba3b80</a> by Niels Dossche</li>
<li>random: Remove check for <code>HAVE_DEV_URANDOM</code> in <a href="https://github.com/php/php-src/commit/2b395f7b6e">2b395f7b6e</a> by Tim Düsterhus</li>
<li>Remove now-unused check for <code>/dev/urandom</code> from <code>Zend/Zend.m4</code> in <a href="https://github.com/php/php-src/commit/a408781ab4">a408781ab4</a> by Tim Düsterhus</li>
<li>random: Do not trust <code>arc4random_buf()</code> on glibc (<a href="https://bugs.php.net/bug.php?id=10390">#10390</a>) in <a href="https://github.com/php/php-src/commit/57b362b7a9">57b362b7a9</a> by Tim Düsterhus</li>
<li>random: Simplify control flow for handling /dev/urandom errors (<a href="https://bugs.php.net/bug.php?id=10392">#10392</a>) in <a href="https://github.com/php/php-src/commit/a7998fda8d">a7998fda8d</a> by Tim Düsterhus</li>
<li>password: Use <code>php_random_bytes_throw</code> in <code>php_password_make_salt</code> (<a href="https://bugs.php.net/bug.php?id=10393">#10393</a>) in <a href="https://github.com/php/php-src/commit/c59e0750af">c59e0750af</a> by Tim Düsterhus</li>
<li>random netbsd 10 update finally supporting getrandom syscall properly in <a href="https://github.com/php/php-src/commit/948cb4702c">948cb4702c</a> by David Carlier</li>
<li>posix detects <code>posix_pathconf</code> api in <a href="https://github.com/php/php-src/pull/10350">GH-10350</a> by David Carlier</li>
<li>random disable <code>arc4random_buf</code> for glibc, merge mistake in <a href="https://github.com/php/php-src/commit/2740920a39">2740920a39</a> by David Carlier</li>
<li>Fix incorrect bitshifting and masking in ffi bitfield (<a href="https://bugs.php.net/bug.php?id=10403">#10403</a>) in <a href="https://github.com/php/php-src/commit/560ca9c7ae">560ca9c7ae</a> by Niels Dossche</li>
<li>Fix incorrect check condition in type inference (<a href="https://bugs.php.net/bug.php?id=10425">#10425</a>) in <a href="https://github.com/php/php-src/commit/2787e3cd65">2787e3cd65</a> by Niels Dossche</li>
<li>Fix test failures when PHP is compiled without ZEND_CHECK_STACK_LIMIT (e.g. 32-bit CLANG build with address sanitizer) in <a href="https://github.com/php/php-src/commit/68381457cc">68381457cc</a> by Dmitry Stogov</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10292">GH-10292</a> 1st param of mt_srand() has UNKNOWN default on PHP &lt;8.3 in <a href="https://github.com/php/php-src/pull/10429">GH-10429</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10259">GH-10259</a> ReflectionClass::getStaticProperties doesn't need null return type (<a href="https://bugs.php.net/bug.php?id=10418">#10418</a>) in <a href="https://github.com/php/php-src/commit/016160800c">016160800c</a> by Máté Kocsis 💜</li>
<li>Fix incorrect page_size check in <a href="https://github.com/php/php-src/pull/10427">GH-10427</a> by Niels Dossche</li>
<li>Fix incorrect check in <code>cs_8559_5</code> in <code>map_from_unicode()</code> in <a href="https://github.com/php/php-src/pull/10399">GH-10399</a> by Niels Dossche</li>
<li>Fix incorrect check in <code>zend_internal_call_should_throw()</code> in <a href="https://github.com/php/php-src/pull/10417">GH-10417</a> by Niels Dossche</li>
<li>random: Reduce variable scopes in CSPRNG (<a href="https://bugs.php.net/bug.php?id=10426">#10426</a>) in <a href="https://github.com/php/php-src/commit/6c8ef1d997">6c8ef1d997</a> by Tim Düsterhus</li>
<li>Add missing type guard in <a href="https://github.com/php/php-src/commit/f6fc0fd97b">f6fc0fd97b</a> by Dmitry Stogov</li>
<li>Sync timelib to 2022.05 to address OSS Fuzzer issues in <a href="https://github.com/php/php-src/commit/639bfbc217">639bfbc217</a> by Derick Rethans 💜</li>
<li>GNU compilers remove hot attribute proposal. in <a href="https://github.com/php/php-src/pull/8922">GH-8922</a> by David CARLIER</li>
<li>zend extension build warning fix in <a href="https://github.com/php/php-src/commit/fe9b622e7a">fe9b622e7a</a> by David Carlier</li>
<li>Adjust code to finish validating remaining 0-8 bytes at end of UTF-8 string in <a href="https://github.com/php/php-src/commit/d14ed12783">d14ed12783</a> by Alex Dowad</li>
<li>Add AVX2-accelerated version of <code>mb_check_encoding</code> for UTF-8 only in <a href="https://github.com/php/php-src/commit/63c50cc87e">63c50cc87e</a> by Alex Dowad</li>
<li>Implement dynamic class const fetch in <a href="https://github.com/php/php-src/pull/9793">GH-9793</a> by Ilija Tovilo 💜</li>
<li>Add specialized UTF-8 validation function for hosts with no SSE2/AVX2 support in <a href="https://github.com/php/php-src/commit/8f318c383d">8f318c383d</a> by Alex Dowad</li>
<li>random: Fix off-by-one in fast path selection of Randomizer::getBytesFromString() (<a href="https://bugs.php.net/bug.php?id=10449">#10449</a>) in <a href="https://github.com/php/php-src/commit/64d9080534">64d9080534</a> by Tim Düsterhus</li>
<li>Handle non-INDIRECT symbol table entries in <code>zend_fiber_object_gc()</code> (<a href="https://bugs.php.net/bug.php?id=10386">#10386</a>) in <a href="https://github.com/php/php-src/commit/9830204213">9830204213</a> by Arnaud Le Blanc 💜</li>
<li>Prevent dtor of generator in suspended fiber (<a href="https://bugs.php.net/bug.php?id=10462">#10462</a>) in <a href="https://github.com/php/php-src/commit/1173c2e64a">1173c2e64a</a> by Arnaud Le Blanc 💜</li>
<li>Fix overflow check in OnUpdateMemoryConsumption (<a href="https://bugs.php.net/bug.php?id=10456">#10456</a>) in <a href="https://github.com/php/php-src/commit/d7de73b551">d7de73b551</a> by Niels Dossche</li>
<li>Fix missing <code>zend_shared_alloc_unlock()</code> (<a href="https://bugs.php.net/bug.php?id=10405">#10405</a>) in <a href="https://github.com/php/php-src/commit/dc6fbec037">dc6fbec037</a> by Niels Dossche</li>
<li>Add test for <a href="https://github.com/php/php-src/issues/10405">GH-10405</a> in <a href="https://github.com/php/php-src/commit/306a72add4">306a72add4</a> by Arnaud Le Blanc 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10437">GH-10437</a>: Set active fiber to null on bailout (<a href="https://bugs.php.net/bug.php?id=10443">#10443</a>) in <a href="https://github.com/php/php-src/commit/284c29328e">284c29328e</a> by Aaron Piotrowski</li>
<li>Fix incorrect check in phar tar parsing in <a href="https://github.com/php/php-src/pull/10464">GH-10464</a> by Niels Dossche</li>
</ul>

</details>

<hr />

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP Core Roundup #8]]></title>
            <link href="https://thephp.foundation/blog/2022/11/30/php-core-roundup-8/"/>
            <updated>2022-11-30T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2022/11/30/php-core-roundup-8/</id>
            <content type="html"><![CDATA[<p>Welcome to the eighth issue of <em>PHP Core Roundup</em> series! This issue was supposed to bring the great news of PHP 8.2 release, but the PHP 8.2 release date was pushed to December 8, and yet this issue is still full of exciting new updates about what’s being discussed and improved in PHP.</p>

<blockquote>
  <p>The PHP Foundation currently supports six part-time PHP contributors who work on maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>
</blockquote>

<p><br>
We publish the posts on our website, and you can subscribe to a newsletter; You don’t necessarily have to be a PHP Foundation backer to follow <em>PHP Core Roundup</em>.</p>

<p><div class="px-4 pt-3 border-b border-t -mx-4 border-gray-200">
    <div class="bg-white py-8">
        <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 lg:grid-cols-12 lg:gap-8">
            <div class="max-w-xl text-4xl font-medium tracking-tight text-gray-900 lg:col-span-6">
                Subscribe to PHP Core Roundup newsletter
            </div>
            <form method="POST"
                  action="https://php-foundation.mailcoach.app/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056"
                  class="w-full max-w-md lg:col-span-6">
                <div class="flex gap-x-4">
                    <label for="email-address" class="sr-only">Email address</label>
                    <input id="email-address" name="email" type="email" autocomplete="email" required
                           class="min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                           placeholder="Enter your email">
                    <button type="submit"
                            class="inline-block py-2 no-underline px-6 !text-white bg-[#7f52ff] rounded-3xl hover:bg-[rgba(127,82,255,.8)]">
                        Subscribe
                    </button>
                </div>
                <div class="mt-4 text-sm leading-6 text-gray-900">
                    We care about your data.
                    Read our <a href="https://thephp.foundation/privacy-policy"
                                class="font-semibold text-indigo-600 hover:text-indigo-500 no-underline">privacy policy</a>.
                </div>
            </form>
        </div>
    </div>
</div>
</p>

<h2 id="the-php-foundation%3A-impact-and-transparency-report-2022">The PHP Foundation: Impact and Transparency Report 2022</h2>

<p><a href="https://twitter.com/pronskiy">Roman Pronskiy</a> wrote a detailed post on PHP Foundation’s impact, timeline, a summary of contributions made to PHP by PHP Foundation team, governance, financials, and more on <a href="https://thephp.foundation/blog/2022/11/22/transparency-and-impact-report-2022/">The PHP Foundation: Impact and Transparency Report 2022</a>.</p>

<h2 id="php-8.2-to-be-released-on-december-8">PHP 8.2 to be released on December 8</h2>

<p>PHP 8.2 was scheduled to be released on 24th of November. However, because it falls on the US thanksgiving holiday, and to take some time to fix some bugs reported recently, PHP 8.2’s release managers <a href="https://externals.io/message/118991">decided</a> to postpone the PHP 8.2 GA release to 8th of December.</p>

<h2 id="all-php-7-versions-are-now-end-of-life">All PHP 7 versions are now End-of-Life</h2>

<p>PHP 7.4 is the last version in the PHP 7.4 series, and it reached its end of life on November 28th. This means that there will be no more bugs or security fixes. If you are running any PHP applications on PHP 7 make sure to upgrade to PHP 8, or to obtain Long-term support from a vendor. PHP 7 <a href="https://php.watch/news/2021/11/php7-eol#stats">still holds</a> (based on <a href="https://packagist.org/php-statistics">Packagist.org</a> and <a href="https://wordpress.org/about/stats/">WordPress.org</a> data) the major usage share, so this is alarming.</p>

<h2 id="recent-rfcs%2C-merged-prs%2C-discussions%2C-and-commits">Recent RFCs, Merged PRs, Discussions, and Commits</h2>

<blockquote>
  <p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net website</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>
</blockquote>

<p><br>
Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, documentation, and the php.net website. Here is a summary of some changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<h3 id="rfc-updates">RFC Updates</h3>

<p>Following are the RFCs and major pull-requests discussed, voted, and implemented since our last update.</p>

<ul>
<li><p><strong>RFC Implemented: <a href="https://wiki.php.net/rfc/improve_unserialize_error_handling">Improve unserialize() error handling</a></strong></p>

<p>RFC by Tim Düsterhus, also mentioned in PHP Core Roundup Issue #7, is now implemented in PHP 8.3. This includes improving error handling of the <code><a href="https://www.php.net/manual/en/function.unserialize.php">unserialize()</a></code> function by increasing the error level from <code>E_NOTICE</code> to <code>E_WARNING</code>.</p>

<p>More information on <a href="https://php.watch/versions/8.3/unserialize-E-WARNING">PHP.Watch: unserialize(): Upgrade E_NOTICE errors to E_WARNING</a>.</p></li>
<li><p><strong>RFC Declined: <a href="https://wiki.php.net/rfc/destructuring_coalesce">Destructuring Coalesce</a></strong></p>

<p>Bob Weinand proposed to allow coalescing in array destructing with <code>[$a ?? $b] = $array;</code>, where <code>$a</code> is assigned <code>$b</code> if the key in the array is null or missing. This RFC vote did not reach the required ⅔ majority, and was declined.</p></li>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/datetime-exceptions">More Appropriate Date/Time Exceptions</a> 💜</strong></p>

<p>RFC by Derick Rethans, proposes to introduce Date/Time extension-specific exceptions and errors. This detailed RFC suggests more specificity in the exceptions with exception classes such as <code>DateInvalidTimeZoneException</code>, and <code>DateMalformedPeriodStringException</code> as well as promoting some of the current PHP warnings to Error exceptions.</p>

<p>Vincent Langlet also started a related <a href="https://externals.io/message/119019">mailing list discussion</a> about a week prior to this RFC.</p></li>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/readonly_amendments">Readonly amendments</a> 💜</strong></p>

<p>RFC by Nicolas Grekas and Máté Kocsis, attempts to address the shortcomings of PHP 8.1 readonly properties and 8.2 readonly classes.</p>

<p>This RFC proposes allowing <code>readonly</code> classes to be extended by non-readonly classes (currently not allowed, and causes a fatal error):</p>

<pre><code class="php">readonly class A {}
class B extends A {} // Currently this produces a Fatal error
</code></pre>

<p><br></p>

<p>... and to allow reinitializing readonly properties during cloning (within the <code>__clone()</code> magic method):</p>

<pre><code class="php">class Foo {
    public function __construct(
        public readonly DateTime $bar,
        public readonly DateTime $baz
    ) {}

    public function __clone()
    {
        $this-&gt;bar = clone $this-&gt;bar; // Works
        $this-&gt;cloneBaz();
    }

    public function cloneBaz()
    {
        $this-&gt;baz = clone $this-&gt;baz; // Also works
    }
}

$foo = new Foo(new DateTime(), new DateTime());
$foo2 = clone $foo;

// No error, Foo::$bar and Foo::$baz are cloned deeply
</code></pre>

<p><br></p></li>
<li><p><strong>RFC Accepted: <a href="https://wiki.php.net/rfc/randomizer_additions">Randomizer Additions</a></strong></p>

<p>RFC by Joshua Rüsweg and Tim Düsterhus, proposes to add new “building block” methods to <code>\Random\Randomizer</code> (added in PHP 8.2) that implement commonly useful operations that are either verbose or very hard to implement in userland.</p>

<p>The RFC proposes to add two new methods: <code>getBytesFromString</code>, to generate a random string containing specific characters, and <code>getFloat</code>/<code>nextFloat</code>, to generate a random floating point value.
The vote was accepted, and is pending implementation.</p></li>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/arbitrary_static_variable_initializers">Arbitrary static variable initializers</a> 💜</strong></p>

<p>RFC by Ilija Tovilo, proposing a series of changes and improvements to static variables in PHP.</p>

<p>The RFC suggests static variable initializers to contain arbitrary expressions. Currently, static variables can only be initialized with constant expressions:</p>

<pre><code class="php">function foo() {
    static $p = 16; // Allowed
    static $p = getValue(); // Not allowed, proposed to allow
}
</code></pre>

<p><br />
Further, it also proposes to disallow redeclaring static variables (in the scope of the same function) at compile-time with a fatal error, along with some changes in the Reflection API to account for the changes.</p></li>
</ul>

<h3 id="notable-mailing-list-discussions">Notable Mailing List Discussions</h3>

<ul>
<li><a href="https://externals.io/message/118865">Microseconds to error log</a></li>
<li><a href="https://externals.io/message/119025">Remove warning when parsing datetime with + symbol</a></li>
<li><a href="https://externals.io/message/118994">Asymmetric Visibility, with readonly</a></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Following are some changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements. There are automated unit and integration tests for each of these changes,  the PHP core developers review all pull requests.</p>

<ul>
<li>Fix stub type info for <code>posix_getrlimit</code> in <a href="https://github.com/php/php-src/commit/c3b9b0f9a7">c3b9b0f9a7</a> by Ilija Tovilo 💜</li>
<li>Fix pre-PHP 8.2 compatibility for <code>php_mt_rand_range()</code> with <code>MT_RAND_PHP</code> in <a href="https://github.com/php/php-src/pull/9839">GH-9839</a> by Tim Düsterhus</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9754">GH-9754</a>: SaltStack hangs when running php-fpm 8.1.11 in <a href="https://github.com/php/php-src/commit/1c5844aa3e">1c5844aa3e</a> by Jakub Zelenka 💜</li>
<li>Do not display the value of UNKNOWN constants in the manual in <a href="https://github.com/php/php-src/pull/9843">GH-9843</a> by Máté Kocsis 💜</li>
<li>Match FPM status pool's <code>expose_php</code> with parent in <a href="https://github.com/php/php-src/commit/e4a1b80a5f">e4a1b80a5f</a> by Dominic H</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9770">GH-9770</a>: Add small timeout in status-listen test in <a href="https://github.com/php/php-src/commit/8229649045">8229649045</a> by Jakub Zelenka 💜</li>
<li>Fix memory leak in <a href="https://github.com/php/php-src/commit/482ae71fda">482ae71fda</a> by Dmitry Stogov</li>
<li>socket add <code>socket_atmark</code> support in <a href="https://github.com/php/php-src/commit/4c4e72f149">4c4e72f149</a> by David CARLIER</li>
<li>Use <code>zend_call_known_function()</code> in <code>ext-pgsql</code> instead of building FCI/FCC in <a href="https://github.com/php/php-src/commit/4f8d10791b">4f8d10791b</a> by George Peter Banyard 💜</li>
<li>Use <code>zend_call_known_function()</code> in <code>ext-mysqli</code> instead of building FCI/FCC in <a href="https://github.com/php/php-src/commit/c0f2727e55">c0f2727e55</a> by George Peter Banyard 💜</li>
<li><code>labeler.yml</code>: set top-level read-only permissions in <a href="https://github.com/php/php-src/pull/9862">GH-9862</a> by Pedro Nacht</li>
<li>Timelib: Updated to version 2022.6 (2022f) in <a href="https://github.com/php/php-src/commit/2b5bed904e">2b5bed904e</a> by Derick Rethans 💜</li>
<li>Don’t reset func in <code>zend_closure_internal_handler</code> in <a href="https://github.com/php/php-src/commit/8dabbda8bc">8dabbda8bc</a> by Florian Sowade</li>
<li>Tidy up buffer preparation in mysqlnd in <a href="https://github.com/php/php-src/pull/9834">GH-9834</a> by Kamil Tekiela</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9829">GH-9829</a>: Bug in refactoring Windows shmat() function in <a href="https://github.com/php/php-src/pull/9873">GH-9873</a> by Christoph M. Becker</li>
<li>Fix potential NULL pointer dereference Windows <code>shm*()</code> functions in <a href="https://github.com/php/php-src/pull/9872">GH-9872</a> by Christoph M. Becker</li>
<li>Fix observing inherited internal functions in <a href="https://github.com/php/php-src/commit/b30448f48f">b30448f48f</a> by Bob Weinand</li>
<li>Store a reference to closures in the FCC in <a href="https://github.com/php/php-src/commit/7c45b95894">7c45b95894</a> by George Peter Banyard 💜</li>
<li>Add various APIs to handle FCC structures in <a href="https://github.com/php/php-src/commit/de4cfff5f6">de4cfff5f6</a> by George Peter Banyard 💜</li>
<li>Refactor SPL Callback filter to only use FCC in <a href="https://github.com/php/php-src/commit/8d5d3fd035">8d5d3fd035</a> by George Peter Banyard 💜</li>
<li>Only use FCC for SQLite3 user defined functions/collations/authorizer in <a href="https://github.com/php/php-src/commit/29bb426933">29bb426933</a>, <a href="https://github.com/php/php-src/commit/37aea43eed">37aea43eed</a>, and <a href="https://github.com/php/php-src/commit/d105958603">d105958603</a> by George Peter Banyard 💜</li>
<li>Only use FCC for libxml entity loader callback in <a href="https://github.com/php/php-src/commit/fb114bf45b">fb114bf45b</a> by George Peter Banyard 💜</li>
<li>Fix hardcoded paths in test in <a href="https://github.com/php/php-src/commit/4935e10fc8">4935e10fc8</a> by Bob Weinand</li>
<li>Delay releasing closures until after observer end in <a href="https://github.com/php/php-src/commit/8e49d7f32f">8e49d7f32f</a> by Bob Weinand</li>
<li>Properly deal with internal attributes used on promoted properties in <a href="https://github.com/php/php-src/pull/9661">GH-9661</a> by Martin Schröder</li>
<li>Fix fake closure leaking when called from internal func in <a href="https://github.com/php/php-src/pull/9884">GH-9884</a> by Ilija Tovilo 💜</li>
<li>Migrate i386 to GitHub actions in <a href="https://github.com/php/php-src/pull/9856">GH-9856</a> by Ilija Tovilo 💜</li>
<li>Fix duplicate SKIPIF section in <a href="https://github.com/php/php-src/commit/d2c663441d">d2c663441d</a> by Ilija Tovilo 💜</li>
<li>Fix ext section in <a href="https://github.com/php/php-src/commit/bca1e1f557">bca1e1f557</a> by Ilija Tovilo 💜</li>
<li>Disable CLI server <code>pdeathsig</code> test on 32-bit GitHub actions in <a href="https://github.com/php/php-src/commit/1fb40b501d">1fb40b501d</a> by Ilija Tovilo 💜</li>
<li>Fix generator memory leaks when interrupted during argument evaluation in <a href="https://github.com/php/php-src/pull/9756">GH-9756</a> by Arnaud Le Blanc 💜</li>
<li>Fix memory leak in <a href="https://github.com/php/php-src/commit/f31f464cec">f31f464cec</a> by Dmitry Stogov</li>
<li>Don't check "fake" closures (fix assertion) in <a href="https://github.com/php/php-src/commit/05b63b1593">05b63b1593</a> by Dmitry Stogov</li>
<li>Fiber: add shadow stack support in <a href="https://github.com/php/php-src/pull/9283">GH-9283</a> by Chen, Hu</li>
<li>Don't skip test on Windows due to missing <code>ext/posix</code> in <a href="https://github.com/php/php-src/pull/9886">GH-9886</a> by Christoph M. Becker</li>
<li>Fix cross-compilation for <code>copy_file_range</code> in <a href="https://github.com/php/php-src/commit/5d7b64be1d">5d7b64be1d</a> by Bob Weinand</li>
<li>Move <code>observer_declared_function_notify</code> until after <code>pass_two()</code> in <a href="https://github.com/php/php-src/commit/6bd8f40291">6bd8f40291</a> by Bob Weinand</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9905">GH-9905</a>: <code>constant()</code> behaves inconsistent when class is undefined in <a href="https://github.com/php/php-src/pull/9907">GH-9907</a> by Christoph M. Becker</li>
<li>Do not report MINIT stage internal class aliases in extensions in <a href="https://github.com/php/php-src/commit/182314c317">182314c317</a> by Bob Weinand</li>
<li>Fix opcache preload with observers enabled in <a href="https://github.com/php/php-src/commit/4052bbf0e3">4052bbf0e3</a> by Bob Weinand</li>
<li>Fix crash reading <code>module_entry</code> after <code>DL_UNLOAD()</code> when module already loaded in <a href="https://github.com/php/php-src/commit/0bfdd5691c">0bfdd5691c</a> by Bob Weinand</li>
<li>Make the usage of the role attribute more clear in <a href="https://github.com/php/php-src/pull/9901">GH-9901</a> by Máté Kocsis 💜</li>
<li>No more need to cater to <code>mime_magic</code> extension in <a href="https://github.com/php/php-src/commit/5aa13183ae">5aa13183ae</a> by Christoph M. Becker</li>
<li>Disable opcache <code>file_cache</code> for observer preloading test in <a href="https://github.com/php/php-src/commit/09f071e63b">09f071e63b</a> by Ilija Tovilo 💜</li>
<li>Remove unused PHP 8.1 BC layer in JIT in <a href="https://github.com/php/php-src/pull/9937">GH-9937</a> by Ilija Tovilo 💜</li>
<li>Skip tests if extension or SAPI is not included. in <a href="https://github.com/php/php-src/pull/9939">GH-9939</a> by dwo0</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9923">GH-9923</a>: Add the <code>SIGINFO</code> constant in pcntl for system supporting it in <a href="https://github.com/php/php-src/commit/e0e347b4a8">e0e347b4a8</a> by David Carlier</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9298">GH-9298</a>: remove all registered signal handlers in pcntl RSHUTDOWN in <a href="https://github.com/php/php-src/commit/5ecbb1b39d">5ecbb1b39d</a> by Erki Aring</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9535">GH-9535</a> (unintended behavior change for mb_strcut in PHP 8.1) in <a href="https://github.com/php/php-src/commit/fa0401b0b5">fa0401b0b5</a> by NathanFreeman</li>
<li>Introduce <code>TEST_FPM_EXTENSION_DIR</code> for FPM tests with shared extensions in <a href="https://github.com/php/php-src/commit/db2d32f476">db2d32f476</a> by Jakub Zelenka 💜</li>
<li>Fix memory leak in <a href="https://github.com/php/php-src/commit/a8bd342397">a8bd342397</a> by Dmitry Stogov</li>
<li>Fix regression test for <a href="https://github.com/php/php-src/issues/9535">GH-9535</a> on PHP-8.2+ in <a href="https://github.com/php/php-src/commit/d3933e0b6c">d3933e0b6c</a> by Alex Dowad</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9890">GH-9890</a>: OpenSSL legacy providers not available on Windows in <a href="https://github.com/php/php-src/pull/9894">GH-9894</a> by Christoph M. Becker</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9932">GH-9932</a>: Discards further characters for session name in <a href="https://github.com/php/php-src/pull/9940">GH-9940</a> by David Carlier</li>
<li>Escape the role attribute of namespaced classes in <a href="https://github.com/php/php-src/pull/9952">GH-9952</a> by Máté Kocsis 💜</li>
<li>Cache UTF-8-validity status of strings in GC flags in <a href="https://github.com/php/php-src/commit/d0d834429f">d0d834429f</a> by Alex Dowad</li>
<li>Promote <code>unserialize()</code> notices to warning in <a href="https://github.com/php/php-src/pull/9629">GH-9629</a> by Tim Düsterhus</li>
<li>Remove code for OS2 in <a href="https://github.com/php/php-src/commit/726d595ec7">726d595ec7</a> by George Peter Banyard 💜</li>
<li>Use <code>zend_result</code> return type instead of innacurate ones in <a href="https://github.com/php/php-src/commit/dbf54e1a8b">dbf54e1a8b</a> by George Peter Banyard 💜</li>
<li>Change conditional check in <code>disk_free_space()</code> test in <a href="https://github.com/php/php-src/commit/bab9e349cb">bab9e349cb</a> by George Peter Banyard 💜</li>
<li>Add WordPress to community build in <a href="https://github.com/php/php-src/pull/9942">GH-9942</a> by Ilija Tovilo 💜</li>
<li>Fix caching of default params with side-effects in <a href="https://github.com/php/php-src/pull/9935">GH-9935</a> by Ilija Tovilo 💜</li>
<li>Fix cross-compilation for <code>shadow_stack_exists</code> in <a href="https://github.com/php/php-src/commit/05f4b84940">05f4b84940</a> by Dmitry Stogov</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9650">GH-9650</a>: Can't initialize heap: [0x000001e7] in <a href="https://github.com/php/php-src/pull/9721">GH-9721</a> by Michael Voříšek</li>
<li>Improvements in modifier parsing in <a href="https://github.com/php/php-src/pull/9926">GH-9926</a> by Ilija Tovilo 💜</li>
<li>Use fast text conversion filters to implement mb_convert_variables in <a href="https://github.com/php/php-src/commit/b1954f5fd6">b1954f5fd6</a> by Alex Dowad</li>
<li>Avoid undefined behavior in Windows <code>ftok(3)</code> emulation in <a href="https://github.com/php/php-src/pull/9958">GH-9958</a> by Christoph M. Becker</li>
<li>Use <code>__atomic_test_and_set()</code> instead of <code>__sync_test_and_set()</code> for lsapi in <a href="https://github.com/php/php-src/pull/7997">GH-7997</a> by Andy Postnikov</li>
<li>opcache fixing w/x pages creation on freebsd 13.1 and above in <a href="https://github.com/php/php-src/pull/9896">GH-9896</a> by David CARLIER</li>
<li>Use <code>__atomic_xxxx()</code> instead of <code>__sync_xxxx()</code> for lsapi in <a href="https://github.com/php/php-src/commit/4bdfce6c1a">4bdfce6c1a</a> by George Wang</li>
<li>For UTF-7, flag unnecessary extra trailing byte in Base64 section as error in <a href="https://github.com/php/php-src/commit/a618682373">a618682373</a> by Alex Dowad</li>
<li>Fix a memory leak in tracig JIT when the same closure is called through <code>Closure::call()</code> and natively in <a href="https://github.com/php/php-src/commit/45cb3f917a">45cb3f917a</a> by Dmitry Stogov</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9883">GH-9883</a>: <code>SplFileObject::__toString()</code> reads next line in <a href="https://github.com/php/php-src/pull/9912">GH-9912</a> by George Peter Banyard 💜</li>
<li>Fix performance degradation introduced in <a href="https://github.com/php/php-src/commit/c2547ab7dc67646e287d430e44798cb9f327cf21">c2547ab7</a> in <a href="https://github.com/php/php-src/pull/9876">GH-9876</a> by George Peter Banyard 💜</li>
<li>Fix mangled kana output for JIS encoding in <a href="https://github.com/php/php-src/commit/8f84192403">8f84192403</a> by Alex Dowad</li>
<li>Handle trampolines correctly in new FCC API + usages in <a href="https://github.com/php/php-src/pull/9877">GH-9877</a> by George Peter Banyard 💜</li>
<li>php-fpm: fix Solaris port events.mechanism in <a href="https://github.com/php/php-src/pull/9959">GH-9959</a> by Petr Sumbera</li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=68207">#68207</a>: Setting fastcgi.error_header can result in a WARNING in <a href="https://github.com/php/php-src/commit/5a4520bc2b">5a4520bc2b</a> by Jakub Zelenka 💜</li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=80669">#80669</a>: FPM numeric user fails to set groups in <a href="https://github.com/php/php-src/commit/94702c56e0">94702c56e0</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8517">GH-8517</a>: FPM child pointer can be potentially uninitialized in <a href="https://github.com/php/php-src/commit/c9c1934ff0">c9c1934ff0</a> by Jakub Zelenka 💜</li>
<li>Add a note to <code>php.ini-*</code> regarding the required order for <a href="https://github.com/php/php-src/issues/8620">GH-8620</a> in <a href="https://github.com/php/php-src/commit/9416186ff1">9416186ff1</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9997">GH-9997</a>: OpenSSL engine clean up segfault in <a href="https://github.com/php/php-src/commit/3d90a24e93">3d90a24e93</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9064">GH-9064</a>: PHP fails to build if openssl was built with no-ec in <a href="https://github.com/php/php-src/commit/ce57221376">ce57221376</a> by Jakub Zelenka 💜</li>
<li>Do not resolve constants on non-linked class during preloading in <a href="https://github.com/php/php-src/pull/9975">GH-9975</a> by Arnaud Le Blanc 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/10000">GH-10000</a>: Test failures when OpenSSL compiled with <code>no-dsa</code> in <a href="https://github.com/php/php-src/commit/500b28ad04">500b28ad04</a> by Jakub Zelenka 💜</li>
<li>Simplify decoding filter for UTF-8 in <a href="https://github.com/php/php-src/commit/0109aa62ec">0109aa62ec</a> by Alex Dowad</li>
<li>Add a proper error message for ffi load in <a href="https://github.com/php/php-src/pull/9913">GH-9913</a> by Thomas PIRAS</li>
<li>Remove unnecessary usage of <code>CONST_CS</code> in <a href="https://github.com/php/php-src/pull/9685">GH-9685</a> by Jorg Adam Sowa</li>
</ul>

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[The PHP Foundation: Impact and Transparency Report 2022]]></title>
            <link href="https://thephp.foundation/blog/2022/11/22/transparency-and-impact-report-2022/"/>
            <updated>2022-11-22T00:00:00+00:00</updated>
            <id>https://thephp.foundation/blog/2022/11/22/transparency-and-impact-report-2022/</id>
            <content type="html"><![CDATA[<h2 id="executive-summary">Executive Summary</h2>

<p>At the end of 2022, The PHP Foundation is a collective of 10 volunteer administrators and 6&nbsp;part-time paid developers who make nearly half of the commits to PHP language core and extensions.</p>

<p>The collective received $580,000 in donations from organizations, and 1400 people backed or donated to The PHP Foundation individually.</p>

<p>The PHP Foundation’s main focus for 2022 has been the strengthening of maintenance for the PHP core, the project that lives in the <a href="https://github.com/php/php-src">php/php-src</a> GitHub repository. This project is the home of the PHP language, where PHP’s interpreter is developed. Everyone who uses PHP benefits in one way or another from the work that is done in this repository.</p>

<p>The 6 part-time developers employed by The PHP Foundation started in April 2022. From April through November (the time of this report), The PHP Foundation staff were responsible for nearly half of the commits and reviews made in the <a href="https://github.com/php/php-src">php/php-src</a> repository.</p>

<p>The foundation intends to expand its development efforts in 2023 by hiring an additional developer and increasing the number of hours that our current contracted developers are working. We plan to spend $678,000, including compensation and fees. Additional sponsor contributions will allow us to extend the developer team further.</p>

<p>Among other goals for 2023, we would like to address the following:</p>

<ul>
<li>Extend the foundation developers team.</li>
<li>Establish processes for continuity beyond the current administration group.</li>
<li>Improve communication with sponsors and decide on the level of involvement for them.</li>
<li>Explore strategic partnerships and marketing opportunities.</li>
<li>Improve the quality of the ideas and RFCs coming from the foundation.</li>
<li>Develop a high-level roadmap and vision for PHP changes sponsored by the foundation.</li>
</ul>

<h2 id="outset">Outset</h2>

<p>The PHP Foundation was initiated by JetBrains, Automattic, Laravel, Acquia, Zend&nbsp;by&nbsp;Perforce, Private Packagist, Symfony, Craft CMS, and Tideways. It was publicly <a href="https://blog.jetbrains.com/phpstorm/2021/11/the-php-foundation/">launched</a> on November 22, 2021.</p>

<p>Intending to ensure the PHP language's success, a group of individuals and organizations have formed The PHP Foundation. Through part-time staff, community management, and a network of partner organizations, The PHP Foundation enables sustainable maintenance of the PHP interpreter.</p>

<h2 id="organizational-growth">Organizational Growth</h2>

<p>The PHP Foundation's founding companies in 2021 included the following businesses, which took an active part in discussions about establishing and running the foundation:</p>

<p>Initial members:</p>

<ul>
<li>JetBrains</li>
<li>Automattic</li>
<li>Acquia</li>
<li>Private Packagist</li>
<li>Craft CMS</li>
<li>Tideways</li>
<li>Laravel</li>
<li>Zend by Perforce</li>
<li>Symfony</li>
<li>PrestaShop</li>
</ul>

<p>Representatives of these companies formed the initial administration group.</p>

<p>Many more companies with a vested interest in PHP’s prosperity, made a major financial contribution during the year. These are the companies that donated $10,000 or more:</p>

<ul>
<li>Livesport s.r.o.</li>
<li>OP.GG</li>
<li>EC-CUBE</li>
<li>Spryker</li>
<li>Polcode</li>
<li>Shopware AG</li>
<li>BASE, Inc.</li>
<li>Aternos GmbH</li>
<li>Digital Scholar</li>
<li>Ardennes-étape</li>
<li>RAKUS</li>
<li>Cambium Learning, Inc.</li>
<li>Paycom</li>
</ul>

<p>Overall, there are 145 organizations and 1220 individual sponsors <a href="https://opencollective.com/phpfoundation">on Open Collective</a>.</p>

<h4 id="taylor-otwell%2C-laravel%3A">Taylor Otwell, Laravel:</h4>

<blockquote>
  <p>“Laravel is honored to support the PHP Foundation initiative as it continues to preserve, maintain, and mold the future of the PHP ecosystem.“</p>
</blockquote>

<h4 id="fabien-potencier%2C-symfony%3A">Fabien Potencier, Symfony:</h4>

<blockquote>
  <p>“Symfony is very proud to support the PHP Foundation which helps build a bright and sustainable future for the PHP language, thanks to a large and diverse group of individuals and companies.“</p>
</blockquote>

<h4 id="jordi-boggiano%2C-private-packagist-%26-composer%3A">Jordi Boggiano, Private Packagist &amp; Composer:</h4>

<blockquote>
  <p>“At Private Packagist we build and maintain the tools enabling a thriving PHP ecosystem. Our customers rely on the PHP language and runtime, so our contribution to the PHP Foundation helps ensure PHP receives a reliable amount of professional care.”</p>
</blockquote>

<h4 id="dries-buytaert%2C-acquia%2C-drupal%3A">Dries Buytaert, Acquia, Drupal:</h4>

<blockquote>
  <p>“Acquia and the Drupal community are proud to have helped with getting The PHP Foundation in place to provide broader and more resilient support to the mission of advancing and developing PHP. We are elated by the foundation's progress in a year and look forward to its future endeavors.”</p>
</blockquote>

<h2 id="events-timeline">Events Timeline</h2>

<p><img src="/assets/post-images/2022/report-2022/php-foundation-timeline-2022.svg" alt="Timeline" /></p>

<h2 id="the-php-foundation-staff">The PHP Foundation Staff</h2>

<h3 id="application-process">Application Process</h3>

<p>We accepted applications for sponsorship from November through December 2021. We received about 100 resumes, and we’ve chosen 6 developers with a proven track record of contributions to the PHP language. We’ve created a shortlist of promising candidates for future expansion of the program or to replace participants, if necessary.</p>

<p>Up until March 2022, we were negotiating the text of contracts. The legal departments at JetBrains and OpenCollective both supported us in this.</p>

<h3 id="the-team-as-of-2022">The team as of 2022</h3>

<p>Starting in April, we contracted 6 developers to work on PHP:</p>

<ul>
<li><strong>Arnaud Le Blanc</strong> <a href="https://github.com/arnaud-lb">@arnaud-lb</a></li>
<li><strong>Derick Rethans</strong> <a href="https://github.com/derickr">@derickr</a></li>
<li><strong>George Peter Banyard</strong> <a href="https://github.com/Girgias">@Girgias</a></li>
<li><strong>Ilija Tovilo</strong> <a href="https://github.com/iluuu1994">@iluuu1994</a></li>
<li><strong>Jakub Zelenka</strong> <a href="https://github.com/bukka">@bukka</a></li>
<li><strong>Máté Kocsis</strong> <a href="https://github.com/kocsismate">@kocsismate</a></li>
</ul>

<h3 id="compensation-considerations">Compensation Considerations</h3>

<p>We have thought long and hard about what approach to use for remuneration. Given the different experiences of the chosen developers and the limited budget, we devised the following scheme.</p>

<p>We would take a conservative (safe) approach and accept 7 candidates with a proven record of work. We’d pay developers hourly, with a factor based on experience. This rate was chosen to meet developers' expectations, but to remain within the allocated budget.</p>

<p>In 2022, we offered all developers a 6-month contract to start. They all work as freelance contractors. In 2023, we offer yearly contracts.</p>

<p>With such an approach, we were planning to spend $329,000 per year, which was a safe number based on the funding at that time.</p>

<p>One of the candidates dropped out, and we eventually accepted only 6 candidates. That is one of the reasons we spent less money than expected. But sticking to our conservative approach made more sense to us in the initial year than spending everything at once, as it allowed us to build up savings to even out fluctuating income in the future.</p>

<h2 id="goals-for-2022">Goals for 2022</h2>

<p>The primary goal for the foundation in 2022 was to <strong>hire developers to maintain the PHP core</strong>.</p>

<p>We consider this goal accomplished. We'll look in depth at how much work has been done in the next section. The foundation demonstrated its reliability and effectiveness. We rolled out a sustainable process for supporting contributors. Now we are ready to scale and grow.</p>

<h2 id="contributions-to-php-core">Contributions to PHP Core</h2>

<p>The PHP Foundation’s main focus has been contributions to <a href="https://github.com/php/php-src">php/php-src</a>, the primary repository for the PHP language.</p>

<h3 id="day-to-day-work">Day-to-day work</h3>

<p>On a daily basis, the PHP Foundation staff team contributes to the open-source repositories of the <a href="https://github.com/php">PHP GitHub organization</a>. The foundation team contributes in many forms: filing issues, reviewing pull requests, participating in discussions on mailing lists, triaging issues, submitting RFC proposals.</p>

<p>In this document, four categories of contributions are presented in more detail: commits to php/src, reviews of pull requests on php/src, submitted RFC documents, and documentation work.</p>

<h3 id="commits-to-php">Commits to PHP</h3>

<p>The following chart summarizes the number of commits made to the php/php-src repository from April to November, 2022.</p>

<ul>
<li>Total by The PHP Foundation: 683</li>
<li>Total other: 885</li>
</ul>

<p><img src="/assets/post-images/2022/report-2022/commits_chart.svg" alt="Commits chart" /></p>

<h3 id="reviews">Reviews</h3>

<p>The diagram summarizes the number of pull request reviews made in the php/php-src repository from April to November, 2022.</p>

<ul>
<li>Total by The PHP Foundation: 283</li>
<li>Total other: 551</li>
</ul>

<p><img src="/assets/post-images/2022/report-2022/reviews_chart.svg" alt="Reviews chart" /></p>

<h3 id="rfcs">RFCs</h3>

<p>Below are the RFC proposals authored or co-authored by The PHP Foundation developers from April to November, 2022.</p>

<ul>
<li><a href="https://wiki.php.net/rfc/readonly_classes">Readonly classes</a></li>
<li><a href="https://wiki.php.net/rfc/deprecate_dollar_brace_string_interpolation">Deprecate ${} string interpolation</a></li>
<li><a href="https://wiki.php.net/rfc/null-false-standalone-types">Allow null and false as stand-alone types</a></li>
<li><a href="https://wiki.php.net/rfc/true-type">Add true type</a></li>
<li><a href="https://wiki.php.net/rfc/dnf_types">Disjunctive Normal Form Types</a></li>
<li><a href="https://wiki.php.net/rfc/fetch_property_in_const_expressions">Fetch properties of enums in const expressions</a></li>
<li><a href="https://wiki.php.net/rfc/dynamic_class_constant_fetch">Dynamic class constant fetch</a></li>
<li><a href="https://wiki.php.net/rfc/auto-capture-closure">Short Closures 2.0</a></li>
</ul>

<h2 id="the-php-foundation-brand-%26-public-channels">The PHP Foundation brand &amp; public channels</h2>

<p>The PHP Foundation represents a community of core PHP developers and advocates for the PHP programming language.The channels listed below were used by the PHP Foundation for public communication:</p>

<ul>
<li>9,302 Twitter followers <a href="https://twitter.com/thephpf">https://twitter.com/thephpf</a></li>
<li>1,533 LinkedIn page followers <a href="https://www.linkedin.com/company/85931483/admin/">https://www.linkedin.com/company/85931483/admin/</a></li>
<li>1,441 Collective updates subscribers <a href="https://opencollective.com/phpfoundation/updates">https://opencollective.com/phpfoundation/updates</a></li>
<li>650 PHP Core Roundup subscribers <a href="https://thephp.foundation/blog/tag/roundup/">https://thephp.foundation/blog/tag/roundup/</a></li>
</ul>

<p><a href="https://twitter.com/Ayeshlive">Ayesh Karunaratne</a> assisted us in publishing 7 iterations of the PHP Core Roundup blog posts, which provide a summary of the most recent PHP core updates, bug fixes, proposals, and other developments:</p>

<ul>
<li><a href="https://thephp.foundation/blog/tag/roundup/">https://thephp.foundation/blog/tag/roundup/</a></li>
</ul>

<p>The PHP Foundation admins also participated in two conferences:</p>

<ul>
<li>Forum PHP, Paris [<a href="https://www.youtube.com/watch?v=JBPtPy9iSP0">video</a>]</li>
<li>International PHP Conference, Munich [<a href="https://www.youtube.com/watch?v=Nmb-_66RArs">video</a>]</li>
</ul>

<p>Published a case study on the OpenCollective blog:</p>

<ul>
<li><a href="https://blog.opencollective.com/php-foundation-alive-and-kicking/">https://blog.opencollective.com/php-foundation-alive-and-kicking/</a></li>
</ul>

<p>The PHP Foundation won the Next Generation Award at the Open Source Awards by All Things Open:</p>

<ul>
<li><a href="https://twitter.com/MLHacks/status/1587805042282840073">https://twitter.com/MLHacks/status/1587805042282840073</a></li>
</ul>

<h2 id="the-php-foundation-governance">The PHP Foundation Governance</h2>

<p>The Administration group consists of veteran PHP core developers, PHP community leaders, representatives of the founding companies, and other key stakeholders.</p>

<p>We spent some time discussing how to organize management effectively. However, we concluded that it was worth focusing on our primary goal early on.</p>

<p>So for the first year, we decided to keep the group of administrators declared at the launch active. And make it invite-only for the first year.</p>

<p>This allowed us to move faster. However, the negative effect is definitely the lack of transparency in the process.</p>

<p>Nevertheless, this group will continue in 2023. And one of the goals will be to provide more transparency and establish a level of involvement for other key stakeholders from the PHP world.</p>

<p>We intend to make the ground rules more clear over the coming year, including the terms of participating in The PHP Foundation's governance and technical steering activities.</p>

<h2 id="financial-report">Financial report</h2>

<p>In 2022, PHP Foundation was financially backed by organizations and individuals with the goal of paying a competitive salary to as many core developers as possible.</p>

<table>
<thead>
<tr>
  <th></th>
</tr>
</thead>
<tbody>
<tr>
  <td>• Total contributed by sponsors and individuals before fees: $712,484</td>
</tr>
<tr>
  <td>• Fees: $90,273</td>
</tr>
<tr>
  <td>• Total raised: $622,211</td>
</tr>
<tr>
  <td>&nbsp;</td>
</tr>
<tr>
  <td>• From organizations: 77%</td>
</tr>
<tr>
  <td>• From individuals: 23%</td>
</tr>
<tr>
  <td>&nbsp;</td>
</tr>
<tr>
  <td>• Recurring: 39.5%</td>
</tr>
<tr>
  <td>• One-Time: 60.5%</td>
</tr>
<tr>
  <td>&nbsp;</td>
</tr>
<tr>
  <td>• Paid to developers in 2022: $133,285</td>
</tr>
<tr>
  <td>• Current balance: $488,635</td>
</tr>
<tr>
  <td>&nbsp;</td>
</tr>
<tr>
  <td>• Planned expenses for 2023: $678,000</td>
</tr>
</tbody>
</table>

<p><br>
All incoming and outgoing transactions of The PHP Foundation are publicly available to view for anyone, not just sponsors of the foundation: <a href="https://opencollective.com/phpfoundation#category-BUDGET">https://opencollective.com/phpfoundation#category-BUDGET</a></p>

<h3 id="all-financial-contributions-from-sponsors">All Financial Contributions From Sponsors</h3>

<p><a href="https://opencollective.com/phpfoundation/transactions?kind=ADDED_FUNDS%2CCONTRIBUTION"><img src="/assets/post-images/2022/report-2022/financial_contributions.png" alt="Financial Contributions chart" /></a></p>

<h3 id="expenses">Expenses</h3>

<p><a href="https://opencollective.com/phpfoundation/expenses">https://opencollective.com/phpfoundation/expenses</a></p>

<p><a href="https://opencollective.com/phpfoundation/expenses"><img src="/assets/post-images/2022/report-2022/expenses.png" alt="Expenses chart" /></a></p>

<h2 id="why-did-we-not-spend-all-donated-funds%3F">Why did we not spend all donated funds?</h2>

<p>There were multiple reasons for this:</p>

<ul>
<li>Our projected budget was planned in December 2021, and the developers only started working in April.</li>
<li>One of the top-rated candidates to whom we had allocated a large budget dropped out for 2022 and this significantly reduced our spending.</li>
<li>Being a young organization, we felt that having a bigger buffer is a wiser choice for the first year.</li>
</ul>

<h2 id="goals-for-2023">Goals for 2023</h2>

<p>Our foremost mission remains the same: <strong>maintain and develop the PHP language</strong>. In this regard, we have two groups of more specific goals for the next year.</p>

<p>From an organization perspective, the main challenge will be to grow in a way that ensures the long-term sustainability of the foundation and the PHP language.</p>

<p>From a technical standpoint, we'd like our work to be more meaningful, in the interest of PHP users, and oriented toward a common direction rather than uncoordinated, more or less random ideas.</p>

<h3 id="organization-goals">Organization goals</h3>

<ul>
<li>Extend the foundation developers team.</li>
<li>Grow the community of the foundation.</li>
<li>Improve communication and provide clear benefits for sponsors.</li>
<li>Explore strategic partnerships and marketing opportunities.</li>
</ul>

<h3 id="technical-goals">Technical goals</h3>

<ul>
<li>Ongoing maintenance and development of  the PHP core.</li>
<li>Improve the quality of the ideas and RFCs coming from the foundation.</li>
<li>Develop a high-level roadmap and vision for PHP changes sponsored by the foundation.</li>
</ul>

<h2 id="budget-plan-for-2023">Budget plan for 2023</h2>

<p>In 2022, all sponsored developers worked part-time, between 1 and 2 days per week.</p>

<p>In 2023, almost all developers indicated a desire to increase the amount of time they devote to PHP, ranging from working on PHP for 2 days a week to full-time.</p>

<p>As a result, we will pay for the equivalent time of nearly 4 full-time employees in 2023, which is close to double the 2022 commitment.</p>

<p>With this plan, we expect to spend about $600,000 per year on paying developers’ compensation.</p>

<p>Our collaboration with the OpenCollective platform has been positive, and we plan to continue operating under the umbrella of OpenSourceCollective in 2023. This means that in addition to the above-mentioned costs, we will also incur 10% in OpenCollective fees and about 3% in payment processing fees.</p>

<h3 id="what-if-the-foundation-has-extra-funds-in-2023%3F">What if the foundation has extra funds in 2023?</h3>

<p>We'd like to set aside at least 50% of an annual budget in reserves for unforeseen events.</p>

<p>If the PHP Foundation receives additional donations, we would be delighted to scale our efforts:</p>

<ul>
<li>Open the application form for new developers</li>
<li>Hire a technical writer to work on the documentation</li>
</ul>

<h2 id="thank-you%21">Thank you!</h2>

<p>The PHP language is a living entity and, as such, requires continuous support to address developer issues, resolve security vulnerabilities, and evolve to meet the needs of the future.</p>

<p>Based on the strong first year of the foundation, we are excited to continue and multiply the efforts in the next years.</p>

<p>With your help, we continue the mission to support, advance, and develop the PHP language.</p>
]]></content>
        </entry>
    </feed>